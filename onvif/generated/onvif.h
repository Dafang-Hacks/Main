// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* /root/source/onvif/generated/onvif.h
   Generated by wsdl2h 2.8.17r from wsdl/ptz.wsdl wsdl/remotediscovery.wsdl wsdl/deviceio.wsdl wsdl/event.wsdl wsdl/receiver.wsdl wsdl/media.wsdl wsdl/search.wsdl wsdl/devicemgmt.wsdl wsdl/imaging.wsdl wsdl/types.xsd wsdl/common.xsd wsdl/onvif.xsd and ./wsdl/typemap.dat
   2020-03-02 22:42:24 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on /root/source/onvif/generated/onvif.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// dom.h declares the DOM xsd__anyType object (compiler and link with dom.cpp)
#import "dom.h"

// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"
#import "wsdd10.h"	// wsdd10 = <http://schemas.xmlsoap.org/ws/2005/04/discovery>
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tptz = "http://www.onvif.org/ver20/ptz/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
tdn = "http://www.onvif.org/ver10/network/wsdl"
tmd = "http://www.onvif.org/ver10/deviceIO/wsdl"
tev = "http://www.onvif.org/ver10/events/wsdl"
wsrfrw = "http://docs.oasis-open.org/wsrf/rw-2"
wsrfr = "http://docs.oasis-open.org/wsrf/r-2"
trv = "http://www.onvif.org/ver10/receiver/wsdl"
trt = "http://www.onvif.org/ver10/media/wsdl"
tse = "http://www.onvif.org/ver10/search/wsdl"
tds = "http://www.onvif.org/ver10/device/wsdl"
timg = "http://www.onvif.org/ver20/imaging/wsdl"
ns1 = "http://www.onvif.org/ver10/pacs"

*/

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tdn	"http://www.onvif.org/ver10/network/wsdl"
//gsoap tdn   schema namespace:	http://www.onvif.org/ver10/network/wsdl
//gsoap tdn   schema elementForm:	qualified
//gsoap tdn   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tmd	"http://www.onvif.org/ver10/deviceIO/wsdl"
//gsoap tmd   schema namespace:	http://www.onvif.org/ver10/deviceIO/wsdl
//gsoap tmd   schema elementForm:	qualified
//gsoap tmd   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_empty	""
//gsoap empty schema namespace:	
//gsoap empty schema form:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trv	"http://www.onvif.org/ver10/receiver/wsdl"
//gsoap trv   schema namespace:	http://www.onvif.org/ver10/receiver/wsdl
//gsoap trv   schema elementForm:	qualified
//gsoap trv   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tse	"http://www.onvif.org/ver10/search/wsdl"
//gsoap tse   schema namespace:	http://www.onvif.org/ver10/search/wsdl
//gsoap tse   schema elementForm:	qualified
//gsoap tse   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_timg	"http://www.onvif.org/ver20/imaging/wsdl"
//gsoap timg  schema namespace:	http://www.onvif.org/ver20/imaging/wsdl
//gsoap timg  schema elementForm:	qualified
//gsoap timg  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns1	"http://www.onvif.org/ver10/pacs"
//gsoap ns1   schema namespace:	http://www.onvif.org/ver10/pacs
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/*
Warning -d option used: -p option disabled and xsd:anyType base class removed.
Use run-time SOAP_DOM_NODE flag to deserialize class instances into DOM nodes.
A DOM node is represented by the xsd__anyType object implemented in dom.cpp.
*/


/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: non-NULL for DIMEM/MIME/MTOM XOP attachments only
	struct soap *soap;
};

/// Built-in type "xs:duration".
#import "custom/duration.h"

/// Built-in type "xs:hexBinary".
class xsd__hexBinary { unsigned char *__ptr; int __size; };

// Imported type "http://www.w3.org/2005/08/addressing":EndpointReferenceType defined by wsa5__EndpointReferenceType

/// Primitive built-in type "xs:NCName"
typedef std::string xsd__NCName;

/// Primitive built-in type "xs:anySimpleType"
typedef std::string xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI"
typedef std::string xsd__anyURI;

/// Primitive built-in type "xs:integer"
typedef std::string xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger"
typedef std::string xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token"
typedef std::string xsd__token;

// Imported element "http://www.w3.org/2004/08/xop/include":Include declared as _xop__Include

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class tptz__Capabilities.
class tptz__Capabilities;

//  Forward declaration of class _tptz__GetServiceCapabilities.
class _tptz__GetServiceCapabilities;

//  Forward declaration of class _tptz__GetServiceCapabilitiesResponse.
class _tptz__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tptz__GetNodes.
class _tptz__GetNodes;

//  Forward declaration of class _tptz__GetNodesResponse.
class _tptz__GetNodesResponse;

//  Forward declaration of class _tptz__GetNode.
class _tptz__GetNode;

//  Forward declaration of class _tptz__GetNodeResponse.
class _tptz__GetNodeResponse;

//  Forward declaration of class _tptz__GetConfigurations.
class _tptz__GetConfigurations;

//  Forward declaration of class _tptz__GetConfigurationsResponse.
class _tptz__GetConfigurationsResponse;

//  Forward declaration of class _tptz__GetConfiguration.
class _tptz__GetConfiguration;

//  Forward declaration of class _tptz__GetConfigurationResponse.
class _tptz__GetConfigurationResponse;

//  Forward declaration of class _tptz__SetConfiguration.
class _tptz__SetConfiguration;

//  Forward declaration of class _tptz__SetConfigurationResponse.
class _tptz__SetConfigurationResponse;

//  Forward declaration of class _tptz__GetConfigurationOptions.
class _tptz__GetConfigurationOptions;

//  Forward declaration of class _tptz__GetConfigurationOptionsResponse.
class _tptz__GetConfigurationOptionsResponse;

//  Forward declaration of class _tptz__SendAuxiliaryCommand.
class _tptz__SendAuxiliaryCommand;

//  Forward declaration of class _tptz__SendAuxiliaryCommandResponse.
class _tptz__SendAuxiliaryCommandResponse;

//  Forward declaration of class _tptz__GetPresets.
class _tptz__GetPresets;

//  Forward declaration of class _tptz__GetPresetsResponse.
class _tptz__GetPresetsResponse;

//  Forward declaration of class _tptz__SetPreset.
class _tptz__SetPreset;

//  Forward declaration of class _tptz__SetPresetResponse.
class _tptz__SetPresetResponse;

//  Forward declaration of class _tptz__RemovePreset.
class _tptz__RemovePreset;

//  Forward declaration of class _tptz__RemovePresetResponse.
class _tptz__RemovePresetResponse;

//  Forward declaration of class _tptz__GotoPreset.
class _tptz__GotoPreset;

//  Forward declaration of class _tptz__GotoPresetResponse.
class _tptz__GotoPresetResponse;

//  Forward declaration of class _tptz__GetStatus.
class _tptz__GetStatus;

//  Forward declaration of class _tptz__GetStatusResponse.
class _tptz__GetStatusResponse;

//  Forward declaration of class _tptz__GotoHomePosition.
class _tptz__GotoHomePosition;

//  Forward declaration of class _tptz__GotoHomePositionResponse.
class _tptz__GotoHomePositionResponse;

//  Forward declaration of class _tptz__SetHomePosition.
class _tptz__SetHomePosition;

//  Forward declaration of class _tptz__SetHomePositionResponse.
class _tptz__SetHomePositionResponse;

//  Forward declaration of class _tptz__ContinuousMove.
class _tptz__ContinuousMove;

//  Forward declaration of class _tptz__ContinuousMoveResponse.
class _tptz__ContinuousMoveResponse;

//  Forward declaration of class _tptz__RelativeMove.
class _tptz__RelativeMove;

//  Forward declaration of class _tptz__RelativeMoveResponse.
class _tptz__RelativeMoveResponse;

//  Forward declaration of class _tptz__AbsoluteMove.
class _tptz__AbsoluteMove;

//  Forward declaration of class _tptz__AbsoluteMoveResponse.
class _tptz__AbsoluteMoveResponse;

//  Forward declaration of class _tptz__GeoMove.
class _tptz__GeoMove;

//  Forward declaration of class _tptz__GeoMoveResponse.
class _tptz__GeoMoveResponse;

//  Forward declaration of class _tptz__Stop.
class _tptz__Stop;

//  Forward declaration of class _tptz__StopResponse.
class _tptz__StopResponse;

//  Forward declaration of class _tptz__GetPresetTours.
class _tptz__GetPresetTours;

//  Forward declaration of class _tptz__GetPresetToursResponse.
class _tptz__GetPresetToursResponse;

//  Forward declaration of class _tptz__GetPresetTour.
class _tptz__GetPresetTour;

//  Forward declaration of class _tptz__GetPresetTourResponse.
class _tptz__GetPresetTourResponse;

//  Forward declaration of class _tptz__GetPresetTourOptions.
class _tptz__GetPresetTourOptions;

//  Forward declaration of class _tptz__GetPresetTourOptionsResponse.
class _tptz__GetPresetTourOptionsResponse;

//  Forward declaration of class _tptz__CreatePresetTour.
class _tptz__CreatePresetTour;

//  Forward declaration of class _tptz__CreatePresetTourResponse.
class _tptz__CreatePresetTourResponse;

//  Forward declaration of class _tptz__ModifyPresetTour.
class _tptz__ModifyPresetTour;

//  Forward declaration of class _tptz__ModifyPresetTourResponse.
class _tptz__ModifyPresetTourResponse;

//  Forward declaration of class _tptz__OperatePresetTour.
class _tptz__OperatePresetTour;

//  Forward declaration of class _tptz__OperatePresetTourResponse.
class _tptz__OperatePresetTourResponse;

//  Forward declaration of class _tptz__RemovePresetTour.
class _tptz__RemovePresetTour;

//  Forward declaration of class _tptz__RemovePresetTourResponse.
class _tptz__RemovePresetTourResponse;

//  Forward declaration of class _tptz__GetCompatibleConfigurations.
class _tptz__GetCompatibleConfigurations;

//  Forward declaration of class _tptz__GetCompatibleConfigurationsResponse.
class _tptz__GetCompatibleConfigurationsResponse;

//  Forward declaration of class tt__DeviceEntity.
class tt__DeviceEntity;

//  Forward declaration of class tt__IntRectangle.
class tt__IntRectangle;

//  Forward declaration of class tt__IntRectangleRange.
class tt__IntRectangleRange;

//  Forward declaration of class tt__FloatRange.
class tt__FloatRange;

//  Forward declaration of class tt__DurationRange.
class tt__DurationRange;

//  Forward declaration of class tt__IntItems.
class tt__IntItems;

//  Forward declaration of class tt__FloatItems.
class tt__FloatItems;

//  Forward declaration of class tt__AnyHolder.
class tt__AnyHolder;

//  Forward declaration of class tt__VideoSource.
class tt__VideoSource;

//  Forward declaration of class tt__VideoSourceExtension.
class tt__VideoSourceExtension;

//  Forward declaration of class tt__VideoSourceExtension2.
class tt__VideoSourceExtension2;

//  Forward declaration of class tt__AudioSource.
class tt__AudioSource;

//  Forward declaration of class tt__Profile.
class tt__Profile;

//  Forward declaration of class tt__ProfileExtension.
class tt__ProfileExtension;

//  Forward declaration of class tt__ProfileExtension2.
class tt__ProfileExtension2;

//  Forward declaration of class tt__ConfigurationEntity.
class tt__ConfigurationEntity;

//  Forward declaration of class tt__VideoSourceConfiguration.
class tt__VideoSourceConfiguration;

//  Forward declaration of class tt__VideoSourceConfigurationExtension.
class tt__VideoSourceConfigurationExtension;

//  Forward declaration of class tt__VideoSourceConfigurationExtension2.
class tt__VideoSourceConfigurationExtension2;

//  Forward declaration of class tt__Rotate.
class tt__Rotate;

//  Forward declaration of class tt__RotateExtension.
class tt__RotateExtension;

//  Forward declaration of class tt__LensProjection.
class tt__LensProjection;

//  Forward declaration of class tt__LensOffset.
class tt__LensOffset;

//  Forward declaration of class tt__LensDescription.
class tt__LensDescription;

//  Forward declaration of class tt__VideoSourceConfigurationOptions.
class tt__VideoSourceConfigurationOptions;

//  Forward declaration of class tt__VideoSourceConfigurationOptionsExtension.
class tt__VideoSourceConfigurationOptionsExtension;

//  Forward declaration of class tt__VideoSourceConfigurationOptionsExtension2.
class tt__VideoSourceConfigurationOptionsExtension2;

//  Forward declaration of class tt__RotateOptions.
class tt__RotateOptions;

//  Forward declaration of class tt__RotateOptionsExtension.
class tt__RotateOptionsExtension;

//  Forward declaration of class tt__SceneOrientation.
class tt__SceneOrientation;

//  Forward declaration of class tt__VideoEncoderConfiguration.
class tt__VideoEncoderConfiguration;

//  Forward declaration of class tt__VideoResolution.
class tt__VideoResolution;

//  Forward declaration of class tt__VideoRateControl.
class tt__VideoRateControl;

//  Forward declaration of class tt__Mpeg4Configuration.
class tt__Mpeg4Configuration;

//  Forward declaration of class tt__H264Configuration.
class tt__H264Configuration;

//  Forward declaration of class tt__VideoEncoderConfigurationOptions.
class tt__VideoEncoderConfigurationOptions;

//  Forward declaration of class tt__VideoEncoderOptionsExtension.
class tt__VideoEncoderOptionsExtension;

//  Forward declaration of class tt__VideoEncoderOptionsExtension2.
class tt__VideoEncoderOptionsExtension2;

//  Forward declaration of class tt__JpegOptions.
class tt__JpegOptions;

//  Forward declaration of class tt__JpegOptions2.
class tt__JpegOptions2;

//  Forward declaration of class tt__Mpeg4Options.
class tt__Mpeg4Options;

//  Forward declaration of class tt__Mpeg4Options2.
class tt__Mpeg4Options2;

//  Forward declaration of class tt__H264Options.
class tt__H264Options;

//  Forward declaration of class tt__H264Options2.
class tt__H264Options2;

//  Forward declaration of class tt__VideoEncoder2Configuration.
class tt__VideoEncoder2Configuration;

//  Forward declaration of class tt__VideoResolution2.
class tt__VideoResolution2;

//  Forward declaration of class tt__VideoRateControl2.
class tt__VideoRateControl2;

//  Forward declaration of class tt__VideoEncoder2ConfigurationOptions.
class tt__VideoEncoder2ConfigurationOptions;

//  Forward declaration of class tt__AudioSourceConfiguration.
class tt__AudioSourceConfiguration;

//  Forward declaration of class tt__AudioSourceConfigurationOptions.
class tt__AudioSourceConfigurationOptions;

//  Forward declaration of class tt__AudioSourceOptionsExtension.
class tt__AudioSourceOptionsExtension;

//  Forward declaration of class tt__AudioEncoderConfiguration.
class tt__AudioEncoderConfiguration;

//  Forward declaration of class tt__AudioEncoderConfigurationOptions.
class tt__AudioEncoderConfigurationOptions;

//  Forward declaration of class tt__AudioEncoderConfigurationOption.
class tt__AudioEncoderConfigurationOption;

//  Forward declaration of class tt__AudioEncoder2Configuration.
class tt__AudioEncoder2Configuration;

//  Forward declaration of class tt__AudioEncoder2ConfigurationOptions.
class tt__AudioEncoder2ConfigurationOptions;

//  Forward declaration of class tt__VideoAnalyticsConfiguration.
class tt__VideoAnalyticsConfiguration;

//  Forward declaration of class tt__MetadataConfiguration.
class tt__MetadataConfiguration;

//  Forward declaration of class tt__MetadataConfigurationExtension.
class tt__MetadataConfigurationExtension;

//  Forward declaration of class tt__PTZFilter.
class tt__PTZFilter;

//  Forward declaration of class tt__EventSubscription.
class tt__EventSubscription;

//  Forward declaration of class tt__MetadataConfigurationOptions.
class tt__MetadataConfigurationOptions;

//  Forward declaration of class tt__MetadataConfigurationOptionsExtension.
class tt__MetadataConfigurationOptionsExtension;

//  Forward declaration of class tt__MetadataConfigurationOptionsExtension2.
class tt__MetadataConfigurationOptionsExtension2;

//  Forward declaration of class tt__PTZStatusFilterOptions.
class tt__PTZStatusFilterOptions;

//  Forward declaration of class tt__PTZStatusFilterOptionsExtension.
class tt__PTZStatusFilterOptionsExtension;

//  Forward declaration of class tt__VideoOutput.
class tt__VideoOutput;

//  Forward declaration of class tt__VideoOutputExtension.
class tt__VideoOutputExtension;

//  Forward declaration of class tt__VideoOutputConfiguration.
class tt__VideoOutputConfiguration;

//  Forward declaration of class tt__VideoOutputConfigurationOptions.
class tt__VideoOutputConfigurationOptions;

//  Forward declaration of class tt__VideoDecoderConfigurationOptions.
class tt__VideoDecoderConfigurationOptions;

//  Forward declaration of class tt__H264DecOptions.
class tt__H264DecOptions;

//  Forward declaration of class tt__JpegDecOptions.
class tt__JpegDecOptions;

//  Forward declaration of class tt__Mpeg4DecOptions.
class tt__Mpeg4DecOptions;

//  Forward declaration of class tt__VideoDecoderConfigurationOptionsExtension.
class tt__VideoDecoderConfigurationOptionsExtension;

//  Forward declaration of class tt__AudioOutput.
class tt__AudioOutput;

//  Forward declaration of class tt__AudioOutputConfiguration.
class tt__AudioOutputConfiguration;

//  Forward declaration of class tt__AudioOutputConfigurationOptions.
class tt__AudioOutputConfigurationOptions;

//  Forward declaration of class tt__AudioDecoderConfiguration.
class tt__AudioDecoderConfiguration;

//  Forward declaration of class tt__AudioDecoderConfigurationOptions.
class tt__AudioDecoderConfigurationOptions;

//  Forward declaration of class tt__G711DecOptions.
class tt__G711DecOptions;

//  Forward declaration of class tt__AACDecOptions.
class tt__AACDecOptions;

//  Forward declaration of class tt__G726DecOptions.
class tt__G726DecOptions;

//  Forward declaration of class tt__AudioDecoderConfigurationOptionsExtension.
class tt__AudioDecoderConfigurationOptionsExtension;

//  Forward declaration of class tt__MulticastConfiguration.
class tt__MulticastConfiguration;

//  Forward declaration of class tt__StreamSetup.
class tt__StreamSetup;

//  Forward declaration of class tt__Transport.
class tt__Transport;

//  Forward declaration of class tt__MediaUri.
class tt__MediaUri;

//  Forward declaration of class tt__Scope.
class tt__Scope;

//  Forward declaration of class tt__NetworkInterface.
class tt__NetworkInterface;

//  Forward declaration of class tt__NetworkInterfaceExtension.
class tt__NetworkInterfaceExtension;

//  Forward declaration of class tt__Dot3Configuration.
class tt__Dot3Configuration;

//  Forward declaration of class tt__NetworkInterfaceExtension2.
class tt__NetworkInterfaceExtension2;

//  Forward declaration of class tt__NetworkInterfaceLink.
class tt__NetworkInterfaceLink;

//  Forward declaration of class tt__NetworkInterfaceConnectionSetting.
class tt__NetworkInterfaceConnectionSetting;

//  Forward declaration of class tt__NetworkInterfaceInfo.
class tt__NetworkInterfaceInfo;

//  Forward declaration of class tt__IPv6NetworkInterface.
class tt__IPv6NetworkInterface;

//  Forward declaration of class tt__IPv4NetworkInterface.
class tt__IPv4NetworkInterface;

//  Forward declaration of class tt__IPv4Configuration.
class tt__IPv4Configuration;

//  Forward declaration of class tt__IPv6Configuration.
class tt__IPv6Configuration;

//  Forward declaration of class tt__IPv6ConfigurationExtension.
class tt__IPv6ConfigurationExtension;

//  Forward declaration of class tt__NetworkProtocol.
class tt__NetworkProtocol;

//  Forward declaration of class tt__NetworkProtocolExtension.
class tt__NetworkProtocolExtension;

//  Forward declaration of class tt__NetworkHost.
class tt__NetworkHost;

//  Forward declaration of class tt__NetworkHostExtension.
class tt__NetworkHostExtension;

//  Forward declaration of class tt__IPAddress.
class tt__IPAddress;

//  Forward declaration of class tt__PrefixedIPv4Address.
class tt__PrefixedIPv4Address;

//  Forward declaration of class tt__PrefixedIPv6Address.
class tt__PrefixedIPv6Address;

//  Forward declaration of class tt__HostnameInformation.
class tt__HostnameInformation;

//  Forward declaration of class tt__HostnameInformationExtension.
class tt__HostnameInformationExtension;

//  Forward declaration of class tt__DNSInformation.
class tt__DNSInformation;

//  Forward declaration of class tt__DNSInformationExtension.
class tt__DNSInformationExtension;

//  Forward declaration of class tt__NTPInformation.
class tt__NTPInformation;

//  Forward declaration of class tt__NTPInformationExtension.
class tt__NTPInformationExtension;

//  Forward declaration of class tt__DynamicDNSInformation.
class tt__DynamicDNSInformation;

//  Forward declaration of class tt__DynamicDNSInformationExtension.
class tt__DynamicDNSInformationExtension;

//  Forward declaration of class tt__NetworkInterfaceSetConfiguration.
class tt__NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__NetworkInterfaceSetConfigurationExtension.
class tt__NetworkInterfaceSetConfigurationExtension;

//  Forward declaration of class tt__IPv6NetworkInterfaceSetConfiguration.
class tt__IPv6NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__IPv4NetworkInterfaceSetConfiguration.
class tt__IPv4NetworkInterfaceSetConfiguration;

//  Forward declaration of class tt__NetworkGateway.
class tt__NetworkGateway;

//  Forward declaration of class tt__NetworkZeroConfiguration.
class tt__NetworkZeroConfiguration;

//  Forward declaration of class tt__NetworkZeroConfigurationExtension.
class tt__NetworkZeroConfigurationExtension;

//  Forward declaration of class tt__NetworkZeroConfigurationExtension2.
class tt__NetworkZeroConfigurationExtension2;

//  Forward declaration of class tt__IPAddressFilter.
class tt__IPAddressFilter;

//  Forward declaration of class tt__IPAddressFilterExtension.
class tt__IPAddressFilterExtension;

//  Forward declaration of class tt__Dot11Configuration.
class tt__Dot11Configuration;

//  Forward declaration of class tt__Dot11SecurityConfiguration.
class tt__Dot11SecurityConfiguration;

//  Forward declaration of class tt__Dot11SecurityConfigurationExtension.
class tt__Dot11SecurityConfigurationExtension;

//  Forward declaration of class tt__Dot11PSKSet.
class tt__Dot11PSKSet;

//  Forward declaration of class tt__Dot11PSKSetExtension.
class tt__Dot11PSKSetExtension;

//  Forward declaration of class tt__NetworkInterfaceSetConfigurationExtension2.
class tt__NetworkInterfaceSetConfigurationExtension2;

//  Forward declaration of class tt__Dot11Capabilities.
class tt__Dot11Capabilities;

//  Forward declaration of class tt__Dot11Status.
class tt__Dot11Status;

//  Forward declaration of class tt__Dot11AvailableNetworks.
class tt__Dot11AvailableNetworks;

//  Forward declaration of class tt__Dot11AvailableNetworksExtension.
class tt__Dot11AvailableNetworksExtension;

//  Forward declaration of class tt__Capabilities.
class tt__Capabilities;

//  Forward declaration of class tt__CapabilitiesExtension.
class tt__CapabilitiesExtension;

//  Forward declaration of class tt__CapabilitiesExtension2.
class tt__CapabilitiesExtension2;

//  Forward declaration of class tt__AnalyticsCapabilities.
class tt__AnalyticsCapabilities;

//  Forward declaration of class tt__DeviceCapabilities.
class tt__DeviceCapabilities;

//  Forward declaration of class tt__DeviceCapabilitiesExtension.
class tt__DeviceCapabilitiesExtension;

//  Forward declaration of class tt__EventCapabilities.
class tt__EventCapabilities;

//  Forward declaration of class tt__IOCapabilities.
class tt__IOCapabilities;

//  Forward declaration of class tt__IOCapabilitiesExtension.
class tt__IOCapabilitiesExtension;

//  Forward declaration of class tt__IOCapabilitiesExtension2.
class tt__IOCapabilitiesExtension2;

//  Forward declaration of class tt__MediaCapabilities.
class tt__MediaCapabilities;

//  Forward declaration of class tt__MediaCapabilitiesExtension.
class tt__MediaCapabilitiesExtension;

//  Forward declaration of class tt__RealTimeStreamingCapabilities.
class tt__RealTimeStreamingCapabilities;

//  Forward declaration of class tt__RealTimeStreamingCapabilitiesExtension.
class tt__RealTimeStreamingCapabilitiesExtension;

//  Forward declaration of class tt__ProfileCapabilities.
class tt__ProfileCapabilities;

//  Forward declaration of class tt__NetworkCapabilities.
class tt__NetworkCapabilities;

//  Forward declaration of class tt__NetworkCapabilitiesExtension.
class tt__NetworkCapabilitiesExtension;

//  Forward declaration of class tt__NetworkCapabilitiesExtension2.
class tt__NetworkCapabilitiesExtension2;

//  Forward declaration of class tt__SecurityCapabilities.
class tt__SecurityCapabilities;

//  Forward declaration of class tt__SecurityCapabilitiesExtension.
class tt__SecurityCapabilitiesExtension;

//  Forward declaration of class tt__SecurityCapabilitiesExtension2.
class tt__SecurityCapabilitiesExtension2;

//  Forward declaration of class tt__SystemCapabilities.
class tt__SystemCapabilities;

//  Forward declaration of class tt__SystemCapabilitiesExtension.
class tt__SystemCapabilitiesExtension;

//  Forward declaration of class tt__SystemCapabilitiesExtension2.
class tt__SystemCapabilitiesExtension2;

//  Forward declaration of class tt__OnvifVersion.
class tt__OnvifVersion;

//  Forward declaration of class tt__ImagingCapabilities.
class tt__ImagingCapabilities;

//  Forward declaration of class tt__PTZCapabilities.
class tt__PTZCapabilities;

//  Forward declaration of class tt__DeviceIOCapabilities.
class tt__DeviceIOCapabilities;

//  Forward declaration of class tt__DisplayCapabilities.
class tt__DisplayCapabilities;

//  Forward declaration of class tt__RecordingCapabilities.
class tt__RecordingCapabilities;

//  Forward declaration of class tt__SearchCapabilities.
class tt__SearchCapabilities;

//  Forward declaration of class tt__ReplayCapabilities.
class tt__ReplayCapabilities;

//  Forward declaration of class tt__ReceiverCapabilities.
class tt__ReceiverCapabilities;

//  Forward declaration of class tt__AnalyticsDeviceCapabilities.
class tt__AnalyticsDeviceCapabilities;

//  Forward declaration of class tt__AnalyticsDeviceExtension.
class tt__AnalyticsDeviceExtension;

//  Forward declaration of class tt__SystemLog.
class tt__SystemLog;

//  Forward declaration of class tt__SupportInformation.
class tt__SupportInformation;

//  Forward declaration of class tt__BinaryData.
class tt__BinaryData;

//  Forward declaration of class tt__AttachmentData.
class tt__AttachmentData;

//  Forward declaration of class tt__BackupFile.
class tt__BackupFile;

//  Forward declaration of class tt__SystemLogUriList.
class tt__SystemLogUriList;

//  Forward declaration of class tt__SystemLogUri.
class tt__SystemLogUri;

//  Forward declaration of class tt__SystemDateTime.
class tt__SystemDateTime;

//  Forward declaration of class tt__SystemDateTimeExtension.
class tt__SystemDateTimeExtension;

//  Forward declaration of class tt__DateTime.
class tt__DateTime;

//  Forward declaration of class tt__Date.
class tt__Date;

//  Forward declaration of class tt__Time.
class tt__Time;

//  Forward declaration of class tt__TimeZone.
class tt__TimeZone;

//  Forward declaration of class tt__RemoteUser.
class tt__RemoteUser;

//  Forward declaration of class tt__User.
class tt__User;

//  Forward declaration of class tt__UserExtension.
class tt__UserExtension;

//  Forward declaration of class tt__CertificateGenerationParameters.
class tt__CertificateGenerationParameters;

//  Forward declaration of class tt__CertificateGenerationParametersExtension.
class tt__CertificateGenerationParametersExtension;

//  Forward declaration of class tt__Certificate.
class tt__Certificate;

//  Forward declaration of class tt__CertificateStatus.
class tt__CertificateStatus;

//  Forward declaration of class tt__CertificateWithPrivateKey.
class tt__CertificateWithPrivateKey;

//  Forward declaration of class tt__CertificateInformation.
class tt__CertificateInformation;

//  Forward declaration of class tt__CertificateUsage.
class tt__CertificateUsage;

//  Forward declaration of class tt__CertificateInformationExtension.
class tt__CertificateInformationExtension;

//  Forward declaration of class tt__Dot1XConfiguration.
class tt__Dot1XConfiguration;

//  Forward declaration of class tt__Dot1XConfigurationExtension.
class tt__Dot1XConfigurationExtension;

//  Forward declaration of class tt__EAPMethodConfiguration.
class tt__EAPMethodConfiguration;

//  Forward declaration of class tt__EapMethodExtension.
class tt__EapMethodExtension;

//  Forward declaration of class tt__TLSConfiguration.
class tt__TLSConfiguration;

//  Forward declaration of class tt__GenericEapPwdConfigurationExtension.
class tt__GenericEapPwdConfigurationExtension;

//  Forward declaration of class tt__RelayOutputSettings.
class tt__RelayOutputSettings;

//  Forward declaration of class tt__RelayOutput.
class tt__RelayOutput;

//  Forward declaration of class tt__DigitalInput.
class tt__DigitalInput;

//  Forward declaration of class tt__PTZNode.
class tt__PTZNode;

//  Forward declaration of class tt__PTZNodeExtension.
class tt__PTZNodeExtension;

//  Forward declaration of class tt__PTZNodeExtension2.
class tt__PTZNodeExtension2;

//  Forward declaration of class tt__PTZPresetTourSupported.
class tt__PTZPresetTourSupported;

//  Forward declaration of class tt__PTZPresetTourSupportedExtension.
class tt__PTZPresetTourSupportedExtension;

//  Forward declaration of class tt__PTZConfiguration.
class tt__PTZConfiguration;

//  Forward declaration of class tt__PTZConfigurationExtension.
class tt__PTZConfigurationExtension;

//  Forward declaration of class tt__PTZConfigurationExtension2.
class tt__PTZConfigurationExtension2;

//  Forward declaration of class tt__PTControlDirection.
class tt__PTControlDirection;

//  Forward declaration of class tt__PTControlDirectionExtension.
class tt__PTControlDirectionExtension;

//  Forward declaration of class tt__EFlip.
class tt__EFlip;

//  Forward declaration of class tt__Reverse.
class tt__Reverse;

//  Forward declaration of class tt__PTZConfigurationOptions.
class tt__PTZConfigurationOptions;

//  Forward declaration of class tt__PTZConfigurationOptions2.
class tt__PTZConfigurationOptions2;

//  Forward declaration of class tt__PTControlDirectionOptions.
class tt__PTControlDirectionOptions;

//  Forward declaration of class tt__PTControlDirectionOptionsExtension.
class tt__PTControlDirectionOptionsExtension;

//  Forward declaration of class tt__EFlipOptions.
class tt__EFlipOptions;

//  Forward declaration of class tt__EFlipOptionsExtension.
class tt__EFlipOptionsExtension;

//  Forward declaration of class tt__ReverseOptions.
class tt__ReverseOptions;

//  Forward declaration of class tt__ReverseOptionsExtension.
class tt__ReverseOptionsExtension;

//  Forward declaration of class tt__PanTiltLimits.
class tt__PanTiltLimits;

//  Forward declaration of class tt__ZoomLimits.
class tt__ZoomLimits;

//  Forward declaration of class tt__PTZSpaces.
class tt__PTZSpaces;

//  Forward declaration of class tt__PTZSpacesExtension.
class tt__PTZSpacesExtension;

//  Forward declaration of class tt__Space2DDescription.
class tt__Space2DDescription;

//  Forward declaration of class tt__Space1DDescription.
class tt__Space1DDescription;

//  Forward declaration of class tt__PTZSpeed.
class tt__PTZSpeed;

//  Forward declaration of class tt__PTZPreset.
class tt__PTZPreset;

//  Forward declaration of class tt__PresetTour.
class tt__PresetTour;

//  Forward declaration of class tt__PTZPresetTourExtension.
class tt__PTZPresetTourExtension;

//  Forward declaration of class tt__PTZPresetTourSpot.
class tt__PTZPresetTourSpot;

//  Forward declaration of class tt__PTZPresetTourSpotExtension.
class tt__PTZPresetTourSpotExtension;

//  Forward declaration of class tt__PTZPresetTourPresetDetail.
class tt__PTZPresetTourPresetDetail;

//  Forward declaration of class tt__PTZPresetTourTypeExtension.
class tt__PTZPresetTourTypeExtension;

//  Forward declaration of class tt__PTZPresetTourStatus.
class tt__PTZPresetTourStatus;

//  Forward declaration of class tt__PTZPresetTourStatusExtension.
class tt__PTZPresetTourStatusExtension;

//  Forward declaration of class tt__PTZPresetTourStartingCondition.
class tt__PTZPresetTourStartingCondition;

//  Forward declaration of class tt__PTZPresetTourStartingConditionExtension.
class tt__PTZPresetTourStartingConditionExtension;

//  Forward declaration of class tt__PTZPresetTourOptions.
class tt__PTZPresetTourOptions;

//  Forward declaration of class tt__PTZPresetTourSpotOptions.
class tt__PTZPresetTourSpotOptions;

//  Forward declaration of class tt__PTZPresetTourPresetDetailOptions.
class tt__PTZPresetTourPresetDetailOptions;

//  Forward declaration of class tt__PTZPresetTourPresetDetailOptionsExtension.
class tt__PTZPresetTourPresetDetailOptionsExtension;

//  Forward declaration of class tt__PTZPresetTourStartingConditionOptions.
class tt__PTZPresetTourStartingConditionOptions;

//  Forward declaration of class tt__PTZPresetTourStartingConditionOptionsExtension.
class tt__PTZPresetTourStartingConditionOptionsExtension;

//  Forward declaration of class tt__ImagingStatus.
class tt__ImagingStatus;

//  Forward declaration of class tt__FocusStatus.
class tt__FocusStatus;

//  Forward declaration of class tt__FocusConfiguration.
class tt__FocusConfiguration;

//  Forward declaration of class tt__ImagingSettings.
class tt__ImagingSettings;

//  Forward declaration of class tt__ImagingSettingsExtension.
class tt__ImagingSettingsExtension;

//  Forward declaration of class tt__Exposure.
class tt__Exposure;

//  Forward declaration of class tt__WideDynamicRange.
class tt__WideDynamicRange;

//  Forward declaration of class tt__BacklightCompensation.
class tt__BacklightCompensation;

//  Forward declaration of class tt__ImagingOptions.
class tt__ImagingOptions;

//  Forward declaration of class tt__WideDynamicRangeOptions.
class tt__WideDynamicRangeOptions;

//  Forward declaration of class tt__BacklightCompensationOptions.
class tt__BacklightCompensationOptions;

//  Forward declaration of class tt__FocusOptions.
class tt__FocusOptions;

//  Forward declaration of class tt__ExposureOptions.
class tt__ExposureOptions;

//  Forward declaration of class tt__WhiteBalanceOptions.
class tt__WhiteBalanceOptions;

//  Forward declaration of class tt__FocusMove.
class tt__FocusMove;

//  Forward declaration of class tt__AbsoluteFocus.
class tt__AbsoluteFocus;

//  Forward declaration of class tt__RelativeFocus.
class tt__RelativeFocus;

//  Forward declaration of class tt__ContinuousFocus.
class tt__ContinuousFocus;

//  Forward declaration of class tt__MoveOptions.
class tt__MoveOptions;

//  Forward declaration of class tt__AbsoluteFocusOptions.
class tt__AbsoluteFocusOptions;

//  Forward declaration of class tt__RelativeFocusOptions.
class tt__RelativeFocusOptions;

//  Forward declaration of class tt__ContinuousFocusOptions.
class tt__ContinuousFocusOptions;

//  Forward declaration of class tt__WhiteBalance.
class tt__WhiteBalance;

//  Forward declaration of class tt__ImagingStatus20.
class tt__ImagingStatus20;

//  Forward declaration of class tt__ImagingStatus20Extension.
class tt__ImagingStatus20Extension;

//  Forward declaration of class tt__FocusStatus20.
class tt__FocusStatus20;

//  Forward declaration of class tt__FocusStatus20Extension.
class tt__FocusStatus20Extension;

//  Forward declaration of class tt__ImagingSettings20.
class tt__ImagingSettings20;

//  Forward declaration of class tt__ImagingSettingsExtension20.
class tt__ImagingSettingsExtension20;

//  Forward declaration of class tt__ImagingSettingsExtension202.
class tt__ImagingSettingsExtension202;

//  Forward declaration of class tt__ImagingSettingsExtension203.
class tt__ImagingSettingsExtension203;

//  Forward declaration of class tt__ImagingSettingsExtension204.
class tt__ImagingSettingsExtension204;

//  Forward declaration of class tt__ImageStabilization.
class tt__ImageStabilization;

//  Forward declaration of class tt__ImageStabilizationExtension.
class tt__ImageStabilizationExtension;

//  Forward declaration of class tt__IrCutFilterAutoAdjustment.
class tt__IrCutFilterAutoAdjustment;

//  Forward declaration of class tt__IrCutFilterAutoAdjustmentExtension.
class tt__IrCutFilterAutoAdjustmentExtension;

//  Forward declaration of class tt__WideDynamicRange20.
class tt__WideDynamicRange20;

//  Forward declaration of class tt__BacklightCompensation20.
class tt__BacklightCompensation20;

//  Forward declaration of class tt__Exposure20.
class tt__Exposure20;

//  Forward declaration of class tt__ToneCompensation.
class tt__ToneCompensation;

//  Forward declaration of class tt__ToneCompensationExtension.
class tt__ToneCompensationExtension;

//  Forward declaration of class tt__Defogging.
class tt__Defogging;

//  Forward declaration of class tt__DefoggingExtension.
class tt__DefoggingExtension;

//  Forward declaration of class tt__NoiseReduction.
class tt__NoiseReduction;

//  Forward declaration of class tt__ImagingOptions20.
class tt__ImagingOptions20;

//  Forward declaration of class tt__ImagingOptions20Extension.
class tt__ImagingOptions20Extension;

//  Forward declaration of class tt__ImagingOptions20Extension2.
class tt__ImagingOptions20Extension2;

//  Forward declaration of class tt__ImagingOptions20Extension3.
class tt__ImagingOptions20Extension3;

//  Forward declaration of class tt__ImagingOptions20Extension4.
class tt__ImagingOptions20Extension4;

//  Forward declaration of class tt__ImageStabilizationOptions.
class tt__ImageStabilizationOptions;

//  Forward declaration of class tt__ImageStabilizationOptionsExtension.
class tt__ImageStabilizationOptionsExtension;

//  Forward declaration of class tt__IrCutFilterAutoAdjustmentOptions.
class tt__IrCutFilterAutoAdjustmentOptions;

//  Forward declaration of class tt__IrCutFilterAutoAdjustmentOptionsExtension.
class tt__IrCutFilterAutoAdjustmentOptionsExtension;

//  Forward declaration of class tt__WideDynamicRangeOptions20.
class tt__WideDynamicRangeOptions20;

//  Forward declaration of class tt__BacklightCompensationOptions20.
class tt__BacklightCompensationOptions20;

//  Forward declaration of class tt__ExposureOptions20.
class tt__ExposureOptions20;

//  Forward declaration of class tt__MoveOptions20.
class tt__MoveOptions20;

//  Forward declaration of class tt__RelativeFocusOptions20.
class tt__RelativeFocusOptions20;

//  Forward declaration of class tt__WhiteBalance20.
class tt__WhiteBalance20;

//  Forward declaration of class tt__WhiteBalance20Extension.
class tt__WhiteBalance20Extension;

//  Forward declaration of class tt__FocusConfiguration20.
class tt__FocusConfiguration20;

//  Forward declaration of class tt__FocusConfiguration20Extension.
class tt__FocusConfiguration20Extension;

//  Forward declaration of class tt__WhiteBalanceOptions20.
class tt__WhiteBalanceOptions20;

//  Forward declaration of class tt__WhiteBalanceOptions20Extension.
class tt__WhiteBalanceOptions20Extension;

//  Forward declaration of class tt__FocusOptions20.
class tt__FocusOptions20;

//  Forward declaration of class tt__FocusOptions20Extension.
class tt__FocusOptions20Extension;

//  Forward declaration of class tt__ToneCompensationOptions.
class tt__ToneCompensationOptions;

//  Forward declaration of class tt__DefoggingOptions.
class tt__DefoggingOptions;

//  Forward declaration of class tt__NoiseReductionOptions.
class tt__NoiseReductionOptions;

//  Forward declaration of class tt__MessageExtension.
class tt__MessageExtension;

//  Forward declaration of class tt__ItemList.
class tt__ItemList;

//  Forward declaration of class tt__ItemListExtension.
class tt__ItemListExtension;

//  Forward declaration of class tt__MessageDescription.
class tt__MessageDescription;

//  Forward declaration of class tt__MessageDescriptionExtension.
class tt__MessageDescriptionExtension;

//  Forward declaration of class tt__ItemListDescription.
class tt__ItemListDescription;

//  Forward declaration of class tt__ItemListDescriptionExtension.
class tt__ItemListDescriptionExtension;

//  Forward declaration of class tt__Polyline.
class tt__Polyline;

//  Forward declaration of class tt__AnalyticsEngineConfiguration.
class tt__AnalyticsEngineConfiguration;

//  Forward declaration of class tt__AnalyticsEngineConfigurationExtension.
class tt__AnalyticsEngineConfigurationExtension;

//  Forward declaration of class tt__RuleEngineConfiguration.
class tt__RuleEngineConfiguration;

//  Forward declaration of class tt__RuleEngineConfigurationExtension.
class tt__RuleEngineConfigurationExtension;

//  Forward declaration of class tt__Config.
class tt__Config;

//  Forward declaration of class tt__ConfigDescription.
class tt__ConfigDescription;

//  Forward declaration of class tt__ConfigDescriptionExtension.
class tt__ConfigDescriptionExtension;

//  Forward declaration of class tt__SupportedRules.
class tt__SupportedRules;

//  Forward declaration of class tt__SupportedRulesExtension.
class tt__SupportedRulesExtension;

//  Forward declaration of class tt__SupportedAnalyticsModules.
class tt__SupportedAnalyticsModules;

//  Forward declaration of class tt__SupportedAnalyticsModulesExtension.
class tt__SupportedAnalyticsModulesExtension;

//  Forward declaration of class tt__PolygonConfiguration.
class tt__PolygonConfiguration;

//  Forward declaration of class tt__PolylineArray.
class tt__PolylineArray;

//  Forward declaration of class tt__PolylineArrayExtension.
class tt__PolylineArrayExtension;

//  Forward declaration of class tt__PolylineArrayConfiguration.
class tt__PolylineArrayConfiguration;

//  Forward declaration of class tt__MotionExpression.
class tt__MotionExpression;

//  Forward declaration of class tt__MotionExpressionConfiguration.
class tt__MotionExpressionConfiguration;

//  Forward declaration of class tt__CellLayout.
class tt__CellLayout;

//  Forward declaration of class tt__PaneConfiguration.
class tt__PaneConfiguration;

//  Forward declaration of class tt__PaneLayout.
class tt__PaneLayout;

//  Forward declaration of class tt__Layout.
class tt__Layout;

//  Forward declaration of class tt__LayoutExtension.
class tt__LayoutExtension;

//  Forward declaration of class tt__CodingCapabilities.
class tt__CodingCapabilities;

//  Forward declaration of class tt__LayoutOptions.
class tt__LayoutOptions;

//  Forward declaration of class tt__LayoutOptionsExtension.
class tt__LayoutOptionsExtension;

//  Forward declaration of class tt__PaneLayoutOptions.
class tt__PaneLayoutOptions;

//  Forward declaration of class tt__PaneOptionExtension.
class tt__PaneOptionExtension;

//  Forward declaration of class tt__Receiver.
class tt__Receiver;

//  Forward declaration of class tt__ReceiverConfiguration.
class tt__ReceiverConfiguration;

//  Forward declaration of class tt__ReceiverStateInformation.
class tt__ReceiverStateInformation;

//  Forward declaration of class tt__SourceReference.
class tt__SourceReference;

//  Forward declaration of class tt__DateTimeRange.
class tt__DateTimeRange;

//  Forward declaration of class tt__RecordingSummary.
class tt__RecordingSummary;

//  Forward declaration of class tt__SearchScope.
class tt__SearchScope;

//  Forward declaration of class tt__SearchScopeExtension.
class tt__SearchScopeExtension;

//  Forward declaration of class tt__EventFilter.
class tt__EventFilter;

//  Forward declaration of class tt__PTZPositionFilter.
class tt__PTZPositionFilter;

//  Forward declaration of class tt__MetadataFilter.
class tt__MetadataFilter;

//  Forward declaration of class tt__FindRecordingResultList.
class tt__FindRecordingResultList;

//  Forward declaration of class tt__FindEventResultList.
class tt__FindEventResultList;

//  Forward declaration of class tt__FindEventResult.
class tt__FindEventResult;

//  Forward declaration of class tt__FindPTZPositionResultList.
class tt__FindPTZPositionResultList;

//  Forward declaration of class tt__FindPTZPositionResult.
class tt__FindPTZPositionResult;

//  Forward declaration of class tt__FindMetadataResultList.
class tt__FindMetadataResultList;

//  Forward declaration of class tt__FindMetadataResult.
class tt__FindMetadataResult;

//  Forward declaration of class tt__RecordingInformation.
class tt__RecordingInformation;

//  Forward declaration of class tt__RecordingSourceInformation.
class tt__RecordingSourceInformation;

//  Forward declaration of class tt__TrackInformation.
class tt__TrackInformation;

//  Forward declaration of class tt__MediaAttributes.
class tt__MediaAttributes;

//  Forward declaration of class tt__TrackAttributes.
class tt__TrackAttributes;

//  Forward declaration of class tt__TrackAttributesExtension.
class tt__TrackAttributesExtension;

//  Forward declaration of class tt__VideoAttributes.
class tt__VideoAttributes;

//  Forward declaration of class tt__AudioAttributes.
class tt__AudioAttributes;

//  Forward declaration of class tt__MetadataAttributes.
class tt__MetadataAttributes;

//  Forward declaration of class tt__RecordingConfiguration.
class tt__RecordingConfiguration;

//  Forward declaration of class tt__TrackConfiguration.
class tt__TrackConfiguration;

//  Forward declaration of class tt__GetRecordingsResponseItem.
class tt__GetRecordingsResponseItem;

//  Forward declaration of class tt__GetTracksResponseList.
class tt__GetTracksResponseList;

//  Forward declaration of class tt__GetTracksResponseItem.
class tt__GetTracksResponseItem;

//  Forward declaration of class tt__RecordingJobConfiguration.
class tt__RecordingJobConfiguration;

//  Forward declaration of class tt__RecordingJobConfigurationExtension.
class tt__RecordingJobConfigurationExtension;

//  Forward declaration of class tt__RecordingJobSource.
class tt__RecordingJobSource;

//  Forward declaration of class tt__RecordingJobSourceExtension.
class tt__RecordingJobSourceExtension;

//  Forward declaration of class tt__RecordingJobTrack.
class tt__RecordingJobTrack;

//  Forward declaration of class tt__RecordingJobStateInformation.
class tt__RecordingJobStateInformation;

//  Forward declaration of class tt__RecordingJobStateInformationExtension.
class tt__RecordingJobStateInformationExtension;

//  Forward declaration of class tt__RecordingJobStateSource.
class tt__RecordingJobStateSource;

//  Forward declaration of class tt__RecordingJobStateTracks.
class tt__RecordingJobStateTracks;

//  Forward declaration of class tt__RecordingJobStateTrack.
class tt__RecordingJobStateTrack;

//  Forward declaration of class tt__GetRecordingJobsResponseItem.
class tt__GetRecordingJobsResponseItem;

//  Forward declaration of class tt__ReplayConfiguration.
class tt__ReplayConfiguration;

//  Forward declaration of class tt__AnalyticsEngine.
class tt__AnalyticsEngine;

//  Forward declaration of class tt__AnalyticsDeviceEngineConfiguration.
class tt__AnalyticsDeviceEngineConfiguration;

//  Forward declaration of class tt__AnalyticsDeviceEngineConfigurationExtension.
class tt__AnalyticsDeviceEngineConfigurationExtension;

//  Forward declaration of class tt__EngineConfiguration.
class tt__EngineConfiguration;

//  Forward declaration of class tt__AnalyticsEngineInputInfo.
class tt__AnalyticsEngineInputInfo;

//  Forward declaration of class tt__AnalyticsEngineInputInfoExtension.
class tt__AnalyticsEngineInputInfoExtension;

//  Forward declaration of class tt__AnalyticsEngineInput.
class tt__AnalyticsEngineInput;

//  Forward declaration of class tt__SourceIdentification.
class tt__SourceIdentification;

//  Forward declaration of class tt__SourceIdentificationExtension.
class tt__SourceIdentificationExtension;

//  Forward declaration of class tt__MetadataInput.
class tt__MetadataInput;

//  Forward declaration of class tt__MetadataInputExtension.
class tt__MetadataInputExtension;

//  Forward declaration of class tt__AnalyticsEngineControl.
class tt__AnalyticsEngineControl;

//  Forward declaration of class tt__AnalyticsStateInformation.
class tt__AnalyticsStateInformation;

//  Forward declaration of class tt__AnalyticsState.
class tt__AnalyticsState;

//  Forward declaration of class tt__ActionEngineEventPayload.
class tt__ActionEngineEventPayload;

//  Forward declaration of class tt__ActionEngineEventPayloadExtension.
class tt__ActionEngineEventPayloadExtension;

//  Forward declaration of class tt__AudioClassCandidate.
class tt__AudioClassCandidate;

//  Forward declaration of class tt__AudioClassDescriptor.
class tt__AudioClassDescriptor;

//  Forward declaration of class tt__AudioClassDescriptorExtension.
class tt__AudioClassDescriptorExtension;

//  Forward declaration of class tt__ActiveConnection.
class tt__ActiveConnection;

//  Forward declaration of class tt__ProfileStatus.
class tt__ProfileStatus;

//  Forward declaration of class tt__ProfileStatusExtension.
class tt__ProfileStatusExtension;

//  Forward declaration of class tt__OSDReference.
class tt__OSDReference;

//  Forward declaration of class tt__OSDPosConfiguration.
class tt__OSDPosConfiguration;

//  Forward declaration of class tt__OSDPosConfigurationExtension.
class tt__OSDPosConfigurationExtension;

//  Forward declaration of class tt__OSDColor.
class tt__OSDColor;

//  Forward declaration of class tt__OSDTextConfiguration.
class tt__OSDTextConfiguration;

//  Forward declaration of class tt__OSDTextConfigurationExtension.
class tt__OSDTextConfigurationExtension;

//  Forward declaration of class tt__OSDImgConfiguration.
class tt__OSDImgConfiguration;

//  Forward declaration of class tt__OSDImgConfigurationExtension.
class tt__OSDImgConfigurationExtension;

//  Forward declaration of class tt__ColorspaceRange.
class tt__ColorspaceRange;

//  Forward declaration of class tt__ColorOptions.
class tt__ColorOptions;

//  Forward declaration of class tt__OSDColorOptions.
class tt__OSDColorOptions;

//  Forward declaration of class tt__OSDColorOptionsExtension.
class tt__OSDColorOptionsExtension;

//  Forward declaration of class tt__OSDTextOptions.
class tt__OSDTextOptions;

//  Forward declaration of class tt__OSDTextOptionsExtension.
class tt__OSDTextOptionsExtension;

//  Forward declaration of class tt__OSDImgOptions.
class tt__OSDImgOptions;

//  Forward declaration of class tt__OSDImgOptionsExtension.
class tt__OSDImgOptionsExtension;

//  Forward declaration of class tt__OSDConfiguration.
class tt__OSDConfiguration;

//  Forward declaration of class tt__OSDConfigurationExtension.
class tt__OSDConfigurationExtension;

//  Forward declaration of class tt__MaximumNumberOfOSDs.
class tt__MaximumNumberOfOSDs;

//  Forward declaration of class tt__OSDConfigurationOptions.
class tt__OSDConfigurationOptions;

//  Forward declaration of class tt__OSDConfigurationOptionsExtension.
class tt__OSDConfigurationOptionsExtension;

//  Forward declaration of class tt__FileProgress.
class tt__FileProgress;

//  Forward declaration of class tt__ArrayOfFileProgress.
class tt__ArrayOfFileProgress;

//  Forward declaration of class tt__ArrayOfFileProgressExtension.
class tt__ArrayOfFileProgressExtension;

//  Forward declaration of class tt__StorageReferencePath.
class tt__StorageReferencePath;

//  Forward declaration of class tt__StorageReferencePathExtension.
class tt__StorageReferencePathExtension;

//  Forward declaration of class tt__IntRange.
class tt__IntRange;

//  Forward declaration of class tt__Vector2D.
class tt__Vector2D;

//  Forward declaration of class tt__Vector1D.
class tt__Vector1D;

//  Forward declaration of class tt__PTZVector.
class tt__PTZVector;

//  Forward declaration of class tt__PTZStatus.
class tt__PTZStatus;

//  Forward declaration of class tt__PTZMoveStatus.
class tt__PTZMoveStatus;

//  Forward declaration of class tt__Vector.
class tt__Vector;

//  Forward declaration of class tt__Rectangle.
class tt__Rectangle;

//  Forward declaration of class tt__Polygon.
class tt__Polygon;

//  Forward declaration of class tt__Color.
class tt__Color;

//  Forward declaration of class tt__ColorCovariance.
class tt__ColorCovariance;

//  Forward declaration of class tt__ColorDescriptor.
class tt__ColorDescriptor;

//  Forward declaration of class tt__Transformation.
class tt__Transformation;

//  Forward declaration of class tt__TransformationExtension.
class tt__TransformationExtension;

//  Forward declaration of class tt__GeoLocation.
class tt__GeoLocation;

//  Forward declaration of class tt__GeoOrientation.
class tt__GeoOrientation;

//  Forward declaration of class tt__LocalLocation.
class tt__LocalLocation;

//  Forward declaration of class tt__LocalOrientation.
class tt__LocalOrientation;

//  Forward declaration of class tt__LocationEntity.
class tt__LocationEntity;

//  Forward declaration of class _tt__StringItems.
class _tt__StringItems;

//  Forward declaration of class _tt__Message.
class _tt__Message;

//  Forward declaration of class wsnt__QueryExpressionType.
class wsnt__QueryExpressionType;

//  Forward declaration of class wsnt__TopicExpressionType.
class wsnt__TopicExpressionType;

//  Forward declaration of class wsnt__FilterType.
class wsnt__FilterType;

//  Forward declaration of class wsnt__SubscriptionPolicyType.
class wsnt__SubscriptionPolicyType;

//  Forward declaration of class wsnt__NotificationMessageHolderType.
class wsnt__NotificationMessageHolderType;

//  Forward declaration of class wsnt__SubscribeCreationFailedFaultType.
class wsnt__SubscribeCreationFailedFaultType;

//  Forward declaration of class wsnt__InvalidFilterFaultType.
class wsnt__InvalidFilterFaultType;

//  Forward declaration of class wsnt__TopicExpressionDialectUnknownFaultType.
class wsnt__TopicExpressionDialectUnknownFaultType;

//  Forward declaration of class wsnt__InvalidTopicExpressionFaultType.
class wsnt__InvalidTopicExpressionFaultType;

//  Forward declaration of class wsnt__TopicNotSupportedFaultType.
class wsnt__TopicNotSupportedFaultType;

//  Forward declaration of class wsnt__MultipleTopicsSpecifiedFaultType.
class wsnt__MultipleTopicsSpecifiedFaultType;

//  Forward declaration of class wsnt__InvalidProducerPropertiesExpressionFaultType.
class wsnt__InvalidProducerPropertiesExpressionFaultType;

//  Forward declaration of class wsnt__InvalidMessageContentExpressionFaultType.
class wsnt__InvalidMessageContentExpressionFaultType;

//  Forward declaration of class wsnt__UnrecognizedPolicyRequestFaultType.
class wsnt__UnrecognizedPolicyRequestFaultType;

//  Forward declaration of class wsnt__UnsupportedPolicyRequestFaultType.
class wsnt__UnsupportedPolicyRequestFaultType;

//  Forward declaration of class wsnt__NotifyMessageNotSupportedFaultType.
class wsnt__NotifyMessageNotSupportedFaultType;

//  Forward declaration of class wsnt__UnacceptableInitialTerminationTimeFaultType.
class wsnt__UnacceptableInitialTerminationTimeFaultType;

//  Forward declaration of class wsnt__NoCurrentMessageOnTopicFaultType.
class wsnt__NoCurrentMessageOnTopicFaultType;

//  Forward declaration of class wsnt__UnableToGetMessagesFaultType.
class wsnt__UnableToGetMessagesFaultType;

//  Forward declaration of class wsnt__UnableToDestroyPullPointFaultType.
class wsnt__UnableToDestroyPullPointFaultType;

//  Forward declaration of class wsnt__UnableToCreatePullPointFaultType.
class wsnt__UnableToCreatePullPointFaultType;

//  Forward declaration of class wsnt__UnacceptableTerminationTimeFaultType.
class wsnt__UnacceptableTerminationTimeFaultType;

//  Forward declaration of class wsnt__UnableToDestroySubscriptionFaultType.
class wsnt__UnableToDestroySubscriptionFaultType;

//  Forward declaration of class wsnt__PauseFailedFaultType.
class wsnt__PauseFailedFaultType;

//  Forward declaration of class wsnt__ResumeFailedFaultType.
class wsnt__ResumeFailedFaultType;

//  Forward declaration of class _wsnt__NotificationProducerRP.
class _wsnt__NotificationProducerRP;

//  Forward declaration of class _wsnt__SubscriptionManagerRP.
class _wsnt__SubscriptionManagerRP;

//  Forward declaration of class _wsnt__Notify.
class _wsnt__Notify;

//  Forward declaration of class _wsnt__UseRaw.
class _wsnt__UseRaw;

//  Forward declaration of class _wsnt__Subscribe.
class _wsnt__Subscribe;

//  Forward declaration of class _wsnt__SubscribeResponse.
class _wsnt__SubscribeResponse;

//  Forward declaration of class _wsnt__GetCurrentMessage.
class _wsnt__GetCurrentMessage;

//  Forward declaration of class _wsnt__GetCurrentMessageResponse.
class _wsnt__GetCurrentMessageResponse;

//  Forward declaration of class _wsnt__GetMessages.
class _wsnt__GetMessages;

//  Forward declaration of class _wsnt__GetMessagesResponse.
class _wsnt__GetMessagesResponse;

//  Forward declaration of class _wsnt__DestroyPullPoint.
class _wsnt__DestroyPullPoint;

//  Forward declaration of class _wsnt__DestroyPullPointResponse.
class _wsnt__DestroyPullPointResponse;

//  Forward declaration of class _wsnt__CreatePullPoint.
class _wsnt__CreatePullPoint;

//  Forward declaration of class _wsnt__CreatePullPointResponse.
class _wsnt__CreatePullPointResponse;

//  Forward declaration of class _wsnt__Renew.
class _wsnt__Renew;

//  Forward declaration of class _wsnt__RenewResponse.
class _wsnt__RenewResponse;

//  Forward declaration of class _wsnt__Unsubscribe.
class _wsnt__Unsubscribe;

//  Forward declaration of class _wsnt__UnsubscribeResponse.
class _wsnt__UnsubscribeResponse;

//  Forward declaration of class _wsnt__PauseSubscription.
class _wsnt__PauseSubscription;

//  Forward declaration of class _wsnt__PauseSubscriptionResponse.
class _wsnt__PauseSubscriptionResponse;

//  Forward declaration of class _wsnt__ResumeSubscription.
class _wsnt__ResumeSubscription;

//  Forward declaration of class _wsnt__ResumeSubscriptionResponse.
class _wsnt__ResumeSubscriptionResponse;

//  Forward declaration of class wsrfbf__BaseFaultType.
class wsrfbf__BaseFaultType;

//  Forward declaration of class wstop__Documentation.
class wstop__Documentation;

//  Forward declaration of class wstop__ExtensibleDocumented.
class wstop__ExtensibleDocumented;

//  Forward declaration of class wstop__QueryExpressionType.
class wstop__QueryExpressionType;

//  Forward declaration of class wstop__TopicNamespaceType.
class wstop__TopicNamespaceType;

//  Forward declaration of class wstop__TopicType.
class wstop__TopicType;

//  Forward declaration of class wstop__TopicSetType.
class wstop__TopicSetType;

//  Forward declaration of class tmd__Capabilities.
class tmd__Capabilities;

//  Forward declaration of class tmd__RelayOutputOptions.
class tmd__RelayOutputOptions;

//  Forward declaration of class tmd__RelayOutputOptionsExtension.
class tmd__RelayOutputOptionsExtension;

//  Forward declaration of class tmd__Get.
class tmd__Get;

//  Forward declaration of class tmd__GetResponse.
class tmd__GetResponse;

//  Forward declaration of class tmd__DigitalInputConfigurationOptions.
class tmd__DigitalInputConfigurationOptions;

//  Forward declaration of class tmd__SerialData.
class tmd__SerialData;

//  Forward declaration of class tmd__SerialPort.
class tmd__SerialPort;

//  Forward declaration of class tmd__SerialPortConfiguration.
class tmd__SerialPortConfiguration;

//  Forward declaration of class tmd__SerialPortConfigurationOptions.
class tmd__SerialPortConfigurationOptions;

//  Forward declaration of class tmd__ParityBitList.
class tmd__ParityBitList;

//  Forward declaration of class _tmd__GetServiceCapabilities.
class _tmd__GetServiceCapabilities;

//  Forward declaration of class _tmd__GetServiceCapabilitiesResponse.
class _tmd__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tmd__GetRelayOutputOptions.
class _tmd__GetRelayOutputOptions;

//  Forward declaration of class _tmd__GetRelayOutputOptionsResponse.
class _tmd__GetRelayOutputOptionsResponse;

//  Forward declaration of class _tmd__GetVideoOutputs.
class _tmd__GetVideoOutputs;

//  Forward declaration of class _tmd__GetVideoOutputsResponse.
class _tmd__GetVideoOutputsResponse;

//  Forward declaration of class _tmd__GetAudioSourceConfiguration.
class _tmd__GetAudioSourceConfiguration;

//  Forward declaration of class _tmd__GetAudioSourceConfigurationResponse.
class _tmd__GetAudioSourceConfigurationResponse;

//  Forward declaration of class _tmd__GetAudioOutputConfiguration.
class _tmd__GetAudioOutputConfiguration;

//  Forward declaration of class _tmd__GetAudioOutputConfigurationResponse.
class _tmd__GetAudioOutputConfigurationResponse;

//  Forward declaration of class _tmd__GetVideoSourceConfiguration.
class _tmd__GetVideoSourceConfiguration;

//  Forward declaration of class _tmd__GetVideoSourceConfigurationResponse.
class _tmd__GetVideoSourceConfigurationResponse;

//  Forward declaration of class _tmd__GetVideoOutputConfiguration.
class _tmd__GetVideoOutputConfiguration;

//  Forward declaration of class _tmd__GetVideoOutputConfigurationResponse.
class _tmd__GetVideoOutputConfigurationResponse;

//  Forward declaration of class _tmd__SetAudioSourceConfiguration.
class _tmd__SetAudioSourceConfiguration;

//  Forward declaration of class _tmd__SetAudioSourceConfigurationResponse.
class _tmd__SetAudioSourceConfigurationResponse;

//  Forward declaration of class _tmd__SetAudioOutputConfiguration.
class _tmd__SetAudioOutputConfiguration;

//  Forward declaration of class _tmd__SetAudioOutputConfigurationResponse.
class _tmd__SetAudioOutputConfigurationResponse;

//  Forward declaration of class _tmd__SetVideoSourceConfiguration.
class _tmd__SetVideoSourceConfiguration;

//  Forward declaration of class _tmd__SetVideoSourceConfigurationResponse.
class _tmd__SetVideoSourceConfigurationResponse;

//  Forward declaration of class _tmd__SetVideoOutputConfiguration.
class _tmd__SetVideoOutputConfiguration;

//  Forward declaration of class _tmd__SetVideoOutputConfigurationResponse.
class _tmd__SetVideoOutputConfigurationResponse;

//  Forward declaration of class _tmd__GetVideoSourceConfigurationOptions.
class _tmd__GetVideoSourceConfigurationOptions;

//  Forward declaration of class _tmd__GetVideoSourceConfigurationOptionsResponse.
class _tmd__GetVideoSourceConfigurationOptionsResponse;

//  Forward declaration of class _tmd__GetVideoOutputConfigurationOptions.
class _tmd__GetVideoOutputConfigurationOptions;

//  Forward declaration of class _tmd__GetVideoOutputConfigurationOptionsResponse.
class _tmd__GetVideoOutputConfigurationOptionsResponse;

//  Forward declaration of class _tmd__GetAudioSourceConfigurationOptions.
class _tmd__GetAudioSourceConfigurationOptions;

//  Forward declaration of class _tmd__GetAudioSourceConfigurationOptionsResponse.
class _tmd__GetAudioSourceConfigurationOptionsResponse;

//  Forward declaration of class _tmd__GetAudioOutputConfigurationOptions.
class _tmd__GetAudioOutputConfigurationOptions;

//  Forward declaration of class _tmd__GetAudioOutputConfigurationOptionsResponse.
class _tmd__GetAudioOutputConfigurationOptionsResponse;

//  Forward declaration of class _tmd__SetRelayOutputSettings.
class _tmd__SetRelayOutputSettings;

//  Forward declaration of class _tmd__SetRelayOutputSettingsResponse.
class _tmd__SetRelayOutputSettingsResponse;

//  Forward declaration of class _tmd__GetDigitalInputs.
class _tmd__GetDigitalInputs;

//  Forward declaration of class _tmd__GetDigitalInputsResponse.
class _tmd__GetDigitalInputsResponse;

//  Forward declaration of class _tmd__GetDigitalInputConfigurationOptions.
class _tmd__GetDigitalInputConfigurationOptions;

//  Forward declaration of class _tmd__GetDigitalInputConfigurationOptionsResponse.
class _tmd__GetDigitalInputConfigurationOptionsResponse;

//  Forward declaration of class _tmd__SetDigitalInputConfigurations.
class _tmd__SetDigitalInputConfigurations;

//  Forward declaration of class _tmd__SetDigitalInputConfigurationsResponse.
class _tmd__SetDigitalInputConfigurationsResponse;

//  Forward declaration of class _tmd__GetSerialPorts.
class _tmd__GetSerialPorts;

//  Forward declaration of class _tmd__GetSerialPortsResponse.
class _tmd__GetSerialPortsResponse;

//  Forward declaration of class _tmd__GetSerialPortConfiguration.
class _tmd__GetSerialPortConfiguration;

//  Forward declaration of class _tmd__GetSerialPortConfigurationResponse.
class _tmd__GetSerialPortConfigurationResponse;

//  Forward declaration of class _tmd__SetSerialPortConfiguration.
class _tmd__SetSerialPortConfiguration;

//  Forward declaration of class _tmd__SetSerialPortConfigurationResponse.
class _tmd__SetSerialPortConfigurationResponse;

//  Forward declaration of class _tmd__GetSerialPortConfigurationOptions.
class _tmd__GetSerialPortConfigurationOptions;

//  Forward declaration of class _tmd__GetSerialPortConfigurationOptionsResponse.
class _tmd__GetSerialPortConfigurationOptionsResponse;

//  Forward declaration of class _tmd__SendReceiveSerialCommand.
class _tmd__SendReceiveSerialCommand;

//  Forward declaration of class _tmd__SendReceiveSerialCommandResponse.
class _tmd__SendReceiveSerialCommandResponse;

//  Forward declaration of class tev__Capabilities.
class tev__Capabilities;

//  Forward declaration of class _tev__GetServiceCapabilities.
class _tev__GetServiceCapabilities;

//  Forward declaration of class _tev__GetServiceCapabilitiesResponse.
class _tev__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tev__CreatePullPointSubscription.
class _tev__CreatePullPointSubscription;

//  Forward declaration of class _tev__CreatePullPointSubscriptionResponse.
class _tev__CreatePullPointSubscriptionResponse;

//  Forward declaration of class _tev__PullMessages.
class _tev__PullMessages;

//  Forward declaration of class _tev__PullMessagesResponse.
class _tev__PullMessagesResponse;

//  Forward declaration of class _tev__PullMessagesFaultResponse.
class _tev__PullMessagesFaultResponse;

//  Forward declaration of class _tev__Seek.
class _tev__Seek;

//  Forward declaration of class _tev__SeekResponse.
class _tev__SeekResponse;

//  Forward declaration of class _tev__SetSynchronizationPoint.
class _tev__SetSynchronizationPoint;

//  Forward declaration of class _tev__SetSynchronizationPointResponse.
class _tev__SetSynchronizationPointResponse;

//  Forward declaration of class _tev__GetEventProperties.
class _tev__GetEventProperties;

//  Forward declaration of class _tev__GetEventPropertiesResponse.
class _tev__GetEventPropertiesResponse;

/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":ChangedOnly.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

//  Forward declaration of class wsrfr__ResourceUnknownFaultType.
class wsrfr__ResourceUnknownFaultType;

//  Forward declaration of class wsrfr__ResourceUnavailableFaultType.
class wsrfr__ResourceUnavailableFaultType;

//  Forward declaration of class trv__Capabilities.
class trv__Capabilities;

//  Forward declaration of class _trv__GetServiceCapabilities.
class _trv__GetServiceCapabilities;

//  Forward declaration of class _trv__GetServiceCapabilitiesResponse.
class _trv__GetServiceCapabilitiesResponse;

//  Forward declaration of class _trv__GetReceivers.
class _trv__GetReceivers;

//  Forward declaration of class _trv__GetReceiversResponse.
class _trv__GetReceiversResponse;

//  Forward declaration of class _trv__GetReceiver.
class _trv__GetReceiver;

//  Forward declaration of class _trv__GetReceiverResponse.
class _trv__GetReceiverResponse;

//  Forward declaration of class _trv__CreateReceiver.
class _trv__CreateReceiver;

//  Forward declaration of class _trv__CreateReceiverResponse.
class _trv__CreateReceiverResponse;

//  Forward declaration of class _trv__DeleteReceiver.
class _trv__DeleteReceiver;

//  Forward declaration of class _trv__DeleteReceiverResponse.
class _trv__DeleteReceiverResponse;

//  Forward declaration of class _trv__ConfigureReceiver.
class _trv__ConfigureReceiver;

//  Forward declaration of class _trv__ConfigureReceiverResponse.
class _trv__ConfigureReceiverResponse;

//  Forward declaration of class _trv__SetReceiverMode.
class _trv__SetReceiverMode;

//  Forward declaration of class _trv__SetReceiverModeResponse.
class _trv__SetReceiverModeResponse;

//  Forward declaration of class _trv__GetReceiverState.
class _trv__GetReceiverState;

//  Forward declaration of class _trv__GetReceiverStateResponse.
class _trv__GetReceiverStateResponse;

//  Forward declaration of class trt__Capabilities.
class trt__Capabilities;

//  Forward declaration of class trt__ProfileCapabilities.
class trt__ProfileCapabilities;

//  Forward declaration of class trt__StreamingCapabilities.
class trt__StreamingCapabilities;

//  Forward declaration of class trt__VideoSourceMode.
class trt__VideoSourceMode;

//  Forward declaration of class trt__VideoSourceModeExtension.
class trt__VideoSourceModeExtension;

//  Forward declaration of class _trt__GetServiceCapabilities.
class _trt__GetServiceCapabilities;

//  Forward declaration of class _trt__GetServiceCapabilitiesResponse.
class _trt__GetServiceCapabilitiesResponse;

//  Forward declaration of class _trt__GetVideoSources.
class _trt__GetVideoSources;

//  Forward declaration of class _trt__GetVideoSourcesResponse.
class _trt__GetVideoSourcesResponse;

//  Forward declaration of class _trt__GetAudioSources.
class _trt__GetAudioSources;

//  Forward declaration of class _trt__GetAudioSourcesResponse.
class _trt__GetAudioSourcesResponse;

//  Forward declaration of class _trt__GetAudioOutputs.
class _trt__GetAudioOutputs;

//  Forward declaration of class _trt__GetAudioOutputsResponse.
class _trt__GetAudioOutputsResponse;

//  Forward declaration of class _trt__CreateProfile.
class _trt__CreateProfile;

//  Forward declaration of class _trt__CreateProfileResponse.
class _trt__CreateProfileResponse;

//  Forward declaration of class _trt__GetProfile.
class _trt__GetProfile;

//  Forward declaration of class _trt__GetProfileResponse.
class _trt__GetProfileResponse;

//  Forward declaration of class _trt__GetProfiles.
class _trt__GetProfiles;

//  Forward declaration of class _trt__GetProfilesResponse.
class _trt__GetProfilesResponse;

//  Forward declaration of class _trt__AddVideoEncoderConfiguration.
class _trt__AddVideoEncoderConfiguration;

//  Forward declaration of class _trt__AddVideoEncoderConfigurationResponse.
class _trt__AddVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoEncoderConfiguration.
class _trt__RemoveVideoEncoderConfiguration;

//  Forward declaration of class _trt__RemoveVideoEncoderConfigurationResponse.
class _trt__RemoveVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__AddVideoSourceConfiguration.
class _trt__AddVideoSourceConfiguration;

//  Forward declaration of class _trt__AddVideoSourceConfigurationResponse.
class _trt__AddVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoSourceConfiguration.
class _trt__RemoveVideoSourceConfiguration;

//  Forward declaration of class _trt__RemoveVideoSourceConfigurationResponse.
class _trt__RemoveVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__AddAudioEncoderConfiguration.
class _trt__AddAudioEncoderConfiguration;

//  Forward declaration of class _trt__AddAudioEncoderConfigurationResponse.
class _trt__AddAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioEncoderConfiguration.
class _trt__RemoveAudioEncoderConfiguration;

//  Forward declaration of class _trt__RemoveAudioEncoderConfigurationResponse.
class _trt__RemoveAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__AddAudioSourceConfiguration.
class _trt__AddAudioSourceConfiguration;

//  Forward declaration of class _trt__AddAudioSourceConfigurationResponse.
class _trt__AddAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioSourceConfiguration.
class _trt__RemoveAudioSourceConfiguration;

//  Forward declaration of class _trt__RemoveAudioSourceConfigurationResponse.
class _trt__RemoveAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__AddPTZConfiguration.
class _trt__AddPTZConfiguration;

//  Forward declaration of class _trt__AddPTZConfigurationResponse.
class _trt__AddPTZConfigurationResponse;

//  Forward declaration of class _trt__RemovePTZConfiguration.
class _trt__RemovePTZConfiguration;

//  Forward declaration of class _trt__RemovePTZConfigurationResponse.
class _trt__RemovePTZConfigurationResponse;

//  Forward declaration of class _trt__AddVideoAnalyticsConfiguration.
class _trt__AddVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__AddVideoAnalyticsConfigurationResponse.
class _trt__AddVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoAnalyticsConfiguration.
class _trt__RemoveVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__RemoveVideoAnalyticsConfigurationResponse.
class _trt__RemoveVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__AddMetadataConfiguration.
class _trt__AddMetadataConfiguration;

//  Forward declaration of class _trt__AddMetadataConfigurationResponse.
class _trt__AddMetadataConfigurationResponse;

//  Forward declaration of class _trt__RemoveMetadataConfiguration.
class _trt__RemoveMetadataConfiguration;

//  Forward declaration of class _trt__RemoveMetadataConfigurationResponse.
class _trt__RemoveMetadataConfigurationResponse;

//  Forward declaration of class _trt__AddAudioOutputConfiguration.
class _trt__AddAudioOutputConfiguration;

//  Forward declaration of class _trt__AddAudioOutputConfigurationResponse.
class _trt__AddAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioOutputConfiguration.
class _trt__RemoveAudioOutputConfiguration;

//  Forward declaration of class _trt__RemoveAudioOutputConfigurationResponse.
class _trt__RemoveAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__AddAudioDecoderConfiguration.
class _trt__AddAudioDecoderConfiguration;

//  Forward declaration of class _trt__AddAudioDecoderConfigurationResponse.
class _trt__AddAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioDecoderConfiguration.
class _trt__RemoveAudioDecoderConfiguration;

//  Forward declaration of class _trt__RemoveAudioDecoderConfigurationResponse.
class _trt__RemoveAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__DeleteProfile.
class _trt__DeleteProfile;

//  Forward declaration of class _trt__DeleteProfileResponse.
class _trt__DeleteProfileResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfigurations.
class _trt__GetVideoEncoderConfigurations;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationsResponse.
class _trt__GetVideoEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoSourceConfigurations.
class _trt__GetVideoSourceConfigurations;

//  Forward declaration of class _trt__GetVideoSourceConfigurationsResponse.
class _trt__GetVideoSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfigurations.
class _trt__GetAudioEncoderConfigurations;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationsResponse.
class _trt__GetAudioEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioSourceConfigurations.
class _trt__GetAudioSourceConfigurations;

//  Forward declaration of class _trt__GetAudioSourceConfigurationsResponse.
class _trt__GetAudioSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurations.
class _trt__GetVideoAnalyticsConfigurations;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurationsResponse.
class _trt__GetVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _trt__GetMetadataConfigurations.
class _trt__GetMetadataConfigurations;

//  Forward declaration of class _trt__GetMetadataConfigurationsResponse.
class _trt__GetMetadataConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioOutputConfigurations.
class _trt__GetAudioOutputConfigurations;

//  Forward declaration of class _trt__GetAudioOutputConfigurationsResponse.
class _trt__GetAudioOutputConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioDecoderConfigurations.
class _trt__GetAudioDecoderConfigurations;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationsResponse.
class _trt__GetAudioDecoderConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoSourceConfiguration.
class _trt__GetVideoSourceConfiguration;

//  Forward declaration of class _trt__GetVideoSourceConfigurationResponse.
class _trt__GetVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfiguration.
class _trt__GetVideoEncoderConfiguration;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationResponse.
class _trt__GetVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__GetAudioSourceConfiguration.
class _trt__GetAudioSourceConfiguration;

//  Forward declaration of class _trt__GetAudioSourceConfigurationResponse.
class _trt__GetAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfiguration.
class _trt__GetAudioEncoderConfiguration;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationResponse.
class _trt__GetAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__GetVideoAnalyticsConfiguration.
class _trt__GetVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurationResponse.
class _trt__GetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__GetMetadataConfiguration.
class _trt__GetMetadataConfiguration;

//  Forward declaration of class _trt__GetMetadataConfigurationResponse.
class _trt__GetMetadataConfigurationResponse;

//  Forward declaration of class _trt__GetAudioOutputConfiguration.
class _trt__GetAudioOutputConfiguration;

//  Forward declaration of class _trt__GetAudioOutputConfigurationResponse.
class _trt__GetAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__GetAudioDecoderConfiguration.
class _trt__GetAudioDecoderConfiguration;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationResponse.
class _trt__GetAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__GetCompatibleVideoEncoderConfigurations.
class _trt__GetCompatibleVideoEncoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoEncoderConfigurationsResponse.
class _trt__GetCompatibleVideoEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleVideoSourceConfigurations.
class _trt__GetCompatibleVideoSourceConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoSourceConfigurationsResponse.
class _trt__GetCompatibleVideoSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioEncoderConfigurations.
class _trt__GetCompatibleAudioEncoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioEncoderConfigurationsResponse.
class _trt__GetCompatibleAudioEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioSourceConfigurations.
class _trt__GetCompatibleAudioSourceConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioSourceConfigurationsResponse.
class _trt__GetCompatibleAudioSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleVideoAnalyticsConfigurations.
class _trt__GetCompatibleVideoAnalyticsConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse.
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleMetadataConfigurations.
class _trt__GetCompatibleMetadataConfigurations;

//  Forward declaration of class _trt__GetCompatibleMetadataConfigurationsResponse.
class _trt__GetCompatibleMetadataConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioOutputConfigurations.
class _trt__GetCompatibleAudioOutputConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioOutputConfigurationsResponse.
class _trt__GetCompatibleAudioOutputConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioDecoderConfigurations.
class _trt__GetCompatibleAudioDecoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioDecoderConfigurationsResponse.
class _trt__GetCompatibleAudioDecoderConfigurationsResponse;

//  Forward declaration of class _trt__SetVideoEncoderConfiguration.
class _trt__SetVideoEncoderConfiguration;

//  Forward declaration of class _trt__SetVideoEncoderConfigurationResponse.
class _trt__SetVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__SetVideoSourceConfiguration.
class _trt__SetVideoSourceConfiguration;

//  Forward declaration of class _trt__SetVideoSourceConfigurationResponse.
class _trt__SetVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__SetAudioEncoderConfiguration.
class _trt__SetAudioEncoderConfiguration;

//  Forward declaration of class _trt__SetAudioEncoderConfigurationResponse.
class _trt__SetAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__SetAudioSourceConfiguration.
class _trt__SetAudioSourceConfiguration;

//  Forward declaration of class _trt__SetAudioSourceConfigurationResponse.
class _trt__SetAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__SetVideoAnalyticsConfiguration.
class _trt__SetVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__SetVideoAnalyticsConfigurationResponse.
class _trt__SetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__SetMetadataConfiguration.
class _trt__SetMetadataConfiguration;

//  Forward declaration of class _trt__SetMetadataConfigurationResponse.
class _trt__SetMetadataConfigurationResponse;

//  Forward declaration of class _trt__SetAudioOutputConfiguration.
class _trt__SetAudioOutputConfiguration;

//  Forward declaration of class _trt__SetAudioOutputConfigurationResponse.
class _trt__SetAudioOutputConfigurationResponse;

//  Forward declaration of class _trt__SetAudioDecoderConfiguration.
class _trt__SetAudioDecoderConfiguration;

//  Forward declaration of class _trt__SetAudioDecoderConfigurationResponse.
class _trt__SetAudioDecoderConfigurationResponse;

//  Forward declaration of class _trt__GetVideoSourceConfigurationOptions.
class _trt__GetVideoSourceConfigurationOptions;

//  Forward declaration of class _trt__GetVideoSourceConfigurationOptionsResponse.
class _trt__GetVideoSourceConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationOptions.
class _trt__GetVideoEncoderConfigurationOptions;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationOptionsResponse.
class _trt__GetVideoEncoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioSourceConfigurationOptions.
class _trt__GetAudioSourceConfigurationOptions;

//  Forward declaration of class _trt__GetAudioSourceConfigurationOptionsResponse.
class _trt__GetAudioSourceConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationOptions.
class _trt__GetAudioEncoderConfigurationOptions;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationOptionsResponse.
class _trt__GetAudioEncoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetMetadataConfigurationOptions.
class _trt__GetMetadataConfigurationOptions;

//  Forward declaration of class _trt__GetMetadataConfigurationOptionsResponse.
class _trt__GetMetadataConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioOutputConfigurationOptions.
class _trt__GetAudioOutputConfigurationOptions;

//  Forward declaration of class _trt__GetAudioOutputConfigurationOptionsResponse.
class _trt__GetAudioOutputConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationOptions.
class _trt__GetAudioDecoderConfigurationOptions;

//  Forward declaration of class _trt__GetAudioDecoderConfigurationOptionsResponse.
class _trt__GetAudioDecoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetGuaranteedNumberOfVideoEncoderInstances.
class _trt__GetGuaranteedNumberOfVideoEncoderInstances;

//  Forward declaration of class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse;

//  Forward declaration of class _trt__GetStreamUri.
class _trt__GetStreamUri;

//  Forward declaration of class _trt__GetStreamUriResponse.
class _trt__GetStreamUriResponse;

//  Forward declaration of class _trt__StartMulticastStreaming.
class _trt__StartMulticastStreaming;

//  Forward declaration of class _trt__StartMulticastStreamingResponse.
class _trt__StartMulticastStreamingResponse;

//  Forward declaration of class _trt__StopMulticastStreaming.
class _trt__StopMulticastStreaming;

//  Forward declaration of class _trt__StopMulticastStreamingResponse.
class _trt__StopMulticastStreamingResponse;

//  Forward declaration of class _trt__SetSynchronizationPoint.
class _trt__SetSynchronizationPoint;

//  Forward declaration of class _trt__SetSynchronizationPointResponse.
class _trt__SetSynchronizationPointResponse;

//  Forward declaration of class _trt__GetSnapshotUri.
class _trt__GetSnapshotUri;

//  Forward declaration of class _trt__GetSnapshotUriResponse.
class _trt__GetSnapshotUriResponse;

//  Forward declaration of class _trt__GetVideoSourceModes.
class _trt__GetVideoSourceModes;

//  Forward declaration of class _trt__GetVideoSourceModesResponse.
class _trt__GetVideoSourceModesResponse;

//  Forward declaration of class _trt__SetVideoSourceMode.
class _trt__SetVideoSourceMode;

//  Forward declaration of class _trt__SetVideoSourceModeResponse.
class _trt__SetVideoSourceModeResponse;

//  Forward declaration of class _trt__GetOSDs.
class _trt__GetOSDs;

//  Forward declaration of class _trt__GetOSDsResponse.
class _trt__GetOSDsResponse;

//  Forward declaration of class _trt__GetOSD.
class _trt__GetOSD;

//  Forward declaration of class _trt__GetOSDResponse.
class _trt__GetOSDResponse;

//  Forward declaration of class _trt__SetOSD.
class _trt__SetOSD;

//  Forward declaration of class _trt__SetOSDResponse.
class _trt__SetOSDResponse;

//  Forward declaration of class _trt__GetOSDOptions.
class _trt__GetOSDOptions;

//  Forward declaration of class _trt__GetOSDOptionsResponse.
class _trt__GetOSDOptionsResponse;

//  Forward declaration of class _trt__CreateOSD.
class _trt__CreateOSD;

//  Forward declaration of class _trt__CreateOSDResponse.
class _trt__CreateOSDResponse;

//  Forward declaration of class _trt__DeleteOSD.
class _trt__DeleteOSD;

//  Forward declaration of class _trt__DeleteOSDResponse.
class _trt__DeleteOSDResponse;

//  Forward declaration of class tse__Capabilities.
class tse__Capabilities;

//  Forward declaration of class _tse__GetServiceCapabilities.
class _tse__GetServiceCapabilities;

//  Forward declaration of class _tse__GetServiceCapabilitiesResponse.
class _tse__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tse__GetRecordingSummary.
class _tse__GetRecordingSummary;

//  Forward declaration of class _tse__GetRecordingSummaryResponse.
class _tse__GetRecordingSummaryResponse;

//  Forward declaration of class _tse__GetRecordingInformation.
class _tse__GetRecordingInformation;

//  Forward declaration of class _tse__GetRecordingInformationResponse.
class _tse__GetRecordingInformationResponse;

//  Forward declaration of class _tse__GetMediaAttributes.
class _tse__GetMediaAttributes;

//  Forward declaration of class _tse__GetMediaAttributesResponse.
class _tse__GetMediaAttributesResponse;

//  Forward declaration of class _tse__FindRecordings.
class _tse__FindRecordings;

//  Forward declaration of class _tse__FindRecordingsResponse.
class _tse__FindRecordingsResponse;

//  Forward declaration of class _tse__GetRecordingSearchResults.
class _tse__GetRecordingSearchResults;

//  Forward declaration of class _tse__GetRecordingSearchResultsResponse.
class _tse__GetRecordingSearchResultsResponse;

//  Forward declaration of class _tse__FindEvents.
class _tse__FindEvents;

//  Forward declaration of class _tse__FindEventsResponse.
class _tse__FindEventsResponse;

//  Forward declaration of class _tse__GetEventSearchResults.
class _tse__GetEventSearchResults;

//  Forward declaration of class _tse__GetEventSearchResultsResponse.
class _tse__GetEventSearchResultsResponse;

//  Forward declaration of class _tse__FindPTZPosition.
class _tse__FindPTZPosition;

//  Forward declaration of class _tse__FindPTZPositionResponse.
class _tse__FindPTZPositionResponse;

//  Forward declaration of class _tse__GetPTZPositionSearchResults.
class _tse__GetPTZPositionSearchResults;

//  Forward declaration of class _tse__GetPTZPositionSearchResultsResponse.
class _tse__GetPTZPositionSearchResultsResponse;

//  Forward declaration of class _tse__FindMetadata.
class _tse__FindMetadata;

//  Forward declaration of class _tse__FindMetadataResponse.
class _tse__FindMetadataResponse;

//  Forward declaration of class _tse__GetMetadataSearchResults.
class _tse__GetMetadataSearchResults;

//  Forward declaration of class _tse__GetMetadataSearchResultsResponse.
class _tse__GetMetadataSearchResultsResponse;

//  Forward declaration of class _tse__GetSearchState.
class _tse__GetSearchState;

//  Forward declaration of class _tse__GetSearchStateResponse.
class _tse__GetSearchStateResponse;

//  Forward declaration of class _tse__EndSearch.
class _tse__EndSearch;

//  Forward declaration of class _tse__EndSearchResponse.
class _tse__EndSearchResponse;

//  Forward declaration of class tds__Service.
class tds__Service;

//  Forward declaration of class tds__DeviceServiceCapabilities.
class tds__DeviceServiceCapabilities;

//  Forward declaration of class tds__NetworkCapabilities.
class tds__NetworkCapabilities;

//  Forward declaration of class tds__SecurityCapabilities.
class tds__SecurityCapabilities;

//  Forward declaration of class tds__SystemCapabilities.
class tds__SystemCapabilities;

//  Forward declaration of class tds__MiscCapabilities.
class tds__MiscCapabilities;

//  Forward declaration of class tds__UserCredential.
class tds__UserCredential;

//  Forward declaration of class tds__StorageConfigurationData.
class tds__StorageConfigurationData;

//  Forward declaration of class tds__StorageConfiguration.
class tds__StorageConfiguration;

//  Forward declaration of class _tds__GetServices.
class _tds__GetServices;

//  Forward declaration of class _tds__GetServicesResponse.
class _tds__GetServicesResponse;

//  Forward declaration of class _tds__GetServiceCapabilities.
class _tds__GetServiceCapabilities;

//  Forward declaration of class _tds__GetServiceCapabilitiesResponse.
class _tds__GetServiceCapabilitiesResponse;

//  Forward declaration of class _tds__GetDeviceInformation.
class _tds__GetDeviceInformation;

//  Forward declaration of class _tds__GetDeviceInformationResponse.
class _tds__GetDeviceInformationResponse;

//  Forward declaration of class _tds__SetSystemDateAndTime.
class _tds__SetSystemDateAndTime;

//  Forward declaration of class _tds__SetSystemDateAndTimeResponse.
class _tds__SetSystemDateAndTimeResponse;

//  Forward declaration of class _tds__GetSystemDateAndTime.
class _tds__GetSystemDateAndTime;

//  Forward declaration of class _tds__GetSystemDateAndTimeResponse.
class _tds__GetSystemDateAndTimeResponse;

//  Forward declaration of class _tds__SetSystemFactoryDefault.
class _tds__SetSystemFactoryDefault;

//  Forward declaration of class _tds__SetSystemFactoryDefaultResponse.
class _tds__SetSystemFactoryDefaultResponse;

//  Forward declaration of class _tds__UpgradeSystemFirmware.
class _tds__UpgradeSystemFirmware;

//  Forward declaration of class _tds__UpgradeSystemFirmwareResponse.
class _tds__UpgradeSystemFirmwareResponse;

//  Forward declaration of class _tds__SystemReboot.
class _tds__SystemReboot;

//  Forward declaration of class _tds__SystemRebootResponse.
class _tds__SystemRebootResponse;

//  Forward declaration of class _tds__RestoreSystem.
class _tds__RestoreSystem;

//  Forward declaration of class _tds__RestoreSystemResponse.
class _tds__RestoreSystemResponse;

//  Forward declaration of class _tds__GetSystemBackup.
class _tds__GetSystemBackup;

//  Forward declaration of class _tds__GetSystemBackupResponse.
class _tds__GetSystemBackupResponse;

//  Forward declaration of class _tds__GetSystemSupportInformation.
class _tds__GetSystemSupportInformation;

//  Forward declaration of class _tds__GetSystemSupportInformationResponse.
class _tds__GetSystemSupportInformationResponse;

//  Forward declaration of class _tds__GetSystemLog.
class _tds__GetSystemLog;

//  Forward declaration of class _tds__GetSystemLogResponse.
class _tds__GetSystemLogResponse;

//  Forward declaration of class _tds__GetScopes.
class _tds__GetScopes;

//  Forward declaration of class _tds__GetScopesResponse.
class _tds__GetScopesResponse;

//  Forward declaration of class _tds__SetScopes.
class _tds__SetScopes;

//  Forward declaration of class _tds__SetScopesResponse.
class _tds__SetScopesResponse;

//  Forward declaration of class _tds__AddScopes.
class _tds__AddScopes;

//  Forward declaration of class _tds__AddScopesResponse.
class _tds__AddScopesResponse;

//  Forward declaration of class _tds__RemoveScopes.
class _tds__RemoveScopes;

//  Forward declaration of class _tds__RemoveScopesResponse.
class _tds__RemoveScopesResponse;

//  Forward declaration of class _tds__GetDiscoveryMode.
class _tds__GetDiscoveryMode;

//  Forward declaration of class _tds__GetDiscoveryModeResponse.
class _tds__GetDiscoveryModeResponse;

//  Forward declaration of class _tds__SetDiscoveryMode.
class _tds__SetDiscoveryMode;

//  Forward declaration of class _tds__SetDiscoveryModeResponse.
class _tds__SetDiscoveryModeResponse;

//  Forward declaration of class _tds__GetRemoteDiscoveryMode.
class _tds__GetRemoteDiscoveryMode;

//  Forward declaration of class _tds__GetRemoteDiscoveryModeResponse.
class _tds__GetRemoteDiscoveryModeResponse;

//  Forward declaration of class _tds__SetRemoteDiscoveryMode.
class _tds__SetRemoteDiscoveryMode;

//  Forward declaration of class _tds__SetRemoteDiscoveryModeResponse.
class _tds__SetRemoteDiscoveryModeResponse;

//  Forward declaration of class _tds__GetDPAddresses.
class _tds__GetDPAddresses;

//  Forward declaration of class _tds__GetDPAddressesResponse.
class _tds__GetDPAddressesResponse;

//  Forward declaration of class _tds__SetDPAddresses.
class _tds__SetDPAddresses;

//  Forward declaration of class _tds__SetDPAddressesResponse.
class _tds__SetDPAddressesResponse;

//  Forward declaration of class _tds__GetEndpointReference.
class _tds__GetEndpointReference;

//  Forward declaration of class _tds__GetEndpointReferenceResponse.
class _tds__GetEndpointReferenceResponse;

//  Forward declaration of class _tds__GetRemoteUser.
class _tds__GetRemoteUser;

//  Forward declaration of class _tds__GetRemoteUserResponse.
class _tds__GetRemoteUserResponse;

//  Forward declaration of class _tds__SetRemoteUser.
class _tds__SetRemoteUser;

//  Forward declaration of class _tds__SetRemoteUserResponse.
class _tds__SetRemoteUserResponse;

//  Forward declaration of class _tds__GetUsers.
class _tds__GetUsers;

//  Forward declaration of class _tds__GetUsersResponse.
class _tds__GetUsersResponse;

//  Forward declaration of class _tds__CreateUsers.
class _tds__CreateUsers;

//  Forward declaration of class _tds__CreateUsersResponse.
class _tds__CreateUsersResponse;

//  Forward declaration of class _tds__DeleteUsers.
class _tds__DeleteUsers;

//  Forward declaration of class _tds__DeleteUsersResponse.
class _tds__DeleteUsersResponse;

//  Forward declaration of class _tds__SetUser.
class _tds__SetUser;

//  Forward declaration of class _tds__SetUserResponse.
class _tds__SetUserResponse;

//  Forward declaration of class _tds__GetWsdlUrl.
class _tds__GetWsdlUrl;

//  Forward declaration of class _tds__GetWsdlUrlResponse.
class _tds__GetWsdlUrlResponse;

//  Forward declaration of class _tds__GetCapabilities.
class _tds__GetCapabilities;

//  Forward declaration of class _tds__GetCapabilitiesResponse.
class _tds__GetCapabilitiesResponse;

//  Forward declaration of class _tds__GetHostname.
class _tds__GetHostname;

//  Forward declaration of class _tds__GetHostnameResponse.
class _tds__GetHostnameResponse;

//  Forward declaration of class _tds__SetHostname.
class _tds__SetHostname;

//  Forward declaration of class _tds__SetHostnameResponse.
class _tds__SetHostnameResponse;

//  Forward declaration of class _tds__SetHostnameFromDHCP.
class _tds__SetHostnameFromDHCP;

//  Forward declaration of class _tds__SetHostnameFromDHCPResponse.
class _tds__SetHostnameFromDHCPResponse;

//  Forward declaration of class _tds__GetDNS.
class _tds__GetDNS;

//  Forward declaration of class _tds__GetDNSResponse.
class _tds__GetDNSResponse;

//  Forward declaration of class _tds__SetDNS.
class _tds__SetDNS;

//  Forward declaration of class _tds__SetDNSResponse.
class _tds__SetDNSResponse;

//  Forward declaration of class _tds__GetNTP.
class _tds__GetNTP;

//  Forward declaration of class _tds__GetNTPResponse.
class _tds__GetNTPResponse;

//  Forward declaration of class _tds__SetNTP.
class _tds__SetNTP;

//  Forward declaration of class _tds__SetNTPResponse.
class _tds__SetNTPResponse;

//  Forward declaration of class _tds__GetDynamicDNS.
class _tds__GetDynamicDNS;

//  Forward declaration of class _tds__GetDynamicDNSResponse.
class _tds__GetDynamicDNSResponse;

//  Forward declaration of class _tds__SetDynamicDNS.
class _tds__SetDynamicDNS;

//  Forward declaration of class _tds__SetDynamicDNSResponse.
class _tds__SetDynamicDNSResponse;

//  Forward declaration of class _tds__GetNetworkInterfaces.
class _tds__GetNetworkInterfaces;

//  Forward declaration of class _tds__GetNetworkInterfacesResponse.
class _tds__GetNetworkInterfacesResponse;

//  Forward declaration of class _tds__SetNetworkInterfaces.
class _tds__SetNetworkInterfaces;

//  Forward declaration of class _tds__SetNetworkInterfacesResponse.
class _tds__SetNetworkInterfacesResponse;

//  Forward declaration of class _tds__GetNetworkProtocols.
class _tds__GetNetworkProtocols;

//  Forward declaration of class _tds__GetNetworkProtocolsResponse.
class _tds__GetNetworkProtocolsResponse;

//  Forward declaration of class _tds__SetNetworkProtocols.
class _tds__SetNetworkProtocols;

//  Forward declaration of class _tds__SetNetworkProtocolsResponse.
class _tds__SetNetworkProtocolsResponse;

//  Forward declaration of class _tds__GetNetworkDefaultGateway.
class _tds__GetNetworkDefaultGateway;

//  Forward declaration of class _tds__GetNetworkDefaultGatewayResponse.
class _tds__GetNetworkDefaultGatewayResponse;

//  Forward declaration of class _tds__SetNetworkDefaultGateway.
class _tds__SetNetworkDefaultGateway;

//  Forward declaration of class _tds__SetNetworkDefaultGatewayResponse.
class _tds__SetNetworkDefaultGatewayResponse;

//  Forward declaration of class _tds__GetZeroConfiguration.
class _tds__GetZeroConfiguration;

//  Forward declaration of class _tds__GetZeroConfigurationResponse.
class _tds__GetZeroConfigurationResponse;

//  Forward declaration of class _tds__SetZeroConfiguration.
class _tds__SetZeroConfiguration;

//  Forward declaration of class _tds__SetZeroConfigurationResponse.
class _tds__SetZeroConfigurationResponse;

//  Forward declaration of class _tds__GetIPAddressFilter.
class _tds__GetIPAddressFilter;

//  Forward declaration of class _tds__GetIPAddressFilterResponse.
class _tds__GetIPAddressFilterResponse;

//  Forward declaration of class _tds__SetIPAddressFilter.
class _tds__SetIPAddressFilter;

//  Forward declaration of class _tds__SetIPAddressFilterResponse.
class _tds__SetIPAddressFilterResponse;

//  Forward declaration of class _tds__AddIPAddressFilter.
class _tds__AddIPAddressFilter;

//  Forward declaration of class _tds__AddIPAddressFilterResponse.
class _tds__AddIPAddressFilterResponse;

//  Forward declaration of class _tds__RemoveIPAddressFilter.
class _tds__RemoveIPAddressFilter;

//  Forward declaration of class _tds__RemoveIPAddressFilterResponse.
class _tds__RemoveIPAddressFilterResponse;

//  Forward declaration of class _tds__GetAccessPolicy.
class _tds__GetAccessPolicy;

//  Forward declaration of class _tds__GetAccessPolicyResponse.
class _tds__GetAccessPolicyResponse;

//  Forward declaration of class _tds__SetAccessPolicy.
class _tds__SetAccessPolicy;

//  Forward declaration of class _tds__SetAccessPolicyResponse.
class _tds__SetAccessPolicyResponse;

//  Forward declaration of class _tds__CreateCertificate.
class _tds__CreateCertificate;

//  Forward declaration of class _tds__CreateCertificateResponse.
class _tds__CreateCertificateResponse;

//  Forward declaration of class _tds__GetCertificates.
class _tds__GetCertificates;

//  Forward declaration of class _tds__GetCertificatesResponse.
class _tds__GetCertificatesResponse;

//  Forward declaration of class _tds__GetCertificatesStatus.
class _tds__GetCertificatesStatus;

//  Forward declaration of class _tds__GetCertificatesStatusResponse.
class _tds__GetCertificatesStatusResponse;

//  Forward declaration of class _tds__SetCertificatesStatus.
class _tds__SetCertificatesStatus;

//  Forward declaration of class _tds__SetCertificatesStatusResponse.
class _tds__SetCertificatesStatusResponse;

//  Forward declaration of class _tds__DeleteCertificates.
class _tds__DeleteCertificates;

//  Forward declaration of class _tds__DeleteCertificatesResponse.
class _tds__DeleteCertificatesResponse;

//  Forward declaration of class _tds__GetPkcs10Request.
class _tds__GetPkcs10Request;

//  Forward declaration of class _tds__GetPkcs10RequestResponse.
class _tds__GetPkcs10RequestResponse;

//  Forward declaration of class _tds__LoadCertificates.
class _tds__LoadCertificates;

//  Forward declaration of class _tds__LoadCertificatesResponse.
class _tds__LoadCertificatesResponse;

//  Forward declaration of class _tds__GetClientCertificateMode.
class _tds__GetClientCertificateMode;

//  Forward declaration of class _tds__GetClientCertificateModeResponse.
class _tds__GetClientCertificateModeResponse;

//  Forward declaration of class _tds__SetClientCertificateMode.
class _tds__SetClientCertificateMode;

//  Forward declaration of class _tds__SetClientCertificateModeResponse.
class _tds__SetClientCertificateModeResponse;

//  Forward declaration of class _tds__GetCACertificates.
class _tds__GetCACertificates;

//  Forward declaration of class _tds__GetCACertificatesResponse.
class _tds__GetCACertificatesResponse;

//  Forward declaration of class _tds__LoadCertificateWithPrivateKey.
class _tds__LoadCertificateWithPrivateKey;

//  Forward declaration of class _tds__LoadCertificateWithPrivateKeyResponse.
class _tds__LoadCertificateWithPrivateKeyResponse;

//  Forward declaration of class _tds__GetCertificateInformation.
class _tds__GetCertificateInformation;

//  Forward declaration of class _tds__GetCertificateInformationResponse.
class _tds__GetCertificateInformationResponse;

//  Forward declaration of class _tds__LoadCACertificates.
class _tds__LoadCACertificates;

//  Forward declaration of class _tds__LoadCACertificatesResponse.
class _tds__LoadCACertificatesResponse;

//  Forward declaration of class _tds__CreateDot1XConfiguration.
class _tds__CreateDot1XConfiguration;

//  Forward declaration of class _tds__CreateDot1XConfigurationResponse.
class _tds__CreateDot1XConfigurationResponse;

//  Forward declaration of class _tds__SetDot1XConfiguration.
class _tds__SetDot1XConfiguration;

//  Forward declaration of class _tds__SetDot1XConfigurationResponse.
class _tds__SetDot1XConfigurationResponse;

//  Forward declaration of class _tds__GetDot1XConfiguration.
class _tds__GetDot1XConfiguration;

//  Forward declaration of class _tds__GetDot1XConfigurationResponse.
class _tds__GetDot1XConfigurationResponse;

//  Forward declaration of class _tds__GetDot1XConfigurations.
class _tds__GetDot1XConfigurations;

//  Forward declaration of class _tds__GetDot1XConfigurationsResponse.
class _tds__GetDot1XConfigurationsResponse;

//  Forward declaration of class _tds__DeleteDot1XConfiguration.
class _tds__DeleteDot1XConfiguration;

//  Forward declaration of class _tds__DeleteDot1XConfigurationResponse.
class _tds__DeleteDot1XConfigurationResponse;

//  Forward declaration of class _tds__GetRelayOutputs.
class _tds__GetRelayOutputs;

//  Forward declaration of class _tds__GetRelayOutputsResponse.
class _tds__GetRelayOutputsResponse;

//  Forward declaration of class _tds__SetRelayOutputSettings.
class _tds__SetRelayOutputSettings;

//  Forward declaration of class _tds__SetRelayOutputSettingsResponse.
class _tds__SetRelayOutputSettingsResponse;

//  Forward declaration of class _tds__SetRelayOutputState.
class _tds__SetRelayOutputState;

//  Forward declaration of class _tds__SetRelayOutputStateResponse.
class _tds__SetRelayOutputStateResponse;

//  Forward declaration of class _tds__SendAuxiliaryCommand.
class _tds__SendAuxiliaryCommand;

//  Forward declaration of class _tds__SendAuxiliaryCommandResponse.
class _tds__SendAuxiliaryCommandResponse;

//  Forward declaration of class _tds__GetDot11Capabilities.
class _tds__GetDot11Capabilities;

//  Forward declaration of class _tds__GetDot11CapabilitiesResponse.
class _tds__GetDot11CapabilitiesResponse;

//  Forward declaration of class _tds__GetDot11Status.
class _tds__GetDot11Status;

//  Forward declaration of class _tds__GetDot11StatusResponse.
class _tds__GetDot11StatusResponse;

//  Forward declaration of class _tds__ScanAvailableDot11Networks.
class _tds__ScanAvailableDot11Networks;

//  Forward declaration of class _tds__ScanAvailableDot11NetworksResponse.
class _tds__ScanAvailableDot11NetworksResponse;

//  Forward declaration of class _tds__GetSystemUris.
class _tds__GetSystemUris;

//  Forward declaration of class _tds__GetSystemUrisResponse.
class _tds__GetSystemUrisResponse;

//  Forward declaration of class _tds__StartFirmwareUpgrade.
class _tds__StartFirmwareUpgrade;

//  Forward declaration of class _tds__StartFirmwareUpgradeResponse.
class _tds__StartFirmwareUpgradeResponse;

//  Forward declaration of class _tds__StartSystemRestore.
class _tds__StartSystemRestore;

//  Forward declaration of class _tds__StartSystemRestoreResponse.
class _tds__StartSystemRestoreResponse;

//  Forward declaration of class _tds__GetStorageConfigurations.
class _tds__GetStorageConfigurations;

//  Forward declaration of class _tds__GetStorageConfigurationsResponse.
class _tds__GetStorageConfigurationsResponse;

//  Forward declaration of class _tds__CreateStorageConfiguration.
class _tds__CreateStorageConfiguration;

//  Forward declaration of class _tds__CreateStorageConfigurationResponse.
class _tds__CreateStorageConfigurationResponse;

//  Forward declaration of class _tds__GetStorageConfiguration.
class _tds__GetStorageConfiguration;

//  Forward declaration of class _tds__GetStorageConfigurationResponse.
class _tds__GetStorageConfigurationResponse;

//  Forward declaration of class _tds__SetStorageConfiguration.
class _tds__SetStorageConfiguration;

//  Forward declaration of class _tds__SetStorageConfigurationResponse.
class _tds__SetStorageConfigurationResponse;

//  Forward declaration of class _tds__DeleteStorageConfiguration.
class _tds__DeleteStorageConfiguration;

//  Forward declaration of class _tds__DeleteStorageConfigurationResponse.
class _tds__DeleteStorageConfigurationResponse;

//  Forward declaration of class _tds__GetGeoLocation.
class _tds__GetGeoLocation;

//  Forward declaration of class _tds__GetGeoLocationResponse.
class _tds__GetGeoLocationResponse;

//  Forward declaration of class _tds__SetGeoLocation.
class _tds__SetGeoLocation;

//  Forward declaration of class _tds__SetGeoLocationResponse.
class _tds__SetGeoLocationResponse;

//  Forward declaration of class _tds__DeleteGeoLocation.
class _tds__DeleteGeoLocation;

//  Forward declaration of class _tds__DeleteGeoLocationResponse.
class _tds__DeleteGeoLocationResponse;

//  Forward declaration of class timg__Capabilities.
class timg__Capabilities;

//  Forward declaration of class timg__ImagingPreset.
class timg__ImagingPreset;

//  Forward declaration of class _timg__GetServiceCapabilities.
class _timg__GetServiceCapabilities;

//  Forward declaration of class _timg__GetServiceCapabilitiesResponse.
class _timg__GetServiceCapabilitiesResponse;

//  Forward declaration of class _timg__GetImagingSettings.
class _timg__GetImagingSettings;

//  Forward declaration of class _timg__GetImagingSettingsResponse.
class _timg__GetImagingSettingsResponse;

//  Forward declaration of class _timg__SetImagingSettings.
class _timg__SetImagingSettings;

//  Forward declaration of class _timg__SetImagingSettingsResponse.
class _timg__SetImagingSettingsResponse;

//  Forward declaration of class _timg__GetOptions.
class _timg__GetOptions;

//  Forward declaration of class _timg__GetOptionsResponse.
class _timg__GetOptionsResponse;

//  Forward declaration of class _timg__Move.
class _timg__Move;

//  Forward declaration of class _timg__MoveResponse.
class _timg__MoveResponse;

//  Forward declaration of class _timg__GetMoveOptions.
class _timg__GetMoveOptions;

//  Forward declaration of class _timg__GetMoveOptionsResponse.
class _timg__GetMoveOptionsResponse;

//  Forward declaration of class _timg__Stop.
class _timg__Stop;

//  Forward declaration of class _timg__StopResponse.
class _timg__StopResponse;

//  Forward declaration of class _timg__GetStatus.
class _timg__GetStatus;

//  Forward declaration of class _timg__GetStatusResponse.
class _timg__GetStatusResponse;

//  Forward declaration of class _timg__GetPresets.
class _timg__GetPresets;

//  Forward declaration of class _timg__GetPresetsResponse.
class _timg__GetPresetsResponse;

//  Forward declaration of class _timg__GetCurrentPreset.
class _timg__GetCurrentPreset;

//  Forward declaration of class _timg__GetCurrentPresetResponse.
class _timg__GetCurrentPresetResponse;

//  Forward declaration of class _timg__SetCurrentPreset.
class _timg__SetCurrentPreset;

//  Forward declaration of class _timg__SetCurrentPresetResponse.
class _timg__SetCurrentPresetResponse;

//  Forward declaration of class ns1__DataEntity.
class ns1__DataEntity;

//  Forward declaration of class ns1__Attribute.
class ns1__Attribute;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
typedef std::string tt__IntAttrList;

/// "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
typedef std::string tt__FloatAttrList;

/// "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
typedef std::string tt__StringAttrList;

/// "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of xs:string.
typedef std::string tt__StringList;

/// "http://www.onvif.org/ver10/schema":ReferenceTokenList is a simpleType containing a whitespace separated list of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef std::string tt__ReferenceTokenList;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef std::string wsnt__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes is a simpleType containing a whitespace separated list of xs:float.
typedef std::string tmd__DelayTimes;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of xs:string.
/// @brief Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
typedef std::string trt__EncodingTypes;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of xs:int.
typedef std::string tds__EAPMethodTypes;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/pacs":StringList is a simpleType containing a whitespace separated list of xs:string.
typedef std::string ns1__StringList;

/// "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of xs:string.
/// @brief User readable name. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef std::string tt__Name:64;

/// "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RotateMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RotateMode
{
/// @brief Enable the Rotate feature. Degree of rotation is specified Degree parameter.
	tt__RotateMode__OFF,	///< xs:string value="OFF"
/// @brief Disable the Rotate feature.
	tt__RotateMode__ON,	///< xs:string value="ON"
/// @brief Rotate feature is automatically activated by the device.
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":SceneOrientationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__SceneOrientationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SceneOrientationMode
{
	tt__SceneOrientationMode__MANUAL,	///< xs:string value="MANUAL"
	tt__SceneOrientationMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":SceneOrientationOption is a simpleType restriction of xs:string.
/// @brief Defines the acceptable values for the Orientation element of the SceneOrientation type
/// Note: enum values are prefixed with 'tt__SceneOrientationOption' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SceneOrientationOption
{
	tt__SceneOrientationOption__Below,	///< xs:string value="Below"
	tt__SceneOrientationOption__Horizon,	///< xs:string value="Horizon"
	tt__SceneOrientationOption__Above,	///< xs:string value="Above"
};

/// "http://www.onvif.org/ver10/schema":ViewModes is a simpleType restriction of xs:string.
/// @brief Source view modes supported by device.
/// Note: enum values are prefixed with 'tt__ViewModes' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ViewModes
{
/// @brief Undewarped viewmode from device supporting fisheye lens.
	tt__ViewModes__tt_x003aFisheye,	///< xs:string value="tt:Fisheye"
/// @brief 360 degree panoramic view.
	tt__ViewModes__tt_x003a360Panorama,	///< xs:string value="tt:360Panorama"
/// @brief 180 degree panoramic view.
	tt__ViewModes__tt_x003a180Panorama,	///< xs:string value="tt:180Panorama"
/// @brief View mode combining four streams in single Quad, eg., applicable for devices supporting four heads.
	tt__ViewModes__tt_x003aQuad,	///< xs:string value="tt:Quad"
/// @brief Unaltered view from the sensor.
	tt__ViewModes__tt_x003aOriginal,	///< xs:string value="tt:Original"
/// @brief Viewmode combining the left side sensors, applicable for devices supporting multiple sensors.
	tt__ViewModes__tt_x003aLeftHalf,	///< xs:string value="tt:LeftHalf"
/// @brief Viewmode combining the right side sensors, applicable for devices supporting multiple sensors.
	tt__ViewModes__tt_x003aRightHalf,	///< xs:string value="tt:RightHalf"
/// @brief Dewarped view mode for device supporting fisheye lens.
	tt__ViewModes__tt_x003aDewarp,	///< xs:string value="tt:Dewarp"
};

/// "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__VideoEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Mpeg4Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__H264Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is a simpleType restriction of xs:string.
/// @brief Video Media Subtypes as referenced by IANA (without the leading "video/" Video Media Type). See also <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// Note: enum values are prefixed with 'tt__VideoEncodingMimeNames' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncodingMimeNames
{
	tt__VideoEncodingMimeNames__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncodingMimeNames__MPV4_ES,	///< xs:string value="MPV4-ES"
	tt__VideoEncodingMimeNames__H264,	///< xs:string value="H264"
	tt__VideoEncodingMimeNames__H265,	///< xs:string value="H265"
};

/// "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__VideoEncodingProfiles' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__VideoEncodingProfiles
{
	tt__VideoEncodingProfiles__Simple,	///< xs:string value="Simple"
	tt__VideoEncodingProfiles__AdvancedSimple,	///< xs:string value="AdvancedSimple"
	tt__VideoEncodingProfiles__Baseline,	///< xs:string value="Baseline"
	tt__VideoEncodingProfiles__Main,	///< xs:string value="Main"
	tt__VideoEncodingProfiles__Main10,	///< xs:string value="Main10"
	tt__VideoEncodingProfiles__Extended,	///< xs:string value="Extended"
	tt__VideoEncodingProfiles__High,	///< xs:string value="High"
};

/// "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__AudioEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is a simpleType restriction of xs:string.
/// @brief Audio Media Subtypes as referenced by IANA (without the leading "audio/" Audio Media Type). See also <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// Note: enum values are prefixed with 'tt__AudioEncodingMimeNames' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AudioEncodingMimeNames
{
	tt__AudioEncodingMimeNames__PCMU,	///< xs:string value="PCMU"
	tt__AudioEncodingMimeNames__G726,	///< xs:string value="G726"
	tt__AudioEncodingMimeNames__MP4A_LATM,	///< xs:string value="MP4A-LATM"
	tt__AudioEncodingMimeNames__mpeg4_generic,	///< xs:string value="mpeg4-generic"
};

/// "http://www.onvif.org/ver10/schema":MetadataCompressionType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__MetadataCompressionType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MetadataCompressionType
{
	tt__MetadataCompressionType__None,	///< xs:string value="None"
	tt__MetadataCompressionType__GZIP,	///< xs:string value="GZIP"
	tt__MetadataCompressionType__EXI,	///< xs:string value="EXI"
};

/// "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__StreamType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__TransportProtocol' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
/// @brief This value is deprecated.
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ScopeDefinition' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__DiscoveryMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of xs:integer.
/// Value range is [0..31]
typedef xsd__integer tt__NetworkInterfaceConfigPriority;

/// "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Duplex' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of xs:int.
/// @brief For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
typedef int tt__IANA_IfTypes;

/// "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IPv6DHCPConfiguration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__NetworkProtocolType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__NetworkHostType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of xs:token.
typedef xsd__token tt__IPv4Address;

/// "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of xs:token.
typedef xsd__token tt__IPv6Address;

/// "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of xs:token.
typedef xsd__token tt__HwAddress;

/// "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IPType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of xs:token.
typedef xsd__token tt__DNSName;

/// "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of xs:token.
typedef xsd__token tt__Domain;

/// "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IPAddressFilterType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__DynamicDNSType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of xs:hexBinary.
/// Length of this string is within 1..32 characters
typedef xsd__hexBinary tt__Dot11SSIDType 1:32;

/// "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11StationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11SecurityMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11Cipher' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of xs:hexBinary.
/// Length of this string is exactly 32 characters
typedef xsd__hexBinary tt__Dot11PSK;

/// "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of xs:string.
/// Content pattern is "[ -~]{8,63}" (note: not automatically enforced)
typedef std::string tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11SignalStrength' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Dot11AuthAndMangementSuite' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__CapabilityCategory' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available system log modes.
/// Note: enum values are prefixed with 'tt__SystemLogType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SystemLogType
{
/// @brief Indicates that a system log is requested.
	tt__SystemLogType__System,	///< xs:string value="System"
/// @brief Indicates that a access log is requested.
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available factory default modes.
/// Note: enum values are prefixed with 'tt__FactoryDefaultType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__FactoryDefaultType
{
/// @brief Indicates that a hard factory default is requested.
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// @brief Indicates that a soft factory default is requested.
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__SetDateTimeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SetDateTimeType
{
/// @brief Indicates that the date and time are set manually.
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// @brief Indicates that the date and time are set through NTP
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__UserLevel' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RelayLogicalState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RelayIdleState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RelayMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// "http://www.onvif.org/ver10/schema":DigitalIdleState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__DigitalIdleState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DigitalIdleState
{
	tt__DigitalIdleState__closed,	///< xs:string value="closed"
	tt__DigitalIdleState__open,	///< xs:string value="open"
};

/// "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__EFlipMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ReverseMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of xs:string.
/// Length of this string is within 0..128 characters
typedef std::string tt__AuxiliaryData:128;

/// "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PTZPresetTourState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PTZPresetTourDirection' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PTZPresetTourOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__AutoFocusMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// "http://www.onvif.org/ver10/schema":AFModes is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__AFModes' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__AFModes
{
/// @brief Focus of a moving camera is updated only once after stopping a pan, tilt or zoom movement.
	tt__AFModes__OnceAfterMove,	///< xs:string value="OnceAfterMove"
};

/// "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__WideDynamicMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available backlight compenstation modes.
/// Note: enum values are prefixed with 'tt__BacklightCompensationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__BacklightCompensationMode
{
/// @brief Backlight compensation is disabled.
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// @brief Backlight compensation is enabled.
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ExposurePriority' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ExposureMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Enabled' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__WhiteBalanceMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IrCutFilterMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ImageStabilizationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__IrCutFilterAutoBoundaryType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__IrCutFilterAutoBoundaryType
{
	tt__IrCutFilterAutoBoundaryType__Common,	///< xs:string value="Common"
	tt__IrCutFilterAutoBoundaryType__ToOn,	///< xs:string value="ToOn"
	tt__IrCutFilterAutoBoundaryType__ToOff,	///< xs:string value="ToOff"
	tt__IrCutFilterAutoBoundaryType__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":ToneCompensationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ToneCompensationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ToneCompensationMode
{
	tt__ToneCompensationMode__OFF,	///< xs:string value="OFF"
	tt__ToneCompensationMode__ON,	///< xs:string value="ON"
	tt__ToneCompensationMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":DefoggingMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__DefoggingMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__DefoggingMode
{
	tt__DefoggingMode__OFF,	///< xs:string value="OFF"
	tt__DefoggingMode__ON,	///< xs:string value="ON"
	tt__DefoggingMode__AUTO,	///< xs:string value="AUTO"
};

/// "http://www.onvif.org/ver10/schema":ImageSendingType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ImageSendingType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ImageSendingType
{
	tt__ImageSendingType__Embedded,	///< xs:string value="Embedded"
	tt__ImageSendingType__LocalStorage,	///< xs:string value="LocalStorage"
	tt__ImageSendingType__RemoteStorage,	///< xs:string value="RemoteStorage"
};

/// "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__PropertyOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Direction' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of xs:string.
/// @brief Specifies a receiver connection mode.
/// Note: enum values are prefixed with 'tt__ReceiverMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverMode
{
/// @brief The receiver connects on demand, as required by consumers of the media streams.
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// @brief The receiver attempts to maintain a persistent connection to the configured endpoint.
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// @brief The receiver does not attempt to connect.
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// @brief This case should never happen.
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of xs:string.
/// @brief Specifies the current connection state of the receiver.
/// Note: enum values are prefixed with 'tt__ReceiverState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ReceiverState
{
/// @brief The receiver is not connected.
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// @brief The receiver is attempting to connect.
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// @brief The receiver is connected.
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// @brief This case should never happen.
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of xs:string.
typedef std::string tt__Description;

/// "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of xs:string.
typedef std::string tt__XPathExpression;

/// "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__SearchState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__SearchState
{
/// @brief The search is queued and not yet started.
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// @brief The search is underway and not yet completed.
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// @brief The search has been completed and no new results will be found.
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// @brief The state of the search is unknown. (This is not a valid response from GetSearchState.)
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__RecordingStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// @brief This case should never happen.
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__TrackType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// @brief Placeholder for future extension.
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of xs:string.
typedef std::string tt__RecordingJobMode;

/// "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of xs:string.
typedef std::string tt__RecordingJobState;

/// "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__ModeOfOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// @brief This case should never happen.
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// "http://www.onvif.org/ver10/schema":AudioClassType is a simpleType restriction of xs:string.
/// @brief AudioClassType acceptable values are; gun_shot, scream, glass_breaking, tire_screech
typedef std::string tt__AudioClassType;

/// "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__OSDType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};

/// "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of xs:string.
/// @brief Unique identifier for a physical or logical resource. Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class. Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique. The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// Length of this string is within 0..64 characters
typedef std::string tt__ReferenceToken:64;

/// "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__MoveStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// "http://www.onvif.org/ver10/schema":Entity is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tt__Entity' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tt__Entity
{
	tt__Entity__Device,	///< xs:string value="Device"
	tt__Entity__VideoSource,	///< xs:string value="VideoSource"
	tt__Entity__AudioSource,	///< xs:string value="AudioSource"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of xs:token.
/// @brief TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*" (note: not automatically enforced)
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of xs:token.
/// @brief The pattern allows strings matching the following EBNF: ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*" (note: not automatically enforced)
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of xs:QName.
/// @brief The pattern allows strings matching the following EBNF: RootTopic ::= QName
typedef xsd__QName wstop__SimpleTopicExpression;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType is a simpleType restriction of xs:string.
/// @brief The type of serial port.Generic can be signaled as a vendor specific serial port type.
/// Note: enum values are prefixed with 'tmd__SerialPortType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tmd__SerialPortType
{
	tmd__SerialPortType__RS232,	///< xs:string value="RS232"
	tmd__SerialPortType__RS422HalfDuplex,	///< xs:string value="RS422HalfDuplex"
	tmd__SerialPortType__RS422FullDuplex,	///< xs:string value="RS422FullDuplex"
	tmd__SerialPortType__RS485HalfDuplex,	///< xs:string value="RS485HalfDuplex"
	tmd__SerialPortType__RS485FullDuplex,	///< xs:string value="RS485FullDuplex"
	tmd__SerialPortType__Generic,	///< xs:string value="Generic"
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit is a simpleType restriction of xs:string.
/// @brief The parity for the data error detection.
/// Note: enum values are prefixed with 'tmd__ParityBit' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tmd__ParityBit
{
	tmd__ParityBit__None,	///< xs:string value="None"
	tmd__ParityBit__Even,	///< xs:string value="Even"
	tmd__ParityBit__Odd,	///< xs:string value="Odd"
	tmd__ParityBit__Mark,	///< xs:string value="Mark"
	tmd__ParityBit__Space,	///< xs:string value="Space"
	tmd__ParityBit__Extended,	///< xs:string value="Extended"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/device/wsdl":StorageType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'tds__StorageType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum tds__StorageType
{
/// @brief NFS protocol
	tds__StorageType__NFS,	///< xs:string value="NFS"
/// @brief CIFS protocol
	tds__StorageType__CIFS,	///< xs:string value="CIFS"
/// @brief CDMI protocol
	tds__StorageType__CDMI,	///< xs:string value="CDMI"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver20/imaging/wsdl":ImagingPresetType is a simpleType restriction of xs:string.
/// @brief Describes standard Imaging Preset types, used to facilitate Multi-language support and client display. "Custom" Type shall be used when Imaging Preset Name does not match any of the types included in the standard classification.
/// Note: enum values are prefixed with 'timg__ImagingPresetType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum timg__ImagingPresetType
{
	timg__ImagingPresetType__Custom,	///< xs:string value="Custom"
	timg__ImagingPresetType__ClearWeather,	///< xs:string value="ClearWeather"
	timg__ImagingPresetType__Cloudy,	///< xs:string value="Cloudy"
	timg__ImagingPresetType__Fog,	///< xs:string value="Fog"
	timg__ImagingPresetType__Rain,	///< xs:string value="Rain"
	timg__ImagingPresetType__Snowing,	///< xs:string value="Snowing"
	timg__ImagingPresetType__Snow,	///< xs:string value="Snow"
	timg__ImagingPresetType__WDR,	///< xs:string value="WDR"
	timg__ImagingPresetType__Shade,	///< xs:string value="Shade"
	timg__ImagingPresetType__Night,	///< xs:string value="Night"
	timg__ImagingPresetType__Indoor,	///< xs:string value="Indoor"
	timg__ImagingPresetType__Fluorescent,	///< xs:string value="Fluorescent"
	timg__ImagingPresetType__Incandescent,	///< xs:string value="Incandescent"
	timg__ImagingPresetType__Sodium_x0028Natrium_x0029,	///< xs:string value="Sodium(Natrium)"
	timg__ImagingPresetType__Sunrise_x0028Horizon_x0029,	///< xs:string value="Sunrise(Horizon)"
	timg__ImagingPresetType__Sunset_x0028Rear_x0029,	///< xs:string value="Sunset(Rear)"
	timg__ImagingPresetType__ExtremeHot,	///< xs:string value="ExtremeHot"
	timg__ImagingPresetType__ExtremeCold,	///< xs:string value="ExtremeCold"
	timg__ImagingPresetType__Underwater,	///< xs:string value="Underwater"
	timg__ImagingPresetType__CloseUp,	///< xs:string value="CloseUp"
	timg__ImagingPresetType__Motion,	///< xs:string value="Motion"
	timg__ImagingPresetType__FlickerFree50,	///< xs:string value="FlickerFree50"
	timg__ImagingPresetType__FlickerFree60,	///< xs:string value="FlickerFree60"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/pacs":ReferenceToken is a simpleType restriction of xs:string.
/// @brief Type used to reference logical and physical entities. Token may be extended by intermediate terminal with adding prefix to make it global unique. The length should be within 36 characters for generating as a local token. See "Remote Token" section in Resource Query specification.
/// Length of this string is within 0..64 characters
typedef std::string ns1__ReferenceToken 0:64;

/// "http://www.onvif.org/ver10/pacs":Name is a simpleType restriction of xs:string.
/// @brief Type used for names of logical and physical entities.
/// Length of this string is within 0..64 characters
typedef std::string ns1__Name 0:64;

/// "http://www.onvif.org/ver10/pacs":Description is a simpleType restriction of xs:string.
/// @brief Description is optional and the maximum length is device specific. If the length is more than maximum length, it is silently chopped to the maximum length supported by the device/service (which may be 0).
/// Length of this string is within 0..1024 characters
typedef std::string ns1__Description 0:1024;

/// "http://www.onvif.org/ver10/pacs":PositiveInteger is a simpleType restriction of xs:unsignedInt.
/// @brief Type used to represent the numbers from 1 ,2 , 3,...
/// Value range is [1..]
typedef unsigned int ns1__PositiveInteger 1;

/// "http://www.onvif.org/ver10/pacs":RecognitionType is a simpleType restriction of xs:string.
/// @brief Recognition/identification types supported by ONVIF.
/// Note: enum values are prefixed with 'ns1__RecognitionType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__RecognitionType
{
/// @brief A credential number is used for recognition/identification.
	ns1__RecognitionType__pt_x003aCard,	///< xs:string value="pt:Card"
/// @brief A PIN code is used for recognition/identification.
	ns1__RecognitionType__pt_x003aPIN,	///< xs:string value="pt:PIN"
/// @brief A fingerprint is used for recognition/identification.
	ns1__RecognitionType__pt_x003aFingerprint,	///< xs:string value="pt:Fingerprint"
/// @brief A face is used for recognition/identification.
	ns1__RecognitionType__pt_x003aFace,	///< xs:string value="pt:Face"
/// @brief An iris is used for recognition/identification.
	ns1__RecognitionType__pt_x003aIris,	///< xs:string value="pt:Iris"
/// @brief A vein is used for recognition/identification.
	ns1__RecognitionType__pt_x003aVein,	///< xs:string value="pt:Vein"
/// @brief A palm is used for recognition/identification.
	ns1__RecognitionType__pt_x003aPalm,	///< xs:string value="pt:Palm"
/// @brief A retina is used for recognition/identification.
	ns1__RecognitionType__pt_x003aRetina,	///< xs:string value="pt:Retina"
/// @brief A license plate is used for recognition/identification.
	ns1__RecognitionType__pt_x003aLicensePlate,	///< xs:string value="pt:LicensePlate"
/// @brief A request-to-exit button is used for anonymous recognition (but not for identification).
	ns1__RecognitionType__pt_x003aREX,	///< xs:string value="pt:REX"
};

/// "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__ReceiverReference;

/// "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__RecordingReference;

/// "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__TrackReference;

/// "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__JobToken;

/// "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef tt__ReferenceToken tt__RecordingJobReference;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
/// class tptz__Capabilities operations:
/// - soap_new_tptz__Capabilities(soap*) allocate
/// - soap_new_tptz__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tptz__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tptz__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tptz__Capabilities(soap*, tptz__Capabilities*) deserialize from a stream
/// - int soap_write_tptz__Capabilities(soap, tptz__Capabilities*) serialize to a stream
class tptz__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicates whether or not EFlip is supported.
/// Attribute EFlip of type xs:boolean.
   @bool*                                EFlip                          0;	///< Optional attribute.
/// @brief Indicates whether or not reversing of PT control direction is supported.
/// Attribute Reverse of type xs:boolean.
   @bool*                                Reverse                        0;	///< Optional attribute.
/// @brief Indicates support for the GetCompatibleConfigurations command.
/// Attribute GetCompatibleConfigurations of type xs:boolean.
   @bool*                                GetCompatibleConfigurations    0;	///< Optional attribute.
/// @brief Indicates that the PTZStatus includes MoveStatus information.
/// Attribute MoveStatus of type xs:boolean.
   @bool*                                MoveStatus                     0;	///< Optional attribute.
/// @brief Indicates that the PTZStatus includes Position information.
/// Attribute StatusPosition of type xs:boolean.
   @bool*                                StatusPosition                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
/// class _tptz__GetServiceCapabilities operations:
/// - soap_new__tptz__GetServiceCapabilities(soap*) allocate
/// - soap_new__tptz__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tptz__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilities(soap, _tptz__GetServiceCapabilities*) serialize to a stream
class _tptz__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _tptz__GetServiceCapabilitiesResponse operations:
/// - soap_new__tptz__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tptz__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilitiesResponse(soap, _tptz__GetServiceCapabilitiesResponse*) serialize to a stream
class _tptz__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the PTZ service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    tptz__Capabilities*                  Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
/// class _tptz__GetNodes operations:
/// - soap_new__tptz__GetNodes(soap*) allocate
/// - soap_new__tptz__GetNodes(soap*, int num) allocate array
/// - soap_new_req__tptz__GetNodes(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetNodes(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetNodes(soap*, _tptz__GetNodes*) deserialize from a stream
/// - int soap_write__tptz__GetNodes(soap, _tptz__GetNodes*) serialize to a stream
class _tptz__GetNodes
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
/// class _tptz__GetNodesResponse operations:
/// - soap_new__tptz__GetNodesResponse(soap*) allocate
/// - soap_new__tptz__GetNodesResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetNodesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetNodesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodesResponse(soap, _tptz__GetNodesResponse*) serialize to a stream
class _tptz__GetNodesResponse
{ public:
/// @brief A list of the existing PTZ Nodes on the device.
/// Vector of tt__PTZNode* with length 0..unbounded
    std::vector<tt__PTZNode*           > PTZNode                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
/// class _tptz__GetNode operations:
/// - soap_new__tptz__GetNode(soap*) allocate
/// - soap_new__tptz__GetNode(soap*, int num) allocate array
/// - soap_new_req__tptz__GetNode(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetNode(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetNode(soap*, _tptz__GetNode*) deserialize from a stream
/// - int soap_write__tptz__GetNode(soap, _tptz__GetNode*) serialize to a stream
class _tptz__GetNode
{ public:
/// @brief Token of the requested PTZNode.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
/// class _tptz__GetNodeResponse operations:
/// - soap_new__tptz__GetNodeResponse(soap*) allocate
/// - soap_new__tptz__GetNodeResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetNodeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetNodeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodeResponse(soap, _tptz__GetNodeResponse*) serialize to a stream
class _tptz__GetNodeResponse
{ public:
/// @brief A requested PTZNode.
/// Element PTZNode of type "http://www.onvif.org/ver10/schema":PTZNode.
    tt__PTZNode*                         PTZNode                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
/// class _tptz__GetConfigurations operations:
/// - soap_new__tptz__GetConfigurations(soap*) allocate
/// - soap_new__tptz__GetConfigurations(soap*, int num) allocate array
/// - soap_new_req__tptz__GetConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurations(soap, _tptz__GetConfigurations*) serialize to a stream
class _tptz__GetConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
/// class _tptz__GetConfigurationsResponse operations:
/// - soap_new__tptz__GetConfigurationsResponse(soap*) allocate
/// - soap_new__tptz__GetConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationsResponse(soap, _tptz__GetConfigurationsResponse*) serialize to a stream
class _tptz__GetConfigurationsResponse
{ public:
/// @brief A list of all existing PTZConfigurations on the device.
/// Vector of tt__PTZConfiguration* with length 0..unbounded
    std::vector<tt__PTZConfiguration*  > PTZConfiguration               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
/// class _tptz__GetConfiguration operations:
/// - soap_new__tptz__GetConfiguration(soap*) allocate
/// - soap_new__tptz__GetConfiguration(soap*, int num) allocate array
/// - soap_new_req__tptz__GetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__GetConfiguration(soap, _tptz__GetConfiguration*) serialize to a stream
class _tptz__GetConfiguration
{ public:
/// @brief Token of the requested PTZConfiguration.
/// Element PTZConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
/// class _tptz__GetConfigurationResponse operations:
/// - soap_new__tptz__GetConfigurationResponse(soap*) allocate
/// - soap_new__tptz__GetConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationResponse(soap, _tptz__GetConfigurationResponse*) serialize to a stream
class _tptz__GetConfigurationResponse
{ public:
/// @brief A requested PTZConfiguration.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration

/// "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
/// class _tptz__SetConfiguration operations:
/// - soap_new__tptz__SetConfiguration(soap*) allocate
/// - soap_new__tptz__SetConfiguration(soap*, int num) allocate array
/// - soap_new_req__tptz__SetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__SetConfiguration(soap, _tptz__SetConfiguration*) serialize to a stream
class _tptz__SetConfiguration
{ public:
/// @brief
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// @brief Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
/// class _tptz__SetConfigurationResponse operations:
/// - soap_new__tptz__SetConfigurationResponse(soap*) allocate
/// - soap_new__tptz__SetConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__SetConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SetConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__SetConfigurationResponse(soap, _tptz__SetConfigurationResponse*) serialize to a stream
class _tptz__SetConfigurationResponse
{ public:
/// SEQUENCE <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __tptz__SetConfigurationResponse_sequence
    {
    }>                                   __SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
/// class _tptz__GetConfigurationOptions operations:
/// - soap_new__tptz__GetConfigurationOptions(soap*) allocate
/// - soap_new__tptz__GetConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tptz__GetConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptions(soap, _tptz__GetConfigurationOptions*) serialize to a stream
class _tptz__GetConfigurationOptions
{ public:
/// @brief Token of an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
/// class _tptz__GetConfigurationOptionsResponse operations:
/// - soap_new__tptz__GetConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tptz__GetConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptionsResponse(soap, _tptz__GetConfigurationOptionsResponse*) serialize to a stream
class _tptz__GetConfigurationOptionsResponse
{ public:
/// @brief The requested PTZ configuration options.
/// Element PTZConfigurationOptions of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    tt__PTZConfigurationOptions*         PTZConfigurationOptions        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand

/// "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
/// class _tptz__SendAuxiliaryCommand operations:
/// - soap_new__tptz__SendAuxiliaryCommand(soap*) allocate
/// - soap_new__tptz__SendAuxiliaryCommand(soap*, int num) allocate array
/// - soap_new_req__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommand(soap, _tptz__SendAuxiliaryCommand*) serialize to a stream
class _tptz__SendAuxiliaryCommand
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief The Auxiliary request data.
/// Element AuxiliaryData of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
/// class _tptz__SendAuxiliaryCommandResponse operations:
/// - soap_new__tptz__SendAuxiliaryCommandResponse(soap*) allocate
/// - soap_new__tptz__SendAuxiliaryCommandResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommandResponse(soap, _tptz__SendAuxiliaryCommandResponse*) serialize to a stream
class _tptz__SendAuxiliaryCommandResponse
{ public:
/// @brief The response contains the auxiliary response.
/// Element AuxiliaryResponse of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
/// class _tptz__GetPresets operations:
/// - soap_new__tptz__GetPresets(soap*) allocate
/// - soap_new__tptz__GetPresets(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresets(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresets(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresets(soap*, _tptz__GetPresets*) deserialize from a stream
/// - int soap_write__tptz__GetPresets(soap, _tptz__GetPresets*) serialize to a stream
class _tptz__GetPresets
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
/// class _tptz__GetPresetsResponse operations:
/// - soap_new__tptz__GetPresetsResponse(soap*) allocate
/// - soap_new__tptz__GetPresetsResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetsResponse(soap, _tptz__GetPresetsResponse*) serialize to a stream
class _tptz__GetPresetsResponse
{ public:
/// @brief A list of presets which are available for the requested MediaProfile.
/// Vector of tt__PTZPreset* with length 0..unbounded
    std::vector<tt__PTZPreset*         > Preset                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset

/// "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
/// class _tptz__SetPreset operations:
/// - soap_new__tptz__SetPreset(soap*) allocate
/// - soap_new__tptz__SetPreset(soap*, int num) allocate array
/// - soap_new_req__tptz__SetPreset(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SetPreset(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SetPreset(soap*, _tptz__SetPreset*) deserialize from a stream
/// - int soap_write__tptz__SetPreset(soap, _tptz__SetPreset*) serialize to a stream
class _tptz__SetPreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested preset name.
/// Element PresetName of type xs:string.
    std::string*                         PresetName                     0;	///< Optional element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
/// class _tptz__SetPresetResponse operations:
/// - soap_new__tptz__SetPresetResponse(soap*) allocate
/// - soap_new__tptz__SetPresetResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__SetPresetResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SetPresetResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__SetPresetResponse(soap, _tptz__SetPresetResponse*) serialize to a stream
class _tptz__SetPresetResponse
{ public:
/// @brief A token to the Preset which has been set.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
/// class _tptz__RemovePreset operations:
/// - soap_new__tptz__RemovePreset(soap*) allocate
/// - soap_new__tptz__RemovePreset(soap*, int num) allocate array
/// - soap_new_req__tptz__RemovePreset(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__RemovePreset(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__RemovePreset(soap*, _tptz__RemovePreset*) deserialize from a stream
/// - int soap_write__tptz__RemovePreset(soap, _tptz__RemovePreset*) serialize to a stream
class _tptz__RemovePreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
/// class _tptz__RemovePresetResponse operations:
/// - soap_new__tptz__RemovePresetResponse(soap*) allocate
/// - soap_new__tptz__RemovePresetResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__RemovePresetResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__RemovePresetResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetResponse(soap, _tptz__RemovePresetResponse*) serialize to a stream
class _tptz__RemovePresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
/// class _tptz__GotoPreset operations:
/// - soap_new__tptz__GotoPreset(soap*) allocate
/// - soap_new__tptz__GotoPreset(soap*, int num) allocate array
/// - soap_new_req__tptz__GotoPreset(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GotoPreset(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GotoPreset(soap*, _tptz__GotoPreset*) deserialize from a stream
/// - int soap_write__tptz__GotoPreset(soap, _tptz__GotoPreset*) serialize to a stream
class _tptz__GotoPreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// @brief A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
/// class _tptz__GotoPresetResponse operations:
/// - soap_new__tptz__GotoPresetResponse(soap*) allocate
/// - soap_new__tptz__GotoPresetResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GotoPresetResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GotoPresetResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GotoPresetResponse(soap*, _tptz__GotoPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoPresetResponse(soap, _tptz__GotoPresetResponse*) serialize to a stream
class _tptz__GotoPresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus

/// "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
/// class _tptz__GetStatus operations:
/// - soap_new__tptz__GetStatus(soap*) allocate
/// - soap_new__tptz__GetStatus(soap*, int num) allocate array
/// - soap_new_req__tptz__GetStatus(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetStatus(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetStatus(soap*, _tptz__GetStatus*) deserialize from a stream
/// - int soap_write__tptz__GetStatus(soap, _tptz__GetStatus*) serialize to a stream
class _tptz__GetStatus
{ public:
/// @brief A reference to the MediaProfile where the PTZStatus should be requested.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
/// class _tptz__GetStatusResponse operations:
/// - soap_new__tptz__GetStatusResponse(soap*) allocate
/// - soap_new__tptz__GetStatusResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) deserialize from a stream
/// - int soap_write__tptz__GetStatusResponse(soap, _tptz__GetStatusResponse*) serialize to a stream
class _tptz__GetStatusResponse
{ public:
/// @brief The PTZStatus for the requested MediaProfile.
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
/// class _tptz__GotoHomePosition operations:
/// - soap_new__tptz__GotoHomePosition(soap*) allocate
/// - soap_new__tptz__GotoHomePosition(soap*, int num) allocate array
/// - soap_new_req__tptz__GotoHomePosition(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GotoHomePosition(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePosition(soap, _tptz__GotoHomePosition*) serialize to a stream
class _tptz__GotoHomePosition
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
/// class _tptz__GotoHomePositionResponse operations:
/// - soap_new__tptz__GotoHomePositionResponse(soap*) allocate
/// - soap_new__tptz__GotoHomePositionResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GotoHomePositionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GotoHomePositionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePositionResponse(soap, _tptz__GotoHomePositionResponse*) serialize to a stream
class _tptz__GotoHomePositionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition

/// "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
/// class _tptz__SetHomePosition operations:
/// - soap_new__tptz__SetHomePosition(soap*) allocate
/// - soap_new__tptz__SetHomePosition(soap*, int num) allocate array
/// - soap_new_req__tptz__SetHomePosition(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SetHomePosition(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) deserialize from a stream
/// - int soap_write__tptz__SetHomePosition(soap, _tptz__SetHomePosition*) serialize to a stream
class _tptz__SetHomePosition
{ public:
/// @brief A reference to the MediaProfile where the home position should be set.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
/// class _tptz__SetHomePositionResponse operations:
/// - soap_new__tptz__SetHomePositionResponse(soap*) allocate
/// - soap_new__tptz__SetHomePositionResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__SetHomePositionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__SetHomePositionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__SetHomePositionResponse(soap, _tptz__SetHomePositionResponse*) serialize to a stream
class _tptz__SetHomePositionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove

/// "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
/// class _tptz__ContinuousMove operations:
/// - soap_new__tptz__ContinuousMove(soap*) allocate
/// - soap_new__tptz__ContinuousMove(soap*, int num) allocate array
/// - soap_new_req__tptz__ContinuousMove(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__ContinuousMove(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMove(soap, _tptz__ContinuousMove*) serialize to a stream
class _tptz__ContinuousMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A Velocity vector specifying the velocity of pan, tilt and zoom.
/// Element Velocity of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Velocity                       1;	///< Required element.
/// @brief An optional Timeout parameter.
/// Element Timeout of type xs:duration.
    xsd__duration*                       Timeout                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
/// class _tptz__ContinuousMoveResponse operations:
/// - soap_new__tptz__ContinuousMoveResponse(soap*) allocate
/// - soap_new__tptz__ContinuousMoveResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__ContinuousMoveResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__ContinuousMoveResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMoveResponse(soap, _tptz__ContinuousMoveResponse*) serialize to a stream
class _tptz__ContinuousMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove

/// "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
/// class _tptz__RelativeMove operations:
/// - soap_new__tptz__RelativeMove(soap*) allocate
/// - soap_new__tptz__RelativeMove(soap*, int num) allocate array
/// - soap_new_req__tptz__RelativeMove(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__RelativeMove(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__RelativeMove(soap*, _tptz__RelativeMove*) deserialize from a stream
/// - int soap_write__tptz__RelativeMove(soap, _tptz__RelativeMove*) serialize to a stream
class _tptz__RelativeMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A positional Translation relative to the current position
/// Element Translation of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Translation                    1;	///< Required element.
/// @brief An optional Speed parameter.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
/// class _tptz__RelativeMoveResponse operations:
/// - soap_new__tptz__RelativeMoveResponse(soap*) allocate
/// - soap_new__tptz__RelativeMoveResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__RelativeMoveResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__RelativeMoveResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__RelativeMoveResponse(soap, _tptz__RelativeMoveResponse*) serialize to a stream
class _tptz__RelativeMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove

/// "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
/// class _tptz__AbsoluteMove operations:
/// - soap_new__tptz__AbsoluteMove(soap*) allocate
/// - soap_new__tptz__AbsoluteMove(soap*, int num) allocate array
/// - soap_new_req__tptz__AbsoluteMove(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__AbsoluteMove(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMove(soap, _tptz__AbsoluteMove*) serialize to a stream
class _tptz__AbsoluteMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief A Position vector specifying the absolute target position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// @brief An optional Speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
/// class _tptz__AbsoluteMoveResponse operations:
/// - soap_new__tptz__AbsoluteMoveResponse(soap*) allocate
/// - soap_new__tptz__AbsoluteMoveResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMoveResponse(soap, _tptz__AbsoluteMoveResponse*) serialize to a stream
class _tptz__AbsoluteMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMove

/// "http://www.onvif.org/ver20/ptz/wsdl":GeoMove is a complexType.
/// class _tptz__GeoMove operations:
/// - soap_new__tptz__GeoMove(soap*) allocate
/// - soap_new__tptz__GeoMove(soap*, int num) allocate array
/// - soap_new_req__tptz__GeoMove(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GeoMove(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GeoMove(soap*, _tptz__GeoMove*) deserialize from a stream
/// - int soap_write__tptz__GeoMove(soap, _tptz__GeoMove*) serialize to a stream
class _tptz__GeoMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief The geolocation of the target position.
/// Element Target of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     Target                         1;	///< Required element.
/// @brief An optional Speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// @brief An optional indication of the height of the target/area.
/// Element AreaHeight of type xs:float.
    float*                               AreaHeight                     0;	///< Optional element.
/// @brief An optional indication of the width of the target/area.
/// Element AreaWidth of type xs:float.
    float*                               AreaWidth                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse is a complexType.
/// class _tptz__GeoMoveResponse operations:
/// - soap_new__tptz__GeoMoveResponse(soap*) allocate
/// - soap_new__tptz__GeoMoveResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GeoMoveResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GeoMoveResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__GeoMoveResponse(soap, _tptz__GeoMoveResponse*) serialize to a stream
class _tptz__GeoMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop

/// "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
/// class _tptz__Stop operations:
/// - soap_new__tptz__Stop(soap*) allocate
/// - soap_new__tptz__Stop(soap*, int num) allocate array
/// - soap_new_req__tptz__Stop(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__Stop(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__Stop(soap*, _tptz__Stop*) deserialize from a stream
/// - int soap_write__tptz__Stop(soap, _tptz__Stop*) serialize to a stream
class _tptz__Stop
{ public:
/// @brief A reference to the MediaProfile that indicate what should be stopped.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// Element PanTilt of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// @brief Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// Element Zoom of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
/// class _tptz__StopResponse operations:
/// - soap_new__tptz__StopResponse(soap*) allocate
/// - soap_new__tptz__StopResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__StopResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__StopResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__StopResponse(soap*, _tptz__StopResponse*) deserialize from a stream
/// - int soap_write__tptz__StopResponse(soap, _tptz__StopResponse*) serialize to a stream
class _tptz__StopResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
/// class _tptz__GetPresetTours operations:
/// - soap_new__tptz__GetPresetTours(soap*) allocate
/// - soap_new__tptz__GetPresetTours(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetTours(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetTours(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTours(soap, _tptz__GetPresetTours*) serialize to a stream
class _tptz__GetPresetTours
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
/// class _tptz__GetPresetToursResponse operations:
/// - soap_new__tptz__GetPresetToursResponse(soap*) allocate
/// - soap_new__tptz__GetPresetToursResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetToursResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetToursResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetToursResponse(soap, _tptz__GetPresetToursResponse*) serialize to a stream
class _tptz__GetPresetToursResponse
{ public:
/// Vector of tt__PresetTour* with length 0..unbounded
    std::vector<tt__PresetTour*        > PresetTour                     0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
/// class _tptz__GetPresetTour operations:
/// - soap_new__tptz__GetPresetTour(soap*) allocate
/// - soap_new__tptz__GetPresetTour(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetTour(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetTour(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTour(soap, _tptz__GetPresetTour*) serialize to a stream
class _tptz__GetPresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
/// class _tptz__GetPresetTourResponse operations:
/// - soap_new__tptz__GetPresetTourResponse(soap*) allocate
/// - soap_new__tptz__GetPresetTourResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetTourResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetTourResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourResponse(soap, _tptz__GetPresetTourResponse*) serialize to a stream
class _tptz__GetPresetTourResponse
{ public:
/// Element PresetTour of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
/// class _tptz__GetPresetTourOptions operations:
/// - soap_new__tptz__GetPresetTourOptions(soap*) allocate
/// - soap_new__tptz__GetPresetTourOptions(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetTourOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetTourOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptions(soap, _tptz__GetPresetTourOptions*) serialize to a stream
class _tptz__GetPresetTourOptions
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetTourToken                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
/// class _tptz__GetPresetTourOptionsResponse operations:
/// - soap_new__tptz__GetPresetTourOptionsResponse(soap*) allocate
/// - soap_new__tptz__GetPresetTourOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptionsResponse(soap, _tptz__GetPresetTourOptionsResponse*) serialize to a stream
class _tptz__GetPresetTourOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    tt__PTZPresetTourOptions*            Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
/// class _tptz__CreatePresetTour operations:
/// - soap_new__tptz__CreatePresetTour(soap*) allocate
/// - soap_new__tptz__CreatePresetTour(soap*, int num) allocate array
/// - soap_new_req__tptz__CreatePresetTour(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__CreatePresetTour(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTour(soap, _tptz__CreatePresetTour*) serialize to a stream
class _tptz__CreatePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
/// class _tptz__CreatePresetTourResponse operations:
/// - soap_new__tptz__CreatePresetTourResponse(soap*) allocate
/// - soap_new__tptz__CreatePresetTourResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__CreatePresetTourResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__CreatePresetTourResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTourResponse(soap, _tptz__CreatePresetTourResponse*) serialize to a stream
class _tptz__CreatePresetTourResponse
{ public:
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
/// class _tptz__ModifyPresetTour operations:
/// - soap_new__tptz__ModifyPresetTour(soap*) allocate
/// - soap_new__tptz__ModifyPresetTour(soap*, int num) allocate array
/// - soap_new_req__tptz__ModifyPresetTour(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__ModifyPresetTour(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTour(soap, _tptz__ModifyPresetTour*) serialize to a stream
class _tptz__ModifyPresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTour of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
/// class _tptz__ModifyPresetTourResponse operations:
/// - soap_new__tptz__ModifyPresetTourResponse(soap*) allocate
/// - soap_new__tptz__ModifyPresetTourResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTourResponse(soap, _tptz__ModifyPresetTourResponse*) serialize to a stream
class _tptz__ModifyPresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
/// class _tptz__OperatePresetTour operations:
/// - soap_new__tptz__OperatePresetTour(soap*) allocate
/// - soap_new__tptz__OperatePresetTour(soap*, int num) allocate array
/// - soap_new_req__tptz__OperatePresetTour(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__OperatePresetTour(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTour(soap, _tptz__OperatePresetTour*) serialize to a stream
class _tptz__OperatePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element Operation of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
/// class _tptz__OperatePresetTourResponse operations:
/// - soap_new__tptz__OperatePresetTourResponse(soap*) allocate
/// - soap_new__tptz__OperatePresetTourResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__OperatePresetTourResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__OperatePresetTourResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTourResponse(soap, _tptz__OperatePresetTourResponse*) serialize to a stream
class _tptz__OperatePresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
/// class _tptz__RemovePresetTour operations:
/// - soap_new__tptz__RemovePresetTour(soap*) allocate
/// - soap_new__tptz__RemovePresetTour(soap*, int num) allocate array
/// - soap_new_req__tptz__RemovePresetTour(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__RemovePresetTour(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTour(soap, _tptz__RemovePresetTour*) serialize to a stream
class _tptz__RemovePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
/// class _tptz__RemovePresetTourResponse operations:
/// - soap_new__tptz__RemovePresetTourResponse(soap*) allocate
/// - soap_new__tptz__RemovePresetTourResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__RemovePresetTourResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__RemovePresetTourResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTourResponse(soap, _tptz__RemovePresetTourResponse*) serialize to a stream
class _tptz__RemovePresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations

/// "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
/// class _tptz__GetCompatibleConfigurations operations:
/// - soap_new__tptz__GetCompatibleConfigurations(soap*) allocate
/// - soap_new__tptz__GetCompatibleConfigurations(soap*, int num) allocate array
/// - soap_new_req__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurations(soap, _tptz__GetCompatibleConfigurations*) serialize to a stream
class _tptz__GetCompatibleConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
/// class _tptz__GetCompatibleConfigurationsResponse operations:
/// - soap_new__tptz__GetCompatibleConfigurationsResponse(soap*) allocate
/// - soap_new__tptz__GetCompatibleConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurationsResponse(soap, _tptz__GetCompatibleConfigurationsResponse*) serialize to a stream
class _tptz__GetCompatibleConfigurationsResponse
{ public:
/// @brief A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// Vector of tt__PTZConfiguration* with length 0..unbounded
    std::vector<tt__PTZConfiguration*  > PTZConfiguration               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
/// @brief Base class for physical entities like inputs and outputs.
/// class tt__DeviceEntity operations:
/// - soap_new_tt__DeviceEntity(soap*) allocate
/// - soap_new_tt__DeviceEntity(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceEntity(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceEntity(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a stream
/// - int soap_write_tt__DeviceEntity(soap, tt__DeviceEntity*) serialize to a stream
class tt__DeviceEntity
{ public:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
/// @brief Rectangle defined by lower left corner position and size. Units are pixel.
/// class tt__IntRectangle operations:
/// - soap_new_tt__IntRectangle(soap*) allocate
/// - soap_new_tt__IntRectangle(soap*, int num) allocate array
/// - soap_new_req_tt__IntRectangle(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntRectangle(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntRectangle(soap*, tt__IntRectangle*) deserialize from a stream
/// - int soap_write_tt__IntRectangle(soap, tt__IntRectangle*) serialize to a stream
class tt__IntRectangle
{ public:
/// Attribute x of type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute y of type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute width of type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute height of type xs:int.
   @int                                  height                         1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
/// @brief Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// class tt__IntRectangleRange operations:
/// - soap_new_tt__IntRectangleRange(soap*) allocate
/// - soap_new_tt__IntRectangleRange(soap*, int num) allocate array
/// - soap_new_req_tt__IntRectangleRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntRectangleRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) deserialize from a stream
/// - int soap_write_tt__IntRectangleRange(soap, tt__IntRectangleRange*) serialize to a stream
class tt__IntRectangleRange
{ public:
/// @brief Range of X-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        XRange                         1;	///< Required element.
/// @brief Range of Y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        YRange                         1;	///< Required element.
/// @brief Range of width.
/// Element WidthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        WidthRange                     1;	///< Required element.
/// @brief Range of height.
/// Element HeightRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        HeightRange                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
/// class tt__FloatRange operations:
/// - soap_new_tt__FloatRange(soap*) allocate
/// - soap_new_tt__FloatRange(soap*, int num) allocate array
/// - soap_new_req_tt__FloatRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FloatRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FloatRange(soap*, tt__FloatRange*) deserialize from a stream
/// - int soap_write_tt__FloatRange(soap, tt__FloatRange*) serialize to a stream
class tt__FloatRange
{ public:
/// Element Min of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element Max of type xs:float.
    float                                Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
/// @brief Range of duration greater equal Min duration and less equal Max duration.
/// class tt__DurationRange operations:
/// - soap_new_tt__DurationRange(soap*) allocate
/// - soap_new_tt__DurationRange(soap*, int num) allocate array
/// - soap_new_req_tt__DurationRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DurationRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DurationRange(soap*, tt__DurationRange*) deserialize from a stream
/// - int soap_write_tt__DurationRange(soap, tt__DurationRange*) serialize to a stream
class tt__DurationRange
{ public:
/// Element Min of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element Max of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntItems is a complexType.
/// @brief List of values.
/// class tt__IntItems operations:
/// - soap_new_tt__IntItems(soap*) allocate
/// - soap_new_tt__IntItems(soap*, int num) allocate array
/// - soap_new_req_tt__IntItems(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntItems(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntItems(soap*, tt__IntItems*) deserialize from a stream
/// - int soap_write_tt__IntItems(soap, tt__IntItems*) serialize to a stream
class tt__IntItems
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > Items                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FloatItems is a complexType.
/// class tt__FloatItems operations:
/// - soap_new_tt__FloatItems(soap*) allocate
/// - soap_new_tt__FloatItems(soap*, int num) allocate array
/// - soap_new_req_tt__FloatItems(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FloatItems(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FloatItems(soap*, tt__FloatItems*) deserialize from a stream
/// - int soap_write_tt__FloatItems(soap, tt__FloatItems*) serialize to a stream
class tt__FloatItems
{ public:
/// Vector of float with length 0..unbounded
    std::vector<float                  > Items                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
/// class tt__AnyHolder operations:
/// - soap_new_tt__AnyHolder(soap*) allocate
/// - soap_new_tt__AnyHolder(soap*, int num) allocate array
/// - soap_new_req_tt__AnyHolder(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnyHolder(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnyHolder(soap*, tt__AnyHolder*) deserialize from a stream
/// - int soap_write_tt__AnyHolder(soap, tt__AnyHolder*) serialize to a stream
class tt__AnyHolder
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
/// class tt__VideoSourceExtension operations:
/// - soap_new_tt__VideoSourceExtension(soap*) allocate
/// - soap_new_tt__VideoSourceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension(soap, tt__VideoSourceExtension*) serialize to a stream
class tt__VideoSourceExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    tt__VideoSourceExtension2*           Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
/// class tt__VideoSourceExtension2 operations:
/// - soap_new_tt__VideoSourceExtension2(soap*) allocate
/// - soap_new_tt__VideoSourceExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension2(soap, tt__VideoSourceExtension2*) serialize to a stream
class tt__VideoSourceExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Profile is a complexType.
/// @brief A media profile consists of a set of media configurations. Media profiles are used by a client to configure properties of a media stream from an NVT.<br/> An NVT shall provide at least one media profile at boot. An NVT should provide ready to use profiles for the most common media configurations that the device offers.<br/> A profile consists of a set of interconnected configuration entities. Configurations are provided by the NVT and can be either static or created dynamically by the NVT. For example, the dynamic configurations can be created by the NVT depending on current available encoding resources.
/// class tt__Profile operations:
/// - soap_new_tt__Profile(soap*) allocate
/// - soap_new_tt__Profile(soap*, int num) allocate array
/// - soap_new_req_tt__Profile(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Profile(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Profile(soap*, tt__Profile*) deserialize from a stream
/// - int soap_write_tt__Profile(soap, tt__Profile*) serialize to a stream
class tt__Profile
{ public:
/// @brief User readable name of the profile.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Optional configuration of the Video input.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio input.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Video encoder.
/// Element VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the Audio encoder.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the video analytics module and rule engine.
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    0;	///< Optional element.
/// @brief Optional configuration of the pan tilt zoom unit.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               0;	///< Optional element.
/// @brief Optional configuration of the metadata stream.
/// Element MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           MetadataConfiguration          0;	///< Optional element.
/// @brief Extensions defined in ONVIF 2.0
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    tt__ProfileExtension*                Extension                      0;	///< Optional element.
/// @brief Unique identifier of the profile.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// @brief A value of true signals that the profile cannot be deleted. Default is false.
/// Attribute fixed of type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
/// class tt__ProfileExtension operations:
/// - soap_new_tt__ProfileExtension(soap*) allocate
/// - soap_new_tt__ProfileExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileExtension(soap*, tt__ProfileExtension*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension(soap, tt__ProfileExtension*) serialize to a stream
class tt__ProfileExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional configuration of the Audio output.
/// Element AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio decoder.
/// Element AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       AudioDecoderConfiguration      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    tt__ProfileExtension2*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
/// class tt__ProfileExtension2 operations:
/// - soap_new_tt__ProfileExtension2(soap*) allocate
/// - soap_new_tt__ProfileExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension2(soap, tt__ProfileExtension2*) serialize to a stream
class tt__ProfileExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
/// @brief Base type defining the common properties of a configuration.
/// class tt__ConfigurationEntity operations:
/// - soap_new_tt__ConfigurationEntity(soap*) allocate
/// - soap_new_tt__ConfigurationEntity(soap*, int num) allocate array
/// - soap_new_req_tt__ConfigurationEntity(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ConfigurationEntity(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) deserialize from a stream
/// - int soap_write_tt__ConfigurationEntity(soap, tt__ConfigurationEntity*) serialize to a stream
class tt__ConfigurationEntity
{ public:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
/// class tt__VideoSourceConfigurationExtension operations:
/// - soap_new_tt__VideoSourceConfigurationExtension(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension(soap, tt__VideoSourceConfigurationExtension*) serialize to a stream
class tt__VideoSourceConfigurationExtension
{ public:
/// @brief Optional element to configure rotation of captured image. What resolutions a device supports shall be unaffected by the Rotate parameters.<br/> If a device is configured with Rotate=AUTO, the device shall take control over the Degree parameter and automatically update it so that a client can query current rotation.<br/> The device shall automatically apply the same rotation to its pan/tilt control direction depending on the following condition: if Reverse=AUTO in PTControlDirection or if the device doesnt support Reverse in PTControlDirection
/// Element Rotate of type "http://www.onvif.org/ver10/schema":Rotate.
    tt__Rotate*                          Rotate                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
/// class tt__VideoSourceConfigurationExtension2 operations:
/// - soap_new_tt__VideoSourceConfigurationExtension2(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension2(soap, tt__VideoSourceConfigurationExtension2*) serialize to a stream
class tt__VideoSourceConfigurationExtension2
{ public:
/// @brief Optional element describing the geometric lens distortion. Multiple instances for future variable lens support.
/// Vector of tt__LensDescription* with length 0..unbounded
    std::vector<tt__LensDescription*   > LensDescription                0;
/// @brief Optional element describing the scene orientation in the cameras field of view.
/// Element SceneOrientation of type "http://www.onvif.org/ver10/schema":SceneOrientation.
    tt__SceneOrientation*                SceneOrientation               0;	///< Optional element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Rotate is a complexType.
/// class tt__Rotate operations:
/// - soap_new_tt__Rotate(soap*) allocate
/// - soap_new_tt__Rotate(soap*, int num) allocate array
/// - soap_new_req_tt__Rotate(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Rotate(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Rotate(soap*, tt__Rotate*) deserialize from a stream
/// - int soap_write_tt__Rotate(soap, tt__Rotate*) serialize to a stream
class tt__Rotate
{ public:
/// @brief Parameter to enable/disable Rotation feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// @brief Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// Element Degree of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RotateExtension.
    tt__RotateExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
/// class tt__RotateExtension operations:
/// - soap_new_tt__RotateExtension(soap*) allocate
/// - soap_new_tt__RotateExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RotateExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RotateExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RotateExtension(soap*, tt__RotateExtension*) deserialize from a stream
/// - int soap_write_tt__RotateExtension(soap, tt__RotateExtension*) serialize to a stream
class tt__RotateExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LensProjection is a complexType.
/// class tt__LensProjection operations:
/// - soap_new_tt__LensProjection(soap*) allocate
/// - soap_new_tt__LensProjection(soap*, int num) allocate array
/// - soap_new_req_tt__LensProjection(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LensProjection(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LensProjection(soap*, tt__LensProjection*) deserialize from a stream
/// - int soap_write_tt__LensProjection(soap, tt__LensProjection*) serialize to a stream
class tt__LensProjection
{ public:
/// @brief Angle of incidence.
/// Element Angle of type xs:float.
    float                                Angle                          1;	///< Required element.
/// @brief Mapping radius as a consequence of the emergent angle.
/// Element Radius of type xs:float.
    float                                Radius                         1;	///< Required element.
/// @brief Optional ray absorption at the given angle due to vignetting. A value of one means no absorption.
/// Element Transmittance of type xs:float.
    float*                               Transmittance                  0;	///< Optional element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LensOffset is a complexType.
/// class tt__LensOffset operations:
/// - soap_new_tt__LensOffset(soap*) allocate
/// - soap_new_tt__LensOffset(soap*, int num) allocate array
/// - soap_new_req_tt__LensOffset(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LensOffset(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LensOffset(soap*, tt__LensOffset*) deserialize from a stream
/// - int soap_write_tt__LensOffset(soap, tt__LensOffset*) serialize to a stream
class tt__LensOffset
{ public:
/// @brief Optional horizontal offset of the lens center in normalized coordinates.
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// @brief Optional vertical offset of the lens center in normalized coordinates.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LensDescription is a complexType.
/// class tt__LensDescription operations:
/// - soap_new_tt__LensDescription(soap*) allocate
/// - soap_new_tt__LensDescription(soap*, int num) allocate array
/// - soap_new_req_tt__LensDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LensDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LensDescription(soap*, tt__LensDescription*) deserialize from a stream
/// - int soap_write_tt__LensDescription(soap, tt__LensDescription*) serialize to a stream
class tt__LensDescription
{ public:
/// @brief Offset of the lens center to the imager center in normalized coordinates.
/// Element Offset of type "http://www.onvif.org/ver10/schema":LensOffset.
    tt__LensOffset*                      Offset                         1;	///< Required element.
/// @brief Radial description of the projection characteristics. The resulting curve is defined by the B-Spline interpolation over the given elements. The element for Radius zero shall not be provided. The projection points shall be ordered with ascending Radius. Items outside the last projection Radius shall be assumed to be invisible (black).
/// Vector of tt__LensProjection* with length 1..unbounded
    std::vector<tt__LensProjection*    > Projection                     1;
/// @brief Compensation of the x coordinate needed for the ONVIF normalized coordinate system.
/// Element XFactor of type xs:float.
    float                                XFactor                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional focal length of the optical system.
/// Attribute FocalLength of type xs:float.
   @float*                               FocalLength                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
/// class tt__VideoSourceConfigurationOptions operations:
/// - soap_new_tt__VideoSourceConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptions(soap, tt__VideoSourceConfigurationOptions*) serialize to a stream
class tt__VideoSourceConfigurationOptions
{ public:
/// @brief Supported range for the capturing area. Device that does not support cropped streaming shall express BoundsRange option as mentioned below BoundsRange->XRange and BoundsRange->YRange with same Min/Max values HeightRange and WidthRange Min/Max values same as VideoSource Height and Width Limits.
/// Element BoundsRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    tt__IntRectangleRange*               BoundsRange                    1;	///< Required element.
/// @brief List of physical inputs.
/// Vector of tt__ReferenceToken with length 1..unbounded
    std::vector<tt__ReferenceToken     > VideoSourceTokensAvailable     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @brief Maximum number of profiles.
/// Attribute MaximumNumberOfProfiles of type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
/// class tt__VideoSourceConfigurationOptionsExtension operations:
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension(soap, tt__VideoSourceConfigurationOptionsExtension*) serialize to a stream
class tt__VideoSourceConfigurationOptionsExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Options of parameters for Rotation feature.
/// Element Rotate of type "http://www.onvif.org/ver10/schema":RotateOptions.
    tt__RotateOptions*                   Rotate                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
/// class tt__VideoSourceConfigurationOptionsExtension2 operations:
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap*) allocate
/// - soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfigurationOptionsExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfigurationOptionsExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension2(soap, tt__VideoSourceConfigurationOptionsExtension2*) serialize to a stream
class tt__VideoSourceConfigurationOptionsExtension2
{ public:
/// @brief Scene orientation modes supported by the device for this configuration.
/// Vector of enum tt__SceneOrientationMode with length 0..unbounded
    std::vector<enum tt__SceneOrientationMode> SceneOrientationMode           0;
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
/// class tt__RotateOptions operations:
/// - soap_new_tt__RotateOptions(soap*) allocate
/// - soap_new_tt__RotateOptions(soap*, int num) allocate array
/// - soap_new_req_tt__RotateOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RotateOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RotateOptions(soap*, tt__RotateOptions*) deserialize from a stream
/// - int soap_write_tt__RotateOptions(soap, tt__RotateOptions*) serialize to a stream
class tt__RotateOptions
{ public:
/// @brief Supported options of Rotate mode parameter.
/// Vector of enum tt__RotateMode with length 1..unbounded
    std::vector<enum tt__RotateMode    > Mode                           1;
/// @brief List of supported degree value for rotation.
/// Element DegreeList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        DegreeList                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    tt__RotateOptionsExtension*          Extension                      0;	///< Optional element.
/// @brief After setting the rotation, if a device starts to reboot this value is true. If a device can handle rotation setting without rebooting this value is false.
/// Attribute Reboot of type xs:boolean.
   @bool*                                Reboot                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
/// class tt__RotateOptionsExtension operations:
/// - soap_new_tt__RotateOptionsExtension(soap*) allocate
/// - soap_new_tt__RotateOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RotateOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RotateOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__RotateOptionsExtension(soap, tt__RotateOptionsExtension*) serialize to a stream
class tt__RotateOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SceneOrientation is a complexType.
/// class tt__SceneOrientation operations:
/// - soap_new_tt__SceneOrientation(soap*) allocate
/// - soap_new_tt__SceneOrientation(soap*, int num) allocate array
/// - soap_new_req_tt__SceneOrientation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SceneOrientation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SceneOrientation(soap*, tt__SceneOrientation*) deserialize from a stream
/// - int soap_write_tt__SceneOrientation(soap, tt__SceneOrientation*) serialize to a stream
class tt__SceneOrientation
{ public:
/// @brief Parameter to assign the way the camera determines the scene orientation.
/// Element Mode of type "http://www.onvif.org/ver10/schema":SceneOrientationMode.
    enum tt__SceneOrientationMode        Mode                           1;	///< Required element.
/// @brief Assigned or determined scene orientation based on the Mode. When assigning the Mode to AUTO, this field is optional and will be ignored by the device. When assigning the Mode to MANUAL, this field is required and the device will return an InvalidArgs fault if missing.
/// Element Orientation of type xs:string.
    std::string*                         Orientation                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
/// class tt__VideoResolution operations:
/// - soap_new_tt__VideoResolution(soap*) allocate
/// - soap_new_tt__VideoResolution(soap*, int num) allocate array
/// - soap_new_req_tt__VideoResolution(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoResolution(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoResolution(soap*, tt__VideoResolution*) deserialize from a stream
/// - int soap_write_tt__VideoResolution(soap, tt__VideoResolution*) serialize to a stream
class tt__VideoResolution
{ public:
/// @brief Number of the columns of the Video image.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief Number of the lines of the Video image.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
/// class tt__VideoRateControl operations:
/// - soap_new_tt__VideoRateControl(soap*) allocate
/// - soap_new_tt__VideoRateControl(soap*, int num) allocate array
/// - soap_new_req_tt__VideoRateControl(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoRateControl(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoRateControl(soap*, tt__VideoRateControl*) deserialize from a stream
/// - int soap_write_tt__VideoRateControl(soap, tt__VideoRateControl*) serialize to a stream
class tt__VideoRateControl
{ public:
/// @brief Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// Element FrameRateLimit of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// @brief Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// Element EncodingInterval of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// @brief the maximum output bitrate in kbps
/// Element BitrateLimit of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
/// class tt__Mpeg4Configuration operations:
/// - soap_new_tt__Mpeg4Configuration(soap*) allocate
/// - soap_new_tt__Mpeg4Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Configuration(soap, tt__Mpeg4Configuration*) serialize to a stream
class tt__Mpeg4Configuration
{ public:
/// @brief Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// Element Mpeg4Profile of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
/// class tt__H264Configuration operations:
/// - soap_new_tt__H264Configuration(soap*) allocate
/// - soap_new_tt__H264Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__H264Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264Configuration(soap*, tt__H264Configuration*) deserialize from a stream
/// - int soap_write_tt__H264Configuration(soap, tt__H264Configuration*) serialize to a stream
class tt__H264Configuration
{ public:
/// @brief Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the H.264 profile, either baseline, main, extended or high
/// Element H264Profile of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
/// class tt__VideoEncoderConfigurationOptions operations:
/// - soap_new_tt__VideoEncoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfigurationOptions(soap, tt__VideoEncoderConfigurationOptions*) serialize to a stream
class tt__VideoEncoderConfigurationOptions
{ public:
/// @brief Range of the quality values. A high value means higher quality.
/// Element QualityRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        QualityRange                   1;	///< Required element.
/// @brief Optional JPEG encoder settings ranges (See also Extension element).
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions.
    tt__JpegOptions*                     JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges (See also Extension element).
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    tt__Mpeg4Options*                    MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges (See also Extension element).
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options.
    tt__H264Options*                     H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    tt__VideoEncoderOptionsExtension*    Extension                      0;	///< Optional element.
/// @brief Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoderConfiguration element.
/// Attribute GuaranteedFrameRateSupported of type xs:boolean.
   @bool*                                GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
/// class tt__VideoEncoderOptionsExtension operations:
/// - soap_new_tt__VideoEncoderOptionsExtension(soap*) allocate
/// - soap_new_tt__VideoEncoderOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderOptionsExtension(soap, tt__VideoEncoderOptionsExtension*) serialize to a stream
class tt__VideoEncoderOptionsExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional JPEG encoder settings ranges.
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    tt__JpegOptions2*                    JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    tt__Mpeg4Options2*                   MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options2.
    tt__H264Options2*                    H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    tt__VideoEncoderOptionsExtension2*   Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
/// class tt__VideoEncoderOptionsExtension2 operations:
/// - soap_new_tt__VideoEncoderOptionsExtension2(soap*) allocate
/// - soap_new_tt__VideoEncoderOptionsExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderOptionsExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderOptionsExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderOptionsExtension2(soap, tt__VideoEncoderOptionsExtension2*) serialize to a stream
class tt__VideoEncoderOptionsExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
/// class tt__JpegOptions operations:
/// - soap_new_tt__JpegOptions(soap*) allocate
/// - soap_new_tt__JpegOptions(soap*, int num) allocate array
/// - soap_new_req_tt__JpegOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__JpegOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__JpegOptions(soap*, tt__JpegOptions*) deserialize from a stream
/// - int soap_write_tt__JpegOptions(soap, tt__JpegOptions*) serialize to a stream
class tt__JpegOptions
{ public:
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
/// class tt__Mpeg4Options operations:
/// - soap_new_tt__Mpeg4Options(soap*) allocate
/// - soap_new_tt__Mpeg4Options(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4Options(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4Options(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options(soap, tt__Mpeg4Options*) serialize to a stream
class tt__Mpeg4Options
{ public:
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Vector of enum tt__Mpeg4Profile with length 1..unbounded
    std::vector<enum tt__Mpeg4Profile  > Mpeg4ProfilesSupported         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":H264Options is a complexType.
/// class tt__H264Options operations:
/// - soap_new_tt__H264Options(soap*) allocate
/// - soap_new_tt__H264Options(soap*, int num) allocate array
/// - soap_new_req_tt__H264Options(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264Options(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264Options(soap*, tt__H264Options*) deserialize from a stream
/// - int soap_write_tt__H264Options(soap, tt__H264Options*) serialize to a stream
class tt__H264Options
{ public:
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Vector of enum tt__H264Profile with length 1..unbounded
    std::vector<enum tt__H264Profile   > H264ProfilesSupported          1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoResolution2 is a complexType.
/// class tt__VideoResolution2 operations:
/// - soap_new_tt__VideoResolution2(soap*) allocate
/// - soap_new_tt__VideoResolution2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoResolution2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoResolution2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoResolution2(soap*, tt__VideoResolution2*) deserialize from a stream
/// - int soap_write_tt__VideoResolution2(soap, tt__VideoResolution2*) serialize to a stream
class tt__VideoResolution2
{ public:
/// @brief Number of the columns of the Video image.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief Number of the lines of the Video image.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoRateControl2 is a complexType.
/// class tt__VideoRateControl2 operations:
/// - soap_new_tt__VideoRateControl2(soap*) allocate
/// - soap_new_tt__VideoRateControl2(soap*, int num) allocate array
/// - soap_new_req_tt__VideoRateControl2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoRateControl2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoRateControl2(soap*, tt__VideoRateControl2*) deserialize from a stream
/// - int soap_write_tt__VideoRateControl2(soap, tt__VideoRateControl2*) serialize to a stream
class tt__VideoRateControl2
{ public:
/// @brief Desired frame rate in fps. The actual rate may be lower due to e.g. performance limitations.
/// Element FrameRateLimit of type xs:float.
    float                                FrameRateLimit                 1;	///< Required element.
/// @brief the maximum output bitrate in kbps
/// Element BitrateLimit of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Enforce constant bitrate.
/// Attribute ConstantBitRate of type xs:boolean.
   @bool*                                ConstantBitRate                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is a complexType.
/// class tt__VideoEncoder2ConfigurationOptions operations:
/// - soap_new_tt__VideoEncoder2ConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoEncoder2ConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoder2ConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoder2ConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoder2ConfigurationOptions(soap*, tt__VideoEncoder2ConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoEncoder2ConfigurationOptions(soap, tt__VideoEncoder2ConfigurationOptions*) serialize to a stream
class tt__VideoEncoder2ConfigurationOptions
{ public:
/// @brief Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// Element Encoding of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// @brief Range of the quality values. A high value means higher quality.
/// Element QualityRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      QualityRange                   1;	///< Required element.
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution2* with length 1..unbounded
    std::vector<tt__VideoResolution2*  > ResolutionsAvailable           1;
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Exactly two values, which define the Lower and Upper bounds for the supported group of Video frames length. These values typically correspond to the I-Frame distance.
/// Attribute GovLengthRange of type "http://www.onvif.org/ver10/schema":IntAttrList.
   @tt__IntAttrList*                     GovLengthRange                 0;	///< Optional attribute.
/// @brief List of supported target frame rates in fps (frames per second). The list shall be sorted with highest values first.
/// Attribute FrameRatesSupported of type "http://www.onvif.org/ver10/schema":FloatAttrList.
   @tt__FloatAttrList*                   FrameRatesSupported            0;	///< Optional attribute.
/// @brief List of supported encoder profiles as defined in tt::VideoEncodingProfiles.
/// Attribute ProfilesSupported of type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList*                  ProfilesSupported              0;	///< Optional attribute.
/// @brief Signal whether enforcing constant bitrate is supported.
/// Attribute ConstantBitRateSupported of type xs:boolean.
   @bool*                                ConstantBitRateSupported       0;	///< Optional attribute.
/// @brief Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoder2Configuration element.
/// Attribute GuaranteedFrameRateSupported of type xs:boolean.
   @bool*                                GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
/// class tt__AudioSourceConfigurationOptions operations:
/// - soap_new_tt__AudioSourceConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfigurationOptions(soap, tt__AudioSourceConfigurationOptions*) serialize to a stream
class tt__AudioSourceConfigurationOptions
{ public:
/// @brief Tokens of the audio source the configuration can be used for.
/// Vector of tt__ReferenceToken with length 1..unbounded
    std::vector<tt__ReferenceToken     > InputTokensAvailable           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    tt__AudioSourceOptionsExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
/// class tt__AudioSourceOptionsExtension operations:
/// - soap_new_tt__AudioSourceOptionsExtension(soap*) allocate
/// - soap_new_tt__AudioSourceOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSourceOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSourceOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__AudioSourceOptionsExtension(soap, tt__AudioSourceOptionsExtension*) serialize to a stream
class tt__AudioSourceOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
/// class tt__AudioEncoderConfigurationOptions operations:
/// - soap_new_tt__AudioEncoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfigurationOptions(soap, tt__AudioEncoderConfigurationOptions*) serialize to a stream
class tt__AudioEncoderConfigurationOptions
{ public:
/// @brief list of supported AudioEncoderConfigurations
/// Vector of tt__AudioEncoderConfigurationOption* with length 0..unbounded
    std::vector<tt__AudioEncoderConfigurationOption*> Options                        0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
/// class tt__AudioEncoderConfigurationOption operations:
/// - soap_new_tt__AudioEncoderConfigurationOption(soap*) allocate
/// - soap_new_tt__AudioEncoderConfigurationOption(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoderConfigurationOption(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoderConfigurationOption(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfigurationOption(soap, tt__AudioEncoderConfigurationOption*) serialize to a stream
class tt__AudioEncoderConfigurationOption
{ public:
/// @brief The enoding used for audio data (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// @brief List of supported bitrates in kbps for the specified Encoding
/// Element BitrateList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        BitrateList                    1;	///< Required element.
/// @brief List of supported Sample Rates in kHz for the specified Encoding
/// Element SampleRateList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateList                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is a complexType.
/// class tt__AudioEncoder2ConfigurationOptions operations:
/// - soap_new_tt__AudioEncoder2ConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioEncoder2ConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoder2ConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoder2ConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoder2ConfigurationOptions(soap*, tt__AudioEncoder2ConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioEncoder2ConfigurationOptions(soap, tt__AudioEncoder2ConfigurationOptions*) serialize to a stream
class tt__AudioEncoder2ConfigurationOptions
{ public:
/// @brief Audio Media Subtype for the audio format. For definitions see tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// Element Encoding of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// @brief List of supported bitrates in kbps for the specified Encoding
/// Element BitrateList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        BitrateList                    1;	///< Required element.
/// @brief List of supported Sample Rates in kHz for the specified Encoding
/// Element SampleRateList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateList                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
/// class tt__MetadataConfigurationExtension operations:
/// - soap_new_tt__MetadataConfigurationExtension(soap*) allocate
/// - soap_new_tt__MetadataConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationExtension(soap, tt__MetadataConfigurationExtension*) serialize to a stream
class tt__MetadataConfigurationExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
/// class tt__PTZFilter operations:
/// - soap_new_tt__PTZFilter(soap*) allocate
/// - soap_new_tt__PTZFilter(soap*, int num) allocate array
/// - soap_new_req_tt__PTZFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZFilter(soap*, tt__PTZFilter*) deserialize from a stream
/// - int soap_write_tt__PTZFilter(soap, tt__PTZFilter*) serialize to a stream
class tt__PTZFilter
{ public:
/// @brief True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// @brief True if the metadata stream shall contain the PTZ position
/// Element Position of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
/// @brief Subcription handling in the same way as base notification subscription.
/// class tt__EventSubscription operations:
/// - soap_new_tt__EventSubscription(soap*) allocate
/// - soap_new_tt__EventSubscription(soap*, int num) allocate array
/// - soap_new_req_tt__EventSubscription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventSubscription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventSubscription(soap*, tt__EventSubscription*) deserialize from a stream
/// - int soap_write_tt__EventSubscription(soap, tt__EventSubscription*) serialize to a stream
class tt__EventSubscription
{ public:
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// class _tt__EventSubscription_SubscriptionPolicy operations:
/// - soap_new__tt__EventSubscription_SubscriptionPolicy(soap*) allocate
/// - soap_new__tt__EventSubscription_SubscriptionPolicy(soap*, int num) allocate array
/// - soap_new_req__tt__EventSubscription_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tt__EventSubscription_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__tt__EventSubscription_SubscriptionPolicy(soap, _tt__EventSubscription_SubscriptionPolicy*) serialize to a stream
    class _tt__EventSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
/// class tt__MetadataConfigurationOptions operations:
/// - soap_new_tt__MetadataConfigurationOptions(soap*) allocate
/// - soap_new_tt__MetadataConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptions(soap, tt__MetadataConfigurationOptions*) serialize to a stream
class tt__MetadataConfigurationOptions
{ public:
/// Element PTZStatusFilterOptions of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    tt__PTZStatusFilterOptions*          PTZStatusFilterOptions         1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// @brief True if the device is able to stream the Geo Located positions of each target.
/// Attribute GeoLocation of type xs:boolean.
   @bool*                                GeoLocation                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
/// class tt__MetadataConfigurationOptionsExtension operations:
/// - soap_new_tt__MetadataConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__MetadataConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptionsExtension(soap, tt__MetadataConfigurationOptionsExtension*) serialize to a stream
class tt__MetadataConfigurationOptionsExtension
{ public:
/// @brief List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > CompressionType                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
/// class tt__MetadataConfigurationOptionsExtension2 operations:
/// - soap_new_tt__MetadataConfigurationOptionsExtension2(soap*) allocate
/// - soap_new_tt__MetadataConfigurationOptionsExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfigurationOptionsExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfigurationOptionsExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptionsExtension2(soap, tt__MetadataConfigurationOptionsExtension2*) serialize to a stream
class tt__MetadataConfigurationOptionsExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
/// class tt__PTZStatusFilterOptions operations:
/// - soap_new_tt__PTZStatusFilterOptions(soap*) allocate
/// - soap_new_tt__PTZStatusFilterOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStatusFilterOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStatusFilterOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) deserialize from a stream
/// - int soap_write_tt__PTZStatusFilterOptions(soap, tt__PTZStatusFilterOptions*) serialize to a stream
class tt__PTZStatusFilterOptions
{ public:
/// @brief True if the device is able to stream pan or tilt status information.
/// Element PanTiltStatusSupported of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// @brief True if the device is able to stream zoom status inforamtion.
/// Element ZoomStatusSupported of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief True if the device is able to stream the pan or tilt position.
/// Element PanTiltPositionSupported of type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// @brief True if the device is able to stream zoom position information.
/// Element ZoomPositionSupported of type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
/// class tt__PTZStatusFilterOptionsExtension operations:
/// - soap_new_tt__PTZStatusFilterOptionsExtension(soap*) allocate
/// - soap_new_tt__PTZStatusFilterOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStatusFilterOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStatusFilterOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZStatusFilterOptionsExtension(soap, tt__PTZStatusFilterOptionsExtension*) serialize to a stream
class tt__PTZStatusFilterOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
/// class tt__VideoOutputExtension operations:
/// - soap_new_tt__VideoOutputExtension(soap*) allocate
/// - soap_new_tt__VideoOutputExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutputExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutputExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutputExtension(soap*, tt__VideoOutputExtension*) deserialize from a stream
/// - int soap_write_tt__VideoOutputExtension(soap, tt__VideoOutputExtension*) serialize to a stream
class tt__VideoOutputExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
/// class tt__VideoOutputConfigurationOptions operations:
/// - soap_new_tt__VideoOutputConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutputConfigurationOptions(soap*, tt__VideoOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoOutputConfigurationOptions(soap, tt__VideoOutputConfigurationOptions*) serialize to a stream
class tt__VideoOutputConfigurationOptions
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
/// class tt__VideoDecoderConfigurationOptions operations:
/// - soap_new_tt__VideoDecoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__VideoDecoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__VideoDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoDecoderConfigurationOptions(soap*, tt__VideoDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoDecoderConfigurationOptions(soap, tt__VideoDecoderConfigurationOptions*) serialize to a stream
class tt__VideoDecoderConfigurationOptions
{ public:
/// @brief If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// Element JpegDecOptions of type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    tt__JpegDecOptions*                  JpegDecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// Element H264DecOptions of type "http://www.onvif.org/ver10/schema":H264DecOptions.
    tt__H264DecOptions*                  H264DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// Element Mpeg4DecOptions of type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    tt__Mpeg4DecOptions*                 Mpeg4DecOptions                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
/// class tt__H264DecOptions operations:
/// - soap_new_tt__H264DecOptions(soap*) allocate
/// - soap_new_tt__H264DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__H264DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264DecOptions(soap*, tt__H264DecOptions*) deserialize from a stream
/// - int soap_write_tt__H264DecOptions(soap, tt__H264DecOptions*) serialize to a stream
class tt__H264DecOptions
{ public:
/// @brief List of supported H.264 Video Resolutions
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief List of supported H264 Profiles (either baseline, main, extended or high)
/// Vector of enum tt__H264Profile with length 1..unbounded
    std::vector<enum tt__H264Profile   > SupportedH264Profiles          1;
/// @brief Supported H.264 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// @brief Supported H.264 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
/// class tt__JpegDecOptions operations:
/// - soap_new_tt__JpegDecOptions(soap*) allocate
/// - soap_new_tt__JpegDecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__JpegDecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__JpegDecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__JpegDecOptions(soap*, tt__JpegDecOptions*) deserialize from a stream
/// - int soap_write_tt__JpegDecOptions(soap, tt__JpegDecOptions*) serialize to a stream
class tt__JpegDecOptions
{ public:
/// @brief List of supported Jpeg Video Resolutions
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported Jpeg bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Jpeg framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
/// class tt__Mpeg4DecOptions operations:
/// - soap_new_tt__Mpeg4DecOptions(soap*) allocate
/// - soap_new_tt__Mpeg4DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4DecOptions(soap*, tt__Mpeg4DecOptions*) deserialize from a stream
/// - int soap_write_tt__Mpeg4DecOptions(soap, tt__Mpeg4DecOptions*) serialize to a stream
class tt__Mpeg4DecOptions
{ public:
/// @brief List of supported Mpeg4 Video Resolutions
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief List of supported Mpeg4 Profiles (either SP or ASP)
/// Vector of enum tt__Mpeg4Profile with length 1..unbounded
    std::vector<enum tt__Mpeg4Profile  > SupportedMpeg4Profiles         1;
/// @brief Supported Mpeg4 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Mpeg4 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
/// class tt__VideoDecoderConfigurationOptionsExtension operations:
/// - soap_new_tt__VideoDecoderConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__VideoDecoderConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__VideoDecoderConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoDecoderConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoDecoderConfigurationOptionsExtension(soap*, tt__VideoDecoderConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoDecoderConfigurationOptionsExtension(soap, tt__VideoDecoderConfigurationOptionsExtension*) serialize to a stream
class tt__VideoDecoderConfigurationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
/// class tt__AudioOutputConfigurationOptions operations:
/// - soap_new_tt__AudioOutputConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfigurationOptions(soap, tt__AudioOutputConfigurationOptions*) serialize to a stream
class tt__AudioOutputConfigurationOptions
{ public:
/// @brief Tokens of the physical Audio outputs (typically one).
/// Vector of tt__ReferenceToken with length 1..unbounded
    std::vector<tt__ReferenceToken     > OutputTokensAvailable          1;
/// @brief An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li> </ul> Acoustic echo cancellation is out of ONVIF scope.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > SendPrimacyOptions             0;
/// @brief Minimum and maximum level range supported for this Output.
/// Element OutputLevelRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        OutputLevelRange               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
/// class tt__AudioDecoderConfigurationOptions operations:
/// - soap_new_tt__AudioDecoderConfigurationOptions(soap*) allocate
/// - soap_new_tt__AudioDecoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfigurationOptions(soap, tt__AudioDecoderConfigurationOptions*) serialize to a stream
class tt__AudioDecoderConfigurationOptions
{ public:
/// @brief If the device is able to decode AAC encoded audio this section describes the supported configurations
/// Element AACDecOptions of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    tt__AACDecOptions*                   AACDecOptions                  0;	///< Optional element.
/// @brief If the device is able to decode G711 encoded audio this section describes the supported configurations
/// Element G711DecOptions of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    tt__G711DecOptions*                  G711DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode G726 encoded audio this section describes the supported configurations
/// Element G726DecOptions of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    tt__G726DecOptions*                  G726DecOptions                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
/// class tt__G711DecOptions operations:
/// - soap_new_tt__G711DecOptions(soap*) allocate
/// - soap_new_tt__G711DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__G711DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__G711DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__G711DecOptions(soap*, tt__G711DecOptions*) deserialize from a stream
/// - int soap_write_tt__G711DecOptions(soap, tt__G711DecOptions*) serialize to a stream
class tt__G711DecOptions
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
/// class tt__AACDecOptions operations:
/// - soap_new_tt__AACDecOptions(soap*) allocate
/// - soap_new_tt__AACDecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AACDecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AACDecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AACDecOptions(soap*, tt__AACDecOptions*) deserialize from a stream
/// - int soap_write_tt__AACDecOptions(soap, tt__AACDecOptions*) serialize to a stream
class tt__AACDecOptions
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
/// class tt__G726DecOptions operations:
/// - soap_new_tt__G726DecOptions(soap*) allocate
/// - soap_new_tt__G726DecOptions(soap*, int num) allocate array
/// - soap_new_req_tt__G726DecOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__G726DecOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__G726DecOptions(soap*, tt__G726DecOptions*) deserialize from a stream
/// - int soap_write_tt__G726DecOptions(soap, tt__G726DecOptions*) serialize to a stream
class tt__G726DecOptions
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
/// class tt__AudioDecoderConfigurationOptionsExtension operations:
/// - soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AudioDecoderConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioDecoderConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfigurationOptionsExtension(soap, tt__AudioDecoderConfigurationOptionsExtension*) serialize to a stream
class tt__AudioDecoderConfigurationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
/// class tt__MulticastConfiguration operations:
/// - soap_new_tt__MulticastConfiguration(soap*) allocate
/// - soap_new_tt__MulticastConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__MulticastConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MulticastConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) deserialize from a stream
/// - int soap_write_tt__MulticastConfiguration(soap, tt__MulticastConfiguration*) serialize to a stream
class tt__MulticastConfiguration
{ public:
/// @brief The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// Element Address of type "http://www.onvif.org/ver10/schema":IPAddress.
    tt__IPAddress*                       Address                        1;	///< Required element.
/// @brief The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// Element Port of type xs:int.
    int                                  Port                           1;	///< Required element.
/// @brief In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// Element TTL of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// @brief Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
/// class tt__StreamSetup operations:
/// - soap_new_tt__StreamSetup(soap*) allocate
/// - soap_new_tt__StreamSetup(soap*, int num) allocate array
/// - soap_new_req_tt__StreamSetup(soap*, ...) allocate, set required members
/// - soap_new_set_tt__StreamSetup(soap*, ...) allocate, set all public members
/// - int soap_read_tt__StreamSetup(soap*, tt__StreamSetup*) deserialize from a stream
/// - int soap_write_tt__StreamSetup(soap, tt__StreamSetup*) serialize to a stream
class tt__StreamSetup
{ public:
/// @brief Defines if a multicast or unicast stream is requested
/// Element Stream of type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element Transport of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Transport                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Transport is a complexType.
/// class tt__Transport operations:
/// - soap_new_tt__Transport(soap*) allocate
/// - soap_new_tt__Transport(soap*, int num) allocate array
/// - soap_new_req_tt__Transport(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Transport(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Transport(soap*, tt__Transport*) deserialize from a stream
/// - int soap_write_tt__Transport(soap, tt__Transport*) serialize to a stream
class tt__Transport
{ public:
/// @brief Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// Element Protocol of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// @brief Optional element to describe further tunnel options. This element is normally not needed
/// Element Tunnel of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Tunnel                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
/// class tt__MediaUri operations:
/// - soap_new_tt__MediaUri(soap*) allocate
/// - soap_new_tt__MediaUri(soap*, int num) allocate array
/// - soap_new_req_tt__MediaUri(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaUri(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaUri(soap*, tt__MediaUri*) deserialize from a stream
/// - int soap_write_tt__MediaUri(soap, tt__MediaUri*) serialize to a stream
class tt__MediaUri
{ public:
/// @brief Stable Uri to be used for requesting the media stream
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @brief Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// Element InvalidAfterConnect of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// @brief Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// Element InvalidAfterReboot of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// @brief Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Scope is a complexType.
/// class tt__Scope operations:
/// - soap_new_tt__Scope(soap*) allocate
/// - soap_new_tt__Scope(soap*, int num) allocate array
/// - soap_new_req_tt__Scope(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Scope(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Scope(soap*, tt__Scope*) deserialize from a stream
/// - int soap_write_tt__Scope(soap, tt__Scope*) serialize to a stream
class tt__Scope
{ public:
/// @brief Indicates if the scope is fixed or configurable.
/// Element ScopeDef of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// @brief Scope item URI.
/// Element ScopeItem of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
/// class tt__NetworkInterfaceExtension operations:
/// - soap_new_tt__NetworkInterfaceExtension(soap*) allocate
/// - soap_new_tt__NetworkInterfaceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension(soap, tt__NetworkInterfaceExtension*) serialize to a stream
class tt__NetworkInterfaceExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// @brief Extension point prepared for future 802.3 configuration.
/// Vector of tt__Dot3Configuration* with length 0..unbounded
    std::vector<tt__Dot3Configuration* > Dot3                           0;
/// Vector of tt__Dot11Configuration* with length 0..unbounded
    std::vector<tt__Dot11Configuration*> Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    tt__NetworkInterfaceExtension2*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
/// class tt__Dot3Configuration operations:
/// - soap_new_tt__Dot3Configuration(soap*) allocate
/// - soap_new_tt__Dot3Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot3Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot3Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot3Configuration(soap, tt__Dot3Configuration*) serialize to a stream
class tt__Dot3Configuration
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
/// class tt__NetworkInterfaceExtension2 operations:
/// - soap_new_tt__NetworkInterfaceExtension2(soap*) allocate
/// - soap_new_tt__NetworkInterfaceExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension2(soap, tt__NetworkInterfaceExtension2*) serialize to a stream
class tt__NetworkInterfaceExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
/// class tt__NetworkInterfaceLink operations:
/// - soap_new_tt__NetworkInterfaceLink(soap*) allocate
/// - soap_new_tt__NetworkInterfaceLink(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceLink(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceLink(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceLink(soap, tt__NetworkInterfaceLink*) serialize to a stream
class tt__NetworkInterfaceLink
{ public:
/// @brief Configured link settings.
/// Element AdminSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// @brief Current active link settings.
/// Element OperSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// @brief Integer indicating interface type, for example: 6 is ethernet.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
/// class tt__NetworkInterfaceConnectionSetting operations:
/// - soap_new_tt__NetworkInterfaceConnectionSetting(soap*) allocate
/// - soap_new_tt__NetworkInterfaceConnectionSetting(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(soap, tt__NetworkInterfaceConnectionSetting*) serialize to a stream
class tt__NetworkInterfaceConnectionSetting
{ public:
/// @brief Auto negotiation on/off.
/// Element AutoNegotiation of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// @brief Speed.
/// Element Speed of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// @brief Duplex type, Half or Full.
/// Element Duplex of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
/// class tt__NetworkInterfaceInfo operations:
/// - soap_new_tt__NetworkInterfaceInfo(soap*) allocate
/// - soap_new_tt__NetworkInterfaceInfo(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceInfo(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceInfo(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceInfo(soap, tt__NetworkInterfaceInfo*) serialize to a stream
class tt__NetworkInterfaceInfo
{ public:
/// @brief Network interface name, for example eth0.
/// Element Name of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// @brief Network interface MAC address.
/// Element HwAddress of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
/// class tt__IPv6NetworkInterface operations:
/// - soap_new_tt__IPv6NetworkInterface(soap*) allocate
/// - soap_new_tt__IPv6NetworkInterface(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6NetworkInterface(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6NetworkInterface(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterface(soap, tt__IPv6NetworkInterface*) serialize to a stream
class tt__IPv6NetworkInterface
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv6 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    tt__IPv6Configuration*               Config                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
/// class tt__IPv4NetworkInterface operations:
/// - soap_new_tt__IPv4NetworkInterface(soap*) allocate
/// - soap_new_tt__IPv4NetworkInterface(soap*, int num) allocate array
/// - soap_new_req_tt__IPv4NetworkInterface(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv4NetworkInterface(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterface(soap, tt__IPv4NetworkInterface*) serialize to a stream
class tt__IPv4NetworkInterface
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv4 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    tt__IPv4Configuration*               Config                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
/// class tt__IPv4Configuration operations:
/// - soap_new_tt__IPv4Configuration(soap*) allocate
/// - soap_new_tt__IPv4Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv4Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv4Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv4Configuration(soap, tt__IPv4Configuration*) serialize to a stream
class tt__IPv4Configuration
{ public:
/// @brief List of manually added IPv4 addresses.
/// Vector of tt__PrefixedIPv4Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;
/// @brief Link local address.
/// Element LinkLocal of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             LinkLocal                      0;	///< Optional element.
/// @brief IPv4 address configured by using DHCP.
/// Element FromDHCP of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             FromDHCP                       0;	///< Optional element.
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
/// class tt__IPv6Configuration operations:
/// - soap_new_tt__IPv6Configuration(soap*) allocate
/// - soap_new_tt__IPv6Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv6Configuration(soap, tt__IPv6Configuration*) serialize to a stream
class tt__IPv6Configuration
{ public:
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// @brief List of manually entered IPv6 addresses.
/// Vector of tt__PrefixedIPv6Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;
/// @brief List of link local IPv6 addresses.
/// Vector of tt__PrefixedIPv6Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv6Address*> LinkLocal                      0;
/// @brief List of IPv6 addresses configured by using DHCP.
/// Vector of tt__PrefixedIPv6Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv6Address*> FromDHCP                       0;
/// @brief List of IPv6 addresses configured by using router advertisment.
/// Vector of tt__PrefixedIPv6Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv6Address*> FromRA                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    tt__IPv6ConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
/// class tt__IPv6ConfigurationExtension operations:
/// - soap_new_tt__IPv6ConfigurationExtension(soap*) allocate
/// - soap_new_tt__IPv6ConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__IPv6ConfigurationExtension(soap, tt__IPv6ConfigurationExtension*) serialize to a stream
class tt__IPv6ConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
/// class tt__NetworkProtocol operations:
/// - soap_new_tt__NetworkProtocol(soap*) allocate
/// - soap_new_tt__NetworkProtocol(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkProtocol(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkProtocol(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocol(soap, tt__NetworkProtocol*) serialize to a stream
class tt__NetworkProtocol
{ public:
/// @brief Network protocol type string.
/// Element Name of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// @brief Indicates if the protocol is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The port that is used by the protocol.
/// Vector of int with length 1..unbounded
    std::vector<int                    > Port                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    tt__NetworkProtocolExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
/// class tt__NetworkProtocolExtension operations:
/// - soap_new_tt__NetworkProtocolExtension(soap*) allocate
/// - soap_new_tt__NetworkProtocolExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkProtocolExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkProtocolExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocolExtension(soap, tt__NetworkProtocolExtension*) serialize to a stream
class tt__NetworkProtocolExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
/// class tt__NetworkHost operations:
/// - soap_new_tt__NetworkHost(soap*) allocate
/// - soap_new_tt__NetworkHost(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkHost(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkHost(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkHost(soap*, tt__NetworkHost*) deserialize from a stream
/// - int soap_write_tt__NetworkHost(soap, tt__NetworkHost*) serialize to a stream
class tt__NetworkHost
{ public:
/// @brief Network host type: IPv4, IPv6 or DNS.
/// Element Type of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address.
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// @brief DNS name.
/// Element DNSname of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         DNSname                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    tt__NetworkHostExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
/// class tt__NetworkHostExtension operations:
/// - soap_new_tt__NetworkHostExtension(soap*) allocate
/// - soap_new_tt__NetworkHostExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkHostExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkHostExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkHostExtension(soap, tt__NetworkHostExtension*) serialize to a stream
class tt__NetworkHostExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
/// class tt__IPAddress operations:
/// - soap_new_tt__IPAddress(soap*) allocate
/// - soap_new_tt__IPAddress(soap*, int num) allocate array
/// - soap_new_req_tt__IPAddress(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPAddress(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPAddress(soap*, tt__IPAddress*) deserialize from a stream
/// - int soap_write_tt__IPAddress(soap, tt__IPAddress*) serialize to a stream
class tt__IPAddress
{ public:
/// @brief Indicates if the address is an IPv4 or IPv6 address.
/// Element Type of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
/// class tt__PrefixedIPv4Address operations:
/// - soap_new_tt__PrefixedIPv4Address(soap*) allocate
/// - soap_new_tt__PrefixedIPv4Address(soap*, int num) allocate array
/// - soap_new_req_tt__PrefixedIPv4Address(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PrefixedIPv4Address(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv4Address(soap, tt__PrefixedIPv4Address*) serialize to a stream
class tt__PrefixedIPv4Address
{ public:
/// @brief IPv4 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
/// class tt__PrefixedIPv6Address operations:
/// - soap_new_tt__PrefixedIPv6Address(soap*) allocate
/// - soap_new_tt__PrefixedIPv6Address(soap*, int num) allocate array
/// - soap_new_req_tt__PrefixedIPv6Address(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PrefixedIPv6Address(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv6Address(soap, tt__PrefixedIPv6Address*) serialize to a stream
class tt__PrefixedIPv6Address
{ public:
/// @brief IPv6 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
/// class tt__HostnameInformation operations:
/// - soap_new_tt__HostnameInformation(soap*) allocate
/// - soap_new_tt__HostnameInformation(soap*, int num) allocate array
/// - soap_new_req_tt__HostnameInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__HostnameInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__HostnameInformation(soap*, tt__HostnameInformation*) deserialize from a stream
/// - int soap_write_tt__HostnameInformation(soap, tt__HostnameInformation*) serialize to a stream
class tt__HostnameInformation
{ public:
/// @brief Indicates whether the hostname is obtained from DHCP or not.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Indicates the hostname.
/// Element Name of type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    tt__HostnameInformationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
/// class tt__HostnameInformationExtension operations:
/// - soap_new_tt__HostnameInformationExtension(soap*) allocate
/// - soap_new_tt__HostnameInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__HostnameInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__HostnameInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) deserialize from a stream
/// - int soap_write_tt__HostnameInformationExtension(soap, tt__HostnameInformationExtension*) serialize to a stream
class tt__HostnameInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
/// class tt__DNSInformation operations:
/// - soap_new_tt__DNSInformation(soap*) allocate
/// - soap_new_tt__DNSInformation(soap*, int num) allocate array
/// - soap_new_req_tt__DNSInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DNSInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DNSInformation(soap*, tt__DNSInformation*) deserialize from a stream
/// - int soap_write_tt__DNSInformation(soap, tt__DNSInformation*) serialize to a stream
class tt__DNSInformation
{ public:
/// @brief Indicates whether or not DNS information is retrieved from DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Search domain.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// @brief List of DNS addresses received from DHCP.
/// Vector of tt__IPAddress* with length 0..unbounded
    std::vector<tt__IPAddress*         > DNSFromDHCP                    0;
/// @brief List of manually entered DNS addresses.
/// Vector of tt__IPAddress* with length 0..unbounded
    std::vector<tt__IPAddress*         > DNSManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    tt__DNSInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
/// class tt__DNSInformationExtension operations:
/// - soap_new_tt__DNSInformationExtension(soap*) allocate
/// - soap_new_tt__DNSInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DNSInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DNSInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DNSInformationExtension(soap, tt__DNSInformationExtension*) serialize to a stream
class tt__DNSInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
/// class tt__NTPInformation operations:
/// - soap_new_tt__NTPInformation(soap*) allocate
/// - soap_new_tt__NTPInformation(soap*, int num) allocate array
/// - soap_new_req_tt__NTPInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NTPInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NTPInformation(soap*, tt__NTPInformation*) deserialize from a stream
/// - int soap_write_tt__NTPInformation(soap, tt__NTPInformation*) serialize to a stream
class tt__NTPInformation
{ public:
/// @brief Indicates if NTP information is to be retrieved by using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief List of NTP addresses retrieved by using DHCP.
/// Vector of tt__NetworkHost* with length 0..unbounded
    std::vector<tt__NetworkHost*       > NTPFromDHCP                    0;
/// @brief List of manually entered NTP addresses.
/// Vector of tt__NetworkHost* with length 0..unbounded
    std::vector<tt__NetworkHost*       > NTPManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    tt__NTPInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
/// class tt__NTPInformationExtension operations:
/// - soap_new_tt__NTPInformationExtension(soap*) allocate
/// - soap_new_tt__NTPInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NTPInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NTPInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) deserialize from a stream
/// - int soap_write_tt__NTPInformationExtension(soap, tt__NTPInformationExtension*) serialize to a stream
class tt__NTPInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
/// class tt__DynamicDNSInformation operations:
/// - soap_new_tt__DynamicDNSInformation(soap*) allocate
/// - soap_new_tt__DynamicDNSInformation(soap*, int num) allocate array
/// - soap_new_req_tt__DynamicDNSInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DynamicDNSInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformation(soap, tt__DynamicDNSInformation*) serialize to a stream
class tt__DynamicDNSInformation
{ public:
/// @brief Dynamic DNS type.
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// @brief DNS name.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// @brief Time to live.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
/// class tt__DynamicDNSInformationExtension operations:
/// - soap_new_tt__DynamicDNSInformationExtension(soap*) allocate
/// - soap_new_tt__DynamicDNSInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformationExtension(soap, tt__DynamicDNSInformationExtension*) serialize to a stream
class tt__DynamicDNSInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
/// class tt__NetworkInterfaceSetConfiguration operations:
/// - soap_new_tt__NetworkInterfaceSetConfiguration(soap*) allocate
/// - soap_new_tt__NetworkInterfaceSetConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(soap, tt__NetworkInterfaceSetConfiguration*) serialize to a stream
class tt__NetworkInterfaceSetConfiguration
{ public:
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
/// class tt__NetworkInterfaceSetConfigurationExtension operations:
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*) allocate
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a stream
class tt__NetworkInterfaceSetConfigurationExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Vector of tt__Dot3Configuration* with length 0..unbounded
    std::vector<tt__Dot3Configuration* > Dot3                           0;
/// Vector of tt__Dot11Configuration* with length 0..unbounded
    std::vector<tt__Dot11Configuration*> Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
/// class tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*) allocate
/// - soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a stream
class tt__IPv6NetworkInterfaceSetConfiguration
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief List of manually added IPv6 addresses.
/// Vector of tt__PrefixedIPv6Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
/// class tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*) allocate
/// - soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a stream
class tt__IPv4NetworkInterfaceSetConfiguration
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief List of manually added IPv4 addresses.
/// Vector of tt__PrefixedIPv4Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
/// class tt__NetworkGateway operations:
/// - soap_new_tt__NetworkGateway(soap*) allocate
/// - soap_new_tt__NetworkGateway(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkGateway(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkGateway(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkGateway(soap*, tt__NetworkGateway*) deserialize from a stream
/// - int soap_write_tt__NetworkGateway(soap, tt__NetworkGateway*) serialize to a stream
class tt__NetworkGateway
{ public:
/// @brief IPv4 address string.
/// Vector of tt__IPv4Address with length 0..unbounded
    std::vector<tt__IPv4Address        > IPv4Address                    0;
/// @brief IPv6 address string.
/// Vector of tt__IPv6Address with length 0..unbounded
    std::vector<tt__IPv6Address        > IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
/// class tt__NetworkZeroConfiguration operations:
/// - soap_new_tt__NetworkZeroConfiguration(soap*) allocate
/// - soap_new_tt__NetworkZeroConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkZeroConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkZeroConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfiguration(soap, tt__NetworkZeroConfiguration*) serialize to a stream
class tt__NetworkZeroConfiguration
{ public:
/// @brief Unique identifier of network interface.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// @brief Indicates whether the zero-configuration is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The zero-configuration IPv4 address(es)
/// Vector of tt__IPv4Address with length 0..unbounded
    std::vector<tt__IPv4Address        > Addresses                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
/// class tt__NetworkZeroConfigurationExtension operations:
/// - soap_new_tt__NetworkZeroConfigurationExtension(soap*) allocate
/// - soap_new_tt__NetworkZeroConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension(soap, tt__NetworkZeroConfigurationExtension*) serialize to a stream
class tt__NetworkZeroConfigurationExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional array holding the configuration for the second and possibly further interfaces.
/// Vector of tt__NetworkZeroConfiguration* with length 0..unbounded
    std::vector<tt__NetworkZeroConfiguration*> Additional                     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
/// class tt__NetworkZeroConfigurationExtension2 operations:
/// - soap_new_tt__NetworkZeroConfigurationExtension2(soap*) allocate
/// - soap_new_tt__NetworkZeroConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(soap, tt__NetworkZeroConfigurationExtension2*) serialize to a stream
class tt__NetworkZeroConfigurationExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
/// class tt__IPAddressFilter operations:
/// - soap_new_tt__IPAddressFilter(soap*) allocate
/// - soap_new_tt__IPAddressFilter(soap*, int num) allocate array
/// - soap_new_req_tt__IPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilter(soap, tt__IPAddressFilter*) serialize to a stream
class tt__IPAddressFilter
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Vector of tt__PrefixedIPv4Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv4Address*> IPv4Address                    0;
/// Vector of tt__PrefixedIPv6Address* with length 0..unbounded
    std::vector<tt__PrefixedIPv6Address*> IPv6Address                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    tt__IPAddressFilterExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
/// class tt__IPAddressFilterExtension operations:
/// - soap_new_tt__IPAddressFilterExtension(soap*) allocate
/// - soap_new_tt__IPAddressFilterExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IPAddressFilterExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IPAddressFilterExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilterExtension(soap, tt__IPAddressFilterExtension*) serialize to a stream
class tt__IPAddressFilterExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
/// class tt__Dot11Configuration operations:
/// - soap_new_tt__Dot11Configuration(soap*) allocate
/// - soap_new_tt__Dot11Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot11Configuration(soap, tt__Dot11Configuration*) serialize to a stream
class tt__Dot11Configuration
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element Alias of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element Priority of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element Security of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    tt__Dot11SecurityConfiguration*      Security                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
/// class tt__Dot11SecurityConfiguration operations:
/// - soap_new_tt__Dot11SecurityConfiguration(soap*) allocate
/// - soap_new_tt__Dot11SecurityConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfiguration(soap, tt__Dot11SecurityConfiguration*) serialize to a stream
class tt__Dot11SecurityConfiguration
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element Algorithm of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element PSK of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    tt__Dot11PSKSet*                     PSK                            0;	///< Optional element.
/// Element Dot1X of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Dot1X                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
/// class tt__Dot11SecurityConfigurationExtension operations:
/// - soap_new_tt__Dot11SecurityConfigurationExtension(soap*) allocate
/// - soap_new_tt__Dot11SecurityConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(soap, tt__Dot11SecurityConfigurationExtension*) serialize to a stream
class tt__Dot11SecurityConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
/// class tt__Dot11PSKSet operations:
/// - soap_new_tt__Dot11PSKSet(soap*) allocate
/// - soap_new_tt__Dot11PSKSet(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11PSKSet(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11PSKSet(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSet(soap, tt__Dot11PSKSet*) serialize to a stream
class tt__Dot11PSKSet
{ public:
/// @brief According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/> Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// Element Key of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// @brief According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/> If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// Element Passphrase of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase*              Passphrase                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    tt__Dot11PSKSetExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
/// class tt__Dot11PSKSetExtension operations:
/// - soap_new_tt__Dot11PSKSetExtension(soap*) allocate
/// - soap_new_tt__Dot11PSKSetExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11PSKSetExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11PSKSetExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSetExtension(soap, tt__Dot11PSKSetExtension*) serialize to a stream
class tt__Dot11PSKSetExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
/// class tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*) allocate
/// - soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a stream
class tt__NetworkInterfaceSetConfigurationExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
/// class tt__Dot11Capabilities operations:
/// - soap_new_tt__Dot11Capabilities(soap*) allocate
/// - soap_new_tt__Dot11Capabilities(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) deserialize from a stream
/// - int soap_write_tt__Dot11Capabilities(soap, tt__Dot11Capabilities*) serialize to a stream
class tt__Dot11Capabilities
{ public:
/// Element TKIP of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element ScanAvailableNetworks of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element MultipleConfiguration of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element AdHocStationMode of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element WEP of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
/// class tt__Dot11Status operations:
/// - soap_new_tt__Dot11Status(soap*) allocate
/// - soap_new_tt__Dot11Status(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11Status(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11Status(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11Status(soap*, tt__Dot11Status*) deserialize from a stream
/// - int soap_write_tt__Dot11Status(soap, tt__Dot11Status*) serialize to a stream
class tt__Dot11Status
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Element PairCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element GroupCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element ActiveConfigAlias of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
/// class tt__Dot11AvailableNetworks operations:
/// - soap_new_tt__Dot11AvailableNetworks(soap*) allocate
/// - soap_new_tt__Dot11AvailableNetworks(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11AvailableNetworks(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11AvailableNetworks(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworks(soap, tt__Dot11AvailableNetworks*) serialize to a stream
class tt__Dot11AvailableNetworks
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// @brief See IEEE802.11 7.3.2.25.2 for details.
/// Vector of enum tt__Dot11AuthAndMangementSuite with length 0..unbounded
    std::vector<enum tt__Dot11AuthAndMangementSuite> AuthAndMangementSuite          0;
/// Vector of enum tt__Dot11Cipher with length 0..unbounded
    std::vector<enum tt__Dot11Cipher   > PairCipher                     0;
/// Vector of enum tt__Dot11Cipher with length 0..unbounded
    std::vector<enum tt__Dot11Cipher   > GroupCipher                    0;
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
/// class tt__Dot11AvailableNetworksExtension operations:
/// - soap_new_tt__Dot11AvailableNetworksExtension(soap*) allocate
/// - soap_new_tt__Dot11AvailableNetworksExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworksExtension(soap, tt__Dot11AvailableNetworksExtension*) serialize to a stream
class tt__Dot11AvailableNetworksExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
/// class tt__Capabilities operations:
/// - soap_new_tt__Capabilities(soap*) allocate
/// - soap_new_tt__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tt__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Capabilities(soap*, tt__Capabilities*) deserialize from a stream
/// - int soap_write_tt__Capabilities(soap, tt__Capabilities*) serialize to a stream
class tt__Capabilities
{ public:
/// @brief Analytics capabilities
/// Element Analytics of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    tt__AnalyticsCapabilities*           Analytics                      0;	///< Optional element.
/// @brief Device capabilities
/// Element Device of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    tt__DeviceCapabilities*              Device                         0;	///< Optional element.
/// @brief Event capabilities
/// Element Events of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    tt__EventCapabilities*               Events                         0;	///< Optional element.
/// @brief Imaging capabilities
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    tt__ImagingCapabilities*             Imaging                        0;	///< Optional element.
/// @brief Media capabilities
/// Element Media of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    tt__MediaCapabilities*               Media                          0;	///< Optional element.
/// @brief PTZ capabilities
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    tt__PTZCapabilities*                 PTZ                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    tt__CapabilitiesExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
/// class tt__CapabilitiesExtension operations:
/// - soap_new_tt__CapabilitiesExtension(soap*) allocate
/// - soap_new_tt__CapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__CapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension(soap, tt__CapabilitiesExtension*) serialize to a stream
class tt__CapabilitiesExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element DeviceIO of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    tt__DeviceIOCapabilities*            DeviceIO                       0;	///< Optional element.
/// Element Display of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    tt__DisplayCapabilities*             Display                        0;	///< Optional element.
/// Element Recording of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    tt__RecordingCapabilities*           Recording                      0;	///< Optional element.
/// Element Search of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    tt__SearchCapabilities*              Search                         0;	///< Optional element.
/// Element Replay of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    tt__ReplayCapabilities*              Replay                         0;	///< Optional element.
/// Element Receiver of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    tt__ReceiverCapabilities*            Receiver                       0;	///< Optional element.
/// Element AnalyticsDevice of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    tt__AnalyticsDeviceCapabilities*     AnalyticsDevice                0;	///< Optional element.
/// Element Extensions of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    tt__CapabilitiesExtension2*          Extensions                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
/// class tt__CapabilitiesExtension2 operations:
/// - soap_new_tt__CapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__CapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__CapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension2(soap, tt__CapabilitiesExtension2*) serialize to a stream
class tt__CapabilitiesExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
/// class tt__AnalyticsCapabilities operations:
/// - soap_new_tt__AnalyticsCapabilities(soap*) allocate
/// - soap_new_tt__AnalyticsCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsCapabilities(soap, tt__AnalyticsCapabilities*) serialize to a stream
class tt__AnalyticsCapabilities
{ public:
/// @brief Analytics service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not rules are supported.
/// Element RuleSupport of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// @brief Indicates whether or not modules are supported.
/// Element AnalyticsModuleSupport of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
/// class tt__DeviceCapabilities operations:
/// - soap_new_tt__DeviceCapabilities(soap*) allocate
/// - soap_new_tt__DeviceCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilities(soap, tt__DeviceCapabilities*) serialize to a stream
class tt__DeviceCapabilities
{ public:
/// @brief Device service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Network capabilities.
/// Element Network of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    tt__NetworkCapabilities*             Network                        0;	///< Optional element.
/// @brief System capabilities.
/// Element System of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    tt__SystemCapabilities*              System                         0;	///< Optional element.
/// @brief I/O capabilities.
/// Element IO of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    tt__IOCapabilities*                  IO                             0;	///< Optional element.
/// @brief Security capabilities.
/// Element Security of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    tt__SecurityCapabilities*            Security                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    tt__DeviceCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
/// class tt__DeviceCapabilitiesExtension operations:
/// - soap_new_tt__DeviceCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__DeviceCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilitiesExtension(soap, tt__DeviceCapabilitiesExtension*) serialize to a stream
class tt__DeviceCapabilitiesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
/// class tt__EventCapabilities operations:
/// - soap_new_tt__EventCapabilities(soap*) allocate
/// - soap_new_tt__EventCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__EventCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventCapabilities(soap*, tt__EventCapabilities*) deserialize from a stream
/// - int soap_write_tt__EventCapabilities(soap, tt__EventCapabilities*) serialize to a stream
class tt__EventCapabilities
{ public:
/// @brief Event service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not WS Subscription policy is supported.
/// Element WSSubscriptionPolicySupport of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// @brief Indicates whether or not WS Pull Point is supported.
/// Element WSPullPointSupport of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// @brief Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// Element WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
/// class tt__IOCapabilities operations:
/// - soap_new_tt__IOCapabilities(soap*) allocate
/// - soap_new_tt__IOCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__IOCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IOCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IOCapabilities(soap*, tt__IOCapabilities*) deserialize from a stream
/// - int soap_write_tt__IOCapabilities(soap, tt__IOCapabilities*) serialize to a stream
class tt__IOCapabilities
{ public:
/// @brief Number of input connectors.
/// Element InputConnectors of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// @brief Number of relay outputs.
/// Element RelayOutputs of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    tt__IOCapabilitiesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
/// class tt__IOCapabilitiesExtension operations:
/// - soap_new_tt__IOCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__IOCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IOCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IOCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension(soap, tt__IOCapabilitiesExtension*) serialize to a stream
class tt__IOCapabilitiesExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Auxiliary of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Vector of tt__AuxiliaryData with length 0..unbounded
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    tt__IOCapabilitiesExtension2*        Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
/// class tt__IOCapabilitiesExtension2 operations:
/// - soap_new_tt__IOCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__IOCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension2(soap, tt__IOCapabilitiesExtension2*) serialize to a stream
class tt__IOCapabilitiesExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
/// class tt__MediaCapabilities operations:
/// - soap_new_tt__MediaCapabilities(soap*) allocate
/// - soap_new_tt__MediaCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__MediaCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilities(soap, tt__MediaCapabilities*) serialize to a stream
class tt__MediaCapabilities
{ public:
/// @brief Media service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Streaming capabilities.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    tt__RealTimeStreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    tt__MediaCapabilitiesExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
/// class tt__MediaCapabilitiesExtension operations:
/// - soap_new_tt__MediaCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__MediaCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilitiesExtension(soap, tt__MediaCapabilitiesExtension*) serialize to a stream
class tt__MediaCapabilitiesExtension
{ public:
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    tt__ProfileCapabilities*             ProfileCapabilities            1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
/// class tt__RealTimeStreamingCapabilities operations:
/// - soap_new_tt__RealTimeStreamingCapabilities(soap*) allocate
/// - soap_new_tt__RealTimeStreamingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilities(soap, tt__RealTimeStreamingCapabilities*) serialize to a stream
class tt__RealTimeStreamingCapabilities
{ public:
/// @brief Indicates whether or not RTP multicast is supported.
/// Element RTPMulticast of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// @brief Indicates whether or not RTP over TCP is supported.
/// Element RTP_TCP of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// @brief Indicates whether or not RTP/RTSP/TCP is supported.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
/// class tt__RealTimeStreamingCapabilitiesExtension operations:
/// - soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a stream
class tt__RealTimeStreamingCapabilitiesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
/// class tt__ProfileCapabilities operations:
/// - soap_new_tt__ProfileCapabilities(soap*) allocate
/// - soap_new_tt__ProfileCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_tt__ProfileCapabilities(soap, tt__ProfileCapabilities*) serialize to a stream
class tt__ProfileCapabilities
{ public:
/// @brief Maximum number of profiles.
/// Element MaximumNumberOfProfiles of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
/// class tt__NetworkCapabilities operations:
/// - soap_new_tt__NetworkCapabilities(soap*) allocate
/// - soap_new_tt__NetworkCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilities(soap, tt__NetworkCapabilities*) serialize to a stream
class tt__NetworkCapabilities
{ public:
/// @brief Indicates whether or not IP filtering is supported.
/// Element IPFilter of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// @brief Indicates whether or not zeroconf is supported.
/// Element ZeroConfiguration of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// @brief Indicates whether or not IPv6 is supported.
/// Element IPVersion6 of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// @brief Indicates whether or not is supported.
/// Element DynDNS of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    tt__NetworkCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
/// class tt__NetworkCapabilitiesExtension operations:
/// - soap_new_tt__NetworkCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__NetworkCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension(soap, tt__NetworkCapabilitiesExtension*) serialize to a stream
class tt__NetworkCapabilitiesExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Dot11Configuration of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    tt__NetworkCapabilitiesExtension2*   Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
/// class tt__NetworkCapabilitiesExtension2 operations:
/// - soap_new_tt__NetworkCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__NetworkCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension2(soap, tt__NetworkCapabilitiesExtension2*) serialize to a stream
class tt__NetworkCapabilitiesExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
/// class tt__SecurityCapabilities operations:
/// - soap_new_tt__SecurityCapabilities(soap*) allocate
/// - soap_new_tt__SecurityCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__SecurityCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilities(soap, tt__SecurityCapabilities*) serialize to a stream
class tt__SecurityCapabilities
{ public:
/// @brief Indicates whether or not TLS 1.1 is supported.
/// Element TLS1.1 of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// @brief Indicates whether or not TLS 1.2 is supported.
/// Element TLS1.2 of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// @brief Indicates whether or not onboard key generation is supported.
/// Element OnboardKeyGeneration of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// @brief Indicates whether or not access policy configuration is supported.
/// Element AccessPolicyConfig of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// @brief Indicates whether or not WS-Security X.509 token is supported.
/// Element X.509Token of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// @brief Indicates whether or not WS-Security SAML token is supported.
/// Element SAMLToken of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// @brief Indicates whether or not WS-Security Kerberos token is supported.
/// Element KerberosToken of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// @brief Indicates whether or not WS-Security REL token is supported.
/// Element RELToken of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    tt__SecurityCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
/// class tt__SecurityCapabilitiesExtension operations:
/// - soap_new_tt__SecurityCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__SecurityCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension(soap, tt__SecurityCapabilitiesExtension*) serialize to a stream
class tt__SecurityCapabilitiesExtension
{ public:
/// Element TLS1.0 of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
/// class tt__SecurityCapabilitiesExtension2 operations:
/// - soap_new_tt__SecurityCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__SecurityCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension2(soap, tt__SecurityCapabilitiesExtension2*) serialize to a stream
class tt__SecurityCapabilitiesExtension2
{ public:
/// Element Dot1X of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// @brief EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Vector of int with length 0..unbounded
    std::vector<int                    > SupportedEAPMethod             0;
/// Element RemoteUserHandling of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
/// class tt__SystemCapabilities operations:
/// - soap_new_tt__SystemCapabilities(soap*) allocate
/// - soap_new_tt__SystemCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__SystemCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilities(soap, tt__SystemCapabilities*) serialize to a stream
class tt__SystemCapabilities
{ public:
/// @brief Indicates whether or not WS Discovery resolve requests are supported.
/// Element DiscoveryResolve of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// @brief Indicates whether or not WS-Discovery Bye is supported.
/// Element DiscoveryBye of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// @brief Indicates whether or not remote discovery is supported.
/// Element RemoteDiscovery of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// @brief Indicates whether or not system backup is supported.
/// Element SystemBackup of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// @brief Indicates whether or not system logging is supported.
/// Element SystemLogging of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// @brief Indicates whether or not firmware upgrade is supported.
/// Element FirmwareUpgrade of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// @brief Indicates supported ONVIF version(s).
/// Vector of tt__OnvifVersion* with length 1..unbounded
    std::vector<tt__OnvifVersion*      > SupportedVersions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    tt__SystemCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
/// class tt__SystemCapabilitiesExtension operations:
/// - soap_new_tt__SystemCapabilitiesExtension(soap*) allocate
/// - soap_new_tt__SystemCapabilitiesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension(soap, tt__SystemCapabilitiesExtension*) serialize to a stream
class tt__SystemCapabilitiesExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element HttpFirmwareUpgrade of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element HttpSystemBackup of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element HttpSystemLogging of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element HttpSupportInformation of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    tt__SystemCapabilitiesExtension2*    Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
/// class tt__SystemCapabilitiesExtension2 operations:
/// - soap_new_tt__SystemCapabilitiesExtension2(soap*) allocate
/// - soap_new_tt__SystemCapabilitiesExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension2(soap, tt__SystemCapabilitiesExtension2*) serialize to a stream
class tt__SystemCapabilitiesExtension2
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
/// class tt__OnvifVersion operations:
/// - soap_new_tt__OnvifVersion(soap*) allocate
/// - soap_new_tt__OnvifVersion(soap*, int num) allocate array
/// - soap_new_req_tt__OnvifVersion(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OnvifVersion(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OnvifVersion(soap*, tt__OnvifVersion*) deserialize from a stream
/// - int soap_write_tt__OnvifVersion(soap, tt__OnvifVersion*) serialize to a stream
class tt__OnvifVersion
{ public:
/// @brief Major version number.
/// Element Major of type xs:int.
    int                                  Major                          1;	///< Required element.
/// @brief Two digit minor version number. If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number. Otherwise, minor number is month of release, such as "06" for June.
/// Element Minor of type xs:int.
    int                                  Minor                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
/// class tt__ImagingCapabilities operations:
/// - soap_new_tt__ImagingCapabilities(soap*) allocate
/// - soap_new_tt__ImagingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) deserialize from a stream
/// - int soap_write_tt__ImagingCapabilities(soap, tt__ImagingCapabilities*) serialize to a stream
class tt__ImagingCapabilities
{ public:
/// @brief Imaging service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
/// class tt__PTZCapabilities operations:
/// - soap_new_tt__PTZCapabilities(soap*) allocate
/// - soap_new_tt__PTZCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__PTZCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) deserialize from a stream
/// - int soap_write_tt__PTZCapabilities(soap, tt__PTZCapabilities*) serialize to a stream
class tt__PTZCapabilities
{ public:
/// @brief PTZ service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
/// class tt__DeviceIOCapabilities operations:
/// - soap_new_tt__DeviceIOCapabilities(soap*) allocate
/// - soap_new_tt__DeviceIOCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__DeviceIOCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DeviceIOCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceIOCapabilities(soap, tt__DeviceIOCapabilities*) serialize to a stream
class tt__DeviceIOCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element VideoSources of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element VideoOutputs of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element AudioSources of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element AudioOutputs of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element RelayOutputs of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
/// class tt__DisplayCapabilities operations:
/// - soap_new_tt__DisplayCapabilities(soap*) allocate
/// - soap_new_tt__DisplayCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__DisplayCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DisplayCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__DisplayCapabilities(soap, tt__DisplayCapabilities*) serialize to a stream
class tt__DisplayCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indication that the SetLayout command supports only predefined layouts.
/// Element FixedLayout of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
/// class tt__RecordingCapabilities operations:
/// - soap_new_tt__RecordingCapabilities(soap*) allocate
/// - soap_new_tt__RecordingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RecordingCapabilities(soap, tt__RecordingCapabilities*) serialize to a stream
class tt__RecordingCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element ReceiverSource of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element MediaProfileSource of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element DynamicRecordings of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element DynamicTracks of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element MaxStringLength of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
/// class tt__SearchCapabilities operations:
/// - soap_new_tt__SearchCapabilities(soap*) allocate
/// - soap_new_tt__SearchCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__SearchCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SearchCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) deserialize from a stream
/// - int soap_write_tt__SearchCapabilities(soap, tt__SearchCapabilities*) serialize to a stream
class tt__SearchCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element MetadataSearch of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
/// class tt__ReplayCapabilities operations:
/// - soap_new_tt__ReplayCapabilities(soap*) allocate
/// - soap_new_tt__ReplayCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ReplayCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReplayCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReplayCapabilities(soap, tt__ReplayCapabilities*) serialize to a stream
class tt__ReplayCapabilities
{ public:
/// @brief The address of the replay service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
/// class tt__ReceiverCapabilities operations:
/// - soap_new_tt__ReceiverCapabilities(soap*) allocate
/// - soap_new_tt__ReceiverCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__ReceiverCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReceiverCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReceiverCapabilities(soap, tt__ReceiverCapabilities*) serialize to a stream
class tt__ReceiverCapabilities
{ public:
/// @brief The address of the receiver service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether the device can receive RTP multicast streams.
/// Element RTP_Multicast of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/TCP streams
/// Element RTP_TCP of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/RTSP/TCP streams.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// @brief The maximum number of receivers supported by the device.
/// Element SupportedReceivers of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// @brief The maximum allowed length for RTSP URIs.
/// Element MaximumRTSPURILength of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
/// class tt__AnalyticsDeviceCapabilities operations:
/// - soap_new_tt__AnalyticsDeviceCapabilities(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceCapabilities(soap, tt__AnalyticsDeviceCapabilities*) serialize to a stream
class tt__AnalyticsDeviceCapabilities
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Obsolete property.
/// Element RuleSupport of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    tt__AnalyticsDeviceExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
/// class tt__AnalyticsDeviceExtension operations:
/// - soap_new_tt__AnalyticsDeviceExtension(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceExtension(soap, tt__AnalyticsDeviceExtension*) serialize to a stream
class tt__AnalyticsDeviceExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
/// class tt__SystemLog operations:
/// - soap_new_tt__SystemLog(soap*) allocate
/// - soap_new_tt__SystemLog(soap*, int num) allocate array
/// - soap_new_req_tt__SystemLog(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemLog(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemLog(soap*, tt__SystemLog*) deserialize from a stream
/// - int soap_write_tt__SystemLog(soap, tt__SystemLog*) serialize to a stream
class tt__SystemLog
{ public:
/// @brief The log information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// @brief The log information as character data.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
/// class tt__SupportInformation operations:
/// - soap_new_tt__SupportInformation(soap*) allocate
/// - soap_new_tt__SupportInformation(soap*, int num) allocate array
/// - soap_new_req_tt__SupportInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportInformation(soap*, tt__SupportInformation*) deserialize from a stream
/// - int soap_write_tt__SupportInformation(soap, tt__SupportInformation*) serialize to a stream
class tt__SupportInformation
{ public:
/// @brief The support information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// @brief The support information as character data.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
/// class tt__BinaryData operations:
/// - soap_new_tt__BinaryData(soap*) allocate
/// - soap_new_tt__BinaryData(soap*, int num) allocate array
/// - soap_new_req_tt__BinaryData(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BinaryData(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BinaryData(soap*, tt__BinaryData*) deserialize from a stream
/// - int soap_write_tt__BinaryData(soap, tt__BinaryData*) serialize to a stream
class tt__BinaryData
{ public:
/// @brief base64 encoded binary data.
/// Element Data of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
/// class tt__AttachmentData operations:
/// - soap_new_tt__AttachmentData(soap*) allocate
/// - soap_new_tt__AttachmentData(soap*, int num) allocate array
/// - soap_new_req_tt__AttachmentData(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AttachmentData(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AttachmentData(soap*, tt__AttachmentData*) deserialize from a stream
/// - int soap_write_tt__AttachmentData(soap, tt__AttachmentData*) serialize to a stream
class tt__AttachmentData
{ public:
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
/// class tt__BackupFile operations:
/// - soap_new_tt__BackupFile(soap*) allocate
/// - soap_new_tt__BackupFile(soap*, int num) allocate array
/// - soap_new_req_tt__BackupFile(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BackupFile(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BackupFile(soap*, tt__BackupFile*) deserialize from a stream
/// - int soap_write_tt__BackupFile(soap, tt__BackupFile*) serialize to a stream
class tt__BackupFile
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element Data of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Data                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
/// class tt__SystemLogUriList operations:
/// - soap_new_tt__SystemLogUriList(soap*) allocate
/// - soap_new_tt__SystemLogUriList(soap*, int num) allocate array
/// - soap_new_req_tt__SystemLogUriList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemLogUriList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) deserialize from a stream
/// - int soap_write_tt__SystemLogUriList(soap, tt__SystemLogUriList*) serialize to a stream
class tt__SystemLogUriList
{ public:
/// Vector of tt__SystemLogUri* with length 0..unbounded
    std::vector<tt__SystemLogUri*      > SystemLog                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
/// class tt__SystemLogUri operations:
/// - soap_new_tt__SystemLogUri(soap*) allocate
/// - soap_new_tt__SystemLogUri(soap*, int num) allocate array
/// - soap_new_req_tt__SystemLogUri(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemLogUri(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemLogUri(soap*, tt__SystemLogUri*) deserialize from a stream
/// - int soap_write_tt__SystemLogUri(soap, tt__SystemLogUri*) serialize to a stream
class tt__SystemLogUri
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
/// @brief General date time inforamtion returned by the GetSystemDateTime method.
/// class tt__SystemDateTime operations:
/// - soap_new_tt__SystemDateTime(soap*) allocate
/// - soap_new_tt__SystemDateTime(soap*, int num) allocate array
/// - soap_new_req_tt__SystemDateTime(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemDateTime(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemDateTime(soap*, tt__SystemDateTime*) deserialize from a stream
/// - int soap_write_tt__SystemDateTime(soap, tt__SystemDateTime*) serialize to a stream
class tt__SystemDateTime
{ public:
/// @brief Indicates if the time is set manully or through NTP.
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// @brief Informative indicator whether daylight savings is currently on/off.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// @brief Timezone information in Posix format.
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// @brief Current system date and time in UTC format. This field is mandatory since version 2.0.
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// @brief Date and time in local format.
/// Element LocalDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        LocalDateTime                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    tt__SystemDateTimeExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
/// class tt__SystemDateTimeExtension operations:
/// - soap_new_tt__SystemDateTimeExtension(soap*) allocate
/// - soap_new_tt__SystemDateTimeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SystemDateTimeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SystemDateTimeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) deserialize from a stream
/// - int soap_write_tt__SystemDateTimeExtension(soap, tt__SystemDateTimeExtension*) serialize to a stream
class tt__SystemDateTimeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DateTime is a complexType.
/// class tt__DateTime operations:
/// - soap_new_tt__DateTime(soap*) allocate
/// - soap_new_tt__DateTime(soap*, int num) allocate array
/// - soap_new_req_tt__DateTime(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DateTime(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DateTime(soap*, tt__DateTime*) deserialize from a stream
/// - int soap_write_tt__DateTime(soap, tt__DateTime*) serialize to a stream
class tt__DateTime
{ public:
/// Element Time of type "http://www.onvif.org/ver10/schema":Time.
    tt__Time*                            Time                           1;	///< Required element.
/// Element Date of type "http://www.onvif.org/ver10/schema":Date.
    tt__Date*                            Date                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Date is a complexType.
/// class tt__Date operations:
/// - soap_new_tt__Date(soap*) allocate
/// - soap_new_tt__Date(soap*, int num) allocate array
/// - soap_new_req_tt__Date(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Date(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Date(soap*, tt__Date*) deserialize from a stream
/// - int soap_write_tt__Date(soap, tt__Date*) serialize to a stream
class tt__Date
{ public:
/// Element Year of type xs:int.
    int                                  Year                           1;	///< Required element.
/// @brief Range is 1 to 12.
/// Element Month of type xs:int.
    int                                  Month                          1;	///< Required element.
/// @brief Range is 1 to 31.
/// Element Day of type xs:int.
    int                                  Day                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Time is a complexType.
/// class tt__Time operations:
/// - soap_new_tt__Time(soap*) allocate
/// - soap_new_tt__Time(soap*, int num) allocate array
/// - soap_new_req_tt__Time(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Time(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Time(soap*, tt__Time*) deserialize from a stream
/// - int soap_write_tt__Time(soap, tt__Time*) serialize to a stream
class tt__Time
{ public:
/// @brief Range is 0 to 23.
/// Element Hour of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// @brief Range is 0 to 59.
/// Element Minute of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// @brief Range is 0 to 61 (typically 59).
/// Element Second of type xs:int.
    int                                  Second                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
/// @brief The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/> Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/> CET = designation for standard time when daylight saving is not in force<br/> -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/> CEST = designation when daylight saving is in force ("Central European Summer Time")<br/> , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/> M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/> /2, = the local time when the switch occurs = 2 a.m. in this case<br/> M10.5.0 = when daylight saving ends = the last Sunday in October.<br/> /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// class tt__TimeZone operations:
/// - soap_new_tt__TimeZone(soap*) allocate
/// - soap_new_tt__TimeZone(soap*, int num) allocate array
/// - soap_new_req_tt__TimeZone(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TimeZone(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TimeZone(soap*, tt__TimeZone*) deserialize from a stream
/// - int soap_write_tt__TimeZone(soap, tt__TimeZone*) serialize to a stream
class tt__TimeZone
{ public:
/// @brief Posix timezone string.
/// Element TZ of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
/// class tt__RemoteUser operations:
/// - soap_new_tt__RemoteUser(soap*) allocate
/// - soap_new_tt__RemoteUser(soap*, int num) allocate array
/// - soap_new_req_tt__RemoteUser(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RemoteUser(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RemoteUser(soap*, tt__RemoteUser*) deserialize from a stream
/// - int soap_write_tt__RemoteUser(soap, tt__RemoteUser*) serialize to a stream
class tt__RemoteUser
{ public:
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element UseDerivedPassword of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":User is a complexType.
/// class tt__User operations:
/// - soap_new_tt__User(soap*) allocate
/// - soap_new_tt__User(soap*, int num) allocate array
/// - soap_new_req_tt__User(soap*, ...) allocate, set required members
/// - soap_new_set_tt__User(soap*, ...) allocate, set all public members
/// - int soap_read_tt__User(soap*, tt__User*) deserialize from a stream
/// - int soap_write_tt__User(soap, tt__User*) serialize to a stream
class tt__User
{ public:
/// @brief Username string.
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// @brief Password string.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// @brief User level string.
/// Element UserLevel of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":UserExtension.
    tt__UserExtension*                   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
/// class tt__UserExtension operations:
/// - soap_new_tt__UserExtension(soap*) allocate
/// - soap_new_tt__UserExtension(soap*, int num) allocate array
/// - soap_new_req_tt__UserExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__UserExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__UserExtension(soap*, tt__UserExtension*) deserialize from a stream
/// - int soap_write_tt__UserExtension(soap, tt__UserExtension*) serialize to a stream
class tt__UserExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
/// class tt__CertificateGenerationParameters operations:
/// - soap_new_tt__CertificateGenerationParameters(soap*) allocate
/// - soap_new_tt__CertificateGenerationParameters(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateGenerationParameters(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateGenerationParameters(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateGenerationParameters(soap*, tt__CertificateGenerationParameters*) deserialize from a stream
/// - int soap_write_tt__CertificateGenerationParameters(soap, tt__CertificateGenerationParameters*) serialize to a stream
class tt__CertificateGenerationParameters
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element ValidNotBefore of type xs:token.
    xsd__token*                          ValidNotBefore                 0;	///< Optional element.
/// Element ValidNotAfter of type xs:token.
    xsd__token*                          ValidNotAfter                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
/// class tt__CertificateGenerationParametersExtension operations:
/// - soap_new_tt__CertificateGenerationParametersExtension(soap*) allocate
/// - soap_new_tt__CertificateGenerationParametersExtension(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateGenerationParametersExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateGenerationParametersExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateGenerationParametersExtension(soap*, tt__CertificateGenerationParametersExtension*) deserialize from a stream
/// - int soap_write_tt__CertificateGenerationParametersExtension(soap, tt__CertificateGenerationParametersExtension*) serialize to a stream
class tt__CertificateGenerationParametersExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Certificate is a complexType.
/// class tt__Certificate operations:
/// - soap_new_tt__Certificate(soap*) allocate
/// - soap_new_tt__Certificate(soap*, int num) allocate array
/// - soap_new_req_tt__Certificate(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Certificate(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Certificate(soap*, tt__Certificate*) deserialize from a stream
/// - int soap_write_tt__Certificate(soap, tt__Certificate*) serialize to a stream
class tt__Certificate
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief base64 encoded DER representation of certificate.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
/// class tt__CertificateStatus operations:
/// - soap_new_tt__CertificateStatus(soap*) allocate
/// - soap_new_tt__CertificateStatus(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateStatus(soap*, tt__CertificateStatus*) deserialize from a stream
/// - int soap_write_tt__CertificateStatus(soap, tt__CertificateStatus*) serialize to a stream
class tt__CertificateStatus
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief Indicates whether or not a certificate is used in a HTTPS configuration.
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
/// class tt__CertificateWithPrivateKey operations:
/// - soap_new_tt__CertificateWithPrivateKey(soap*) allocate
/// - soap_new_tt__CertificateWithPrivateKey(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write_tt__CertificateWithPrivateKey(soap, tt__CertificateWithPrivateKey*) serialize to a stream
class tt__CertificateWithPrivateKey
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Element PrivateKey of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PrivateKey                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
/// class tt__CertificateInformation operations:
/// - soap_new_tt__CertificateInformation(soap*) allocate
/// - soap_new_tt__CertificateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateInformation(soap*, tt__CertificateInformation*) deserialize from a stream
/// - int soap_write_tt__CertificateInformation(soap, tt__CertificateInformation*) serialize to a stream
class tt__CertificateInformation
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element IssuerDN of type xs:string.
    std::string*                         IssuerDN                       0;	///< Optional element.
/// Element SubjectDN of type xs:string.
    std::string*                         SubjectDN                      0;	///< Optional element.
/// Element KeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                KeyUsage                       0;	///< Optional element.
/// Element ExtendedKeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                ExtendedKeyUsage               0;	///< Optional element.
/// Element KeyLength of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element Version of type xs:string.
    std::string*                         Version                        0;	///< Optional element.
/// Element SerialNum of type xs:string.
    std::string*                         SerialNum                      0;	///< Optional element.
/// @brief Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// Element SignatureAlgorithm of type xs:string.
    std::string*                         SignatureAlgorithm             0;	///< Optional element.
/// Element Validity of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    tt__DateTimeRange*                   Validity                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
/// class tt__CertificateInformationExtension operations:
/// - soap_new_tt__CertificateInformationExtension(soap*) allocate
/// - soap_new_tt__CertificateInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) deserialize from a stream
/// - int soap_write_tt__CertificateInformationExtension(soap, tt__CertificateInformationExtension*) serialize to a stream
class tt__CertificateInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
/// class tt__Dot1XConfiguration operations:
/// - soap_new_tt__Dot1XConfiguration(soap*) allocate
/// - soap_new_tt__Dot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__Dot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfiguration(soap, tt__Dot1XConfiguration*) serialize to a stream
class tt__Dot1XConfiguration
{ public:
/// Element Dot1XConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element Identity of type xs:string.
    std::string                          Identity                       1;	///< Required element.
/// Element AnonymousID of type xs:string.
    std::string*                         AnonymousID                    0;	///< Optional element.
/// @brief EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Element EAPMethod of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > CACertificateID                0;
/// Element EAPMethodConfiguration of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    tt__EAPMethodConfiguration*          EAPMethodConfiguration         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    tt__Dot1XConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
/// class tt__Dot1XConfigurationExtension operations:
/// - soap_new_tt__Dot1XConfigurationExtension(soap*) allocate
/// - soap_new_tt__Dot1XConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfigurationExtension(soap, tt__Dot1XConfigurationExtension*) serialize to a stream
class tt__Dot1XConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
/// class tt__EAPMethodConfiguration operations:
/// - soap_new_tt__EAPMethodConfiguration(soap*) allocate
/// - soap_new_tt__EAPMethodConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__EAPMethodConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EAPMethodConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) deserialize from a stream
/// - int soap_write_tt__EAPMethodConfiguration(soap, tt__EAPMethodConfiguration*) serialize to a stream
class tt__EAPMethodConfiguration
{ public:
/// @brief Confgiuration information for TLS Method.
/// Element TLSConfiguration of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    tt__TLSConfiguration*                TLSConfiguration               0;	///< Optional element.
/// @brief Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    tt__EapMethodExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
/// class tt__EapMethodExtension operations:
/// - soap_new_tt__EapMethodExtension(soap*) allocate
/// - soap_new_tt__EapMethodExtension(soap*, int num) allocate array
/// - soap_new_req_tt__EapMethodExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EapMethodExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) deserialize from a stream
/// - int soap_write_tt__EapMethodExtension(soap, tt__EapMethodExtension*) serialize to a stream
class tt__EapMethodExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
/// class tt__TLSConfiguration operations:
/// - soap_new_tt__TLSConfiguration(soap*) allocate
/// - soap_new_tt__TLSConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__TLSConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TLSConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) deserialize from a stream
/// - int soap_write_tt__TLSConfiguration(soap, tt__TLSConfiguration*) serialize to a stream
class tt__TLSConfiguration
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
/// class tt__GenericEapPwdConfigurationExtension operations:
/// - soap_new_tt__GenericEapPwdConfigurationExtension(soap*) allocate
/// - soap_new_tt__GenericEapPwdConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__GenericEapPwdConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GenericEapPwdConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GenericEapPwdConfigurationExtension(soap*, tt__GenericEapPwdConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__GenericEapPwdConfigurationExtension(soap, tt__GenericEapPwdConfigurationExtension*) serialize to a stream
class tt__GenericEapPwdConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
/// class tt__RelayOutputSettings operations:
/// - soap_new_tt__RelayOutputSettings(soap*) allocate
/// - soap_new_tt__RelayOutputSettings(soap*, int num) allocate array
/// - soap_new_req_tt__RelayOutputSettings(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelayOutputSettings(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) deserialize from a stream
/// - int soap_write_tt__RelayOutputSettings(soap, tt__RelayOutputSettings*) serialize to a stream
class tt__RelayOutputSettings
{ public:
/// @brief 'Bistable' or 'Monostable' <ul> <li>Bistable After setting the state, the relay remains in this state.</li> <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// @brief Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// Element DelayTime of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// @brief 'open' or 'closed' <ul> <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li> <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li> </ul>
/// Element IdleState of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
/// class tt__PTZNodeExtension operations:
/// - soap_new_tt__PTZNodeExtension(soap*) allocate
/// - soap_new_tt__PTZNodeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZNodeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZNodeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension(soap, tt__PTZNodeExtension*) serialize to a stream
class tt__PTZNodeExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Detail of supported Preset Tour feature.
/// Element SupportedPresetTour of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    tt__PTZPresetTourSupported*          SupportedPresetTour            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    tt__PTZNodeExtension2*               Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
/// class tt__PTZNodeExtension2 operations:
/// - soap_new_tt__PTZNodeExtension2(soap*) allocate
/// - soap_new_tt__PTZNodeExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__PTZNodeExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZNodeExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension2(soap, tt__PTZNodeExtension2*) serialize to a stream
class tt__PTZNodeExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
/// class tt__PTZPresetTourSupported operations:
/// - soap_new_tt__PTZPresetTourSupported(soap*) allocate
/// - soap_new_tt__PTZPresetTourSupported(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSupported(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSupported(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupported(soap, tt__PTZPresetTourSupported*) serialize to a stream
class tt__PTZPresetTourSupported
{ public:
/// @brief Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// Element MaximumNumberOfPresetTours of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// @brief Indicates which preset tour operations are available for this PTZ Node.
/// Vector of enum tt__PTZPresetTourOperation with length 0..unbounded
    std::vector<enum tt__PTZPresetTourOperation> PTZPresetTourOperation         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
/// class tt__PTZPresetTourSupportedExtension operations:
/// - soap_new_tt__PTZPresetTourSupportedExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourSupportedExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupportedExtension(soap, tt__PTZPresetTourSupportedExtension*) serialize to a stream
class tt__PTZPresetTourSupportedExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
/// class tt__PTZConfigurationExtension operations:
/// - soap_new_tt__PTZConfigurationExtension(soap*) allocate
/// - soap_new_tt__PTZConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension(soap, tt__PTZConfigurationExtension*) serialize to a stream
class tt__PTZConfigurationExtension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional element to configure PT Control Direction related features.
/// Element PTControlDirection of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    tt__PTControlDirection*              PTControlDirection             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    tt__PTZConfigurationExtension2*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
/// class tt__PTZConfigurationExtension2 operations:
/// - soap_new_tt__PTZConfigurationExtension2(soap*) allocate
/// - soap_new_tt__PTZConfigurationExtension2(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationExtension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationExtension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension2(soap, tt__PTZConfigurationExtension2*) serialize to a stream
class tt__PTZConfigurationExtension2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
/// class tt__PTControlDirection operations:
/// - soap_new_tt__PTControlDirection(soap*) allocate
/// - soap_new_tt__PTControlDirection(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirection(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirection(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirection(soap*, tt__PTControlDirection*) deserialize from a stream
/// - int soap_write_tt__PTControlDirection(soap, tt__PTControlDirection*) serialize to a stream
class tt__PTControlDirection
{ public:
/// @brief Optional element to configure related parameters for E-Flip.
/// Element EFlip of type "http://www.onvif.org/ver10/schema":EFlip.
    tt__EFlip*                           EFlip                          0;	///< Optional element.
/// @brief Optional element to configure related parameters for reversing of PT Control Direction.
/// Element Reverse of type "http://www.onvif.org/ver10/schema":Reverse.
    tt__Reverse*                         Reverse                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    tt__PTControlDirectionExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
/// class tt__PTControlDirectionExtension operations:
/// - soap_new_tt__PTControlDirectionExtension(soap*) allocate
/// - soap_new_tt__PTControlDirectionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirectionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirectionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionExtension(soap, tt__PTControlDirectionExtension*) serialize to a stream
class tt__PTControlDirectionExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EFlip is a complexType.
/// class tt__EFlip operations:
/// - soap_new_tt__EFlip(soap*) allocate
/// - soap_new_tt__EFlip(soap*, int num) allocate array
/// - soap_new_req_tt__EFlip(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EFlip(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EFlip(soap*, tt__EFlip*) deserialize from a stream
/// - int soap_write_tt__EFlip(soap, tt__EFlip*) serialize to a stream
class tt__EFlip
{ public:
/// @brief Parameter to enable/disable E-Flip feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Reverse is a complexType.
/// class tt__Reverse operations:
/// - soap_new_tt__Reverse(soap*) allocate
/// - soap_new_tt__Reverse(soap*, int num) allocate array
/// - soap_new_req_tt__Reverse(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Reverse(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Reverse(soap*, tt__Reverse*) deserialize from a stream
/// - int soap_write_tt__Reverse(soap, tt__Reverse*) serialize to a stream
class tt__Reverse
{ public:
/// @brief Parameter to enable/disable Reverse feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
/// class tt__PTZConfigurationOptions operations:
/// - soap_new_tt__PTZConfigurationOptions(soap*) allocate
/// - soap_new_tt__PTZConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions(soap, tt__PTZConfigurationOptions*) serialize to a stream
class tt__PTZConfigurationOptions
{ public:
/// @brief A list of supported coordinate systems including their range limitations.
/// Element Spaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       Spaces                         1;	///< Required element.
/// @brief A timeout Range within which Timeouts are accepted by the PTZ Node.
/// Element PTZTimeout of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   PTZTimeout                     1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Supported options for PT Direction Control.
/// Element PTControlDirection of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    tt__PTControlDirectionOptions*       PTControlDirection             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    tt__PTZConfigurationOptions2*        Extension                      0;	///< Optional element.
/// @brief The list of acceleration ramps supported by the device. The smallest acceleration value corresponds to the minimal index, the highest acceleration corresponds to the maximum index.
/// Attribute PTZRamps of type "http://www.onvif.org/ver10/schema":IntAttrList.
   @tt__IntAttrList*                     PTZRamps                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
/// class tt__PTZConfigurationOptions2 operations:
/// - soap_new_tt__PTZConfigurationOptions2(soap*) allocate
/// - soap_new_tt__PTZConfigurationOptions2(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfigurationOptions2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfigurationOptions2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions2(soap, tt__PTZConfigurationOptions2*) serialize to a stream
class tt__PTZConfigurationOptions2
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
/// class tt__PTControlDirectionOptions operations:
/// - soap_new_tt__PTControlDirectionOptions(soap*) allocate
/// - soap_new_tt__PTControlDirectionOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirectionOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirectionOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptions(soap, tt__PTControlDirectionOptions*) serialize to a stream
class tt__PTControlDirectionOptions
{ public:
/// @brief Supported options for EFlip feature.
/// Element EFlip of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    tt__EFlipOptions*                    EFlip                          0;	///< Optional element.
/// @brief Supported options for Reverse feature.
/// Element Reverse of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    tt__ReverseOptions*                  Reverse                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
/// class tt__PTControlDirectionOptionsExtension operations:
/// - soap_new_tt__PTControlDirectionOptionsExtension(soap*) allocate
/// - soap_new_tt__PTControlDirectionOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptionsExtension(soap, tt__PTControlDirectionOptionsExtension*) serialize to a stream
class tt__PTControlDirectionOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
/// class tt__EFlipOptions operations:
/// - soap_new_tt__EFlipOptions(soap*) allocate
/// - soap_new_tt__EFlipOptions(soap*, int num) allocate array
/// - soap_new_req_tt__EFlipOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EFlipOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EFlipOptions(soap*, tt__EFlipOptions*) deserialize from a stream
/// - int soap_write_tt__EFlipOptions(soap, tt__EFlipOptions*) serialize to a stream
class tt__EFlipOptions
{ public:
/// @brief Options of EFlip mode parameter.
/// Vector of enum tt__EFlipMode with length 0..unbounded
    std::vector<enum tt__EFlipMode     > Mode                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    tt__EFlipOptionsExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
/// class tt__EFlipOptionsExtension operations:
/// - soap_new_tt__EFlipOptionsExtension(soap*) allocate
/// - soap_new_tt__EFlipOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__EFlipOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EFlipOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__EFlipOptionsExtension(soap, tt__EFlipOptionsExtension*) serialize to a stream
class tt__EFlipOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
/// class tt__ReverseOptions operations:
/// - soap_new_tt__ReverseOptions(soap*) allocate
/// - soap_new_tt__ReverseOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ReverseOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReverseOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReverseOptions(soap*, tt__ReverseOptions*) deserialize from a stream
/// - int soap_write_tt__ReverseOptions(soap, tt__ReverseOptions*) serialize to a stream
class tt__ReverseOptions
{ public:
/// @brief Options of Reverse mode parameter.
/// Vector of enum tt__ReverseMode with length 0..unbounded
    std::vector<enum tt__ReverseMode   > Mode                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    tt__ReverseOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
/// class tt__ReverseOptionsExtension operations:
/// - soap_new_tt__ReverseOptionsExtension(soap*) allocate
/// - soap_new_tt__ReverseOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ReverseOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReverseOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__ReverseOptionsExtension(soap, tt__ReverseOptionsExtension*) serialize to a stream
class tt__ReverseOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
/// class tt__PanTiltLimits operations:
/// - soap_new_tt__PanTiltLimits(soap*) allocate
/// - soap_new_tt__PanTiltLimits(soap*, int num) allocate array
/// - soap_new_req_tt__PanTiltLimits(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PanTiltLimits(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) deserialize from a stream
/// - int soap_write_tt__PanTiltLimits(soap, tt__PanTiltLimits*) serialize to a stream
class tt__PanTiltLimits
{ public:
/// @brief A range of pan tilt limits.
/// Element Range of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              Range                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
/// class tt__ZoomLimits operations:
/// - soap_new_tt__ZoomLimits(soap*) allocate
/// - soap_new_tt__ZoomLimits(soap*, int num) allocate array
/// - soap_new_req_tt__ZoomLimits(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ZoomLimits(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ZoomLimits(soap*, tt__ZoomLimits*) deserialize from a stream
/// - int soap_write_tt__ZoomLimits(soap, tt__ZoomLimits*) serialize to a stream
class tt__ZoomLimits
{ public:
/// @brief A range of zoom limit
/// Element Range of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              Range                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
/// class tt__PTZSpaces operations:
/// - soap_new_tt__PTZSpaces(soap*) allocate
/// - soap_new_tt__PTZSpaces(soap*, int num) allocate array
/// - soap_new_req_tt__PTZSpaces(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZSpaces(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZSpaces(soap*, tt__PTZSpaces*) deserialize from a stream
/// - int soap_write_tt__PTZSpaces(soap, tt__PTZSpaces*) serialize to a stream
class tt__PTZSpaces
{ public:
/// @brief The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// Vector of tt__Space2DDescription* with length 0..unbounded
    std::vector<tt__Space2DDescription*> AbsolutePanTiltPositionSpace   0;
/// @brief The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// Vector of tt__Space1DDescription* with length 0..unbounded
    std::vector<tt__Space1DDescription*> AbsoluteZoomPositionSpace      0;
/// @brief The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// Vector of tt__Space2DDescription* with length 0..unbounded
    std::vector<tt__Space2DDescription*> RelativePanTiltTranslationSpace 0;
/// @brief The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// Vector of tt__Space1DDescription* with length 0..unbounded
    std::vector<tt__Space1DDescription*> RelativeZoomTranslationSpace   0;
/// @brief The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// Vector of tt__Space2DDescription* with length 0..unbounded
    std::vector<tt__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;
/// @brief The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// Vector of tt__Space1DDescription* with length 0..unbounded
    std::vector<tt__Space1DDescription*> ContinuousZoomVelocitySpace    0;
/// @brief The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// Vector of tt__Space1DDescription* with length 0..unbounded
    std::vector<tt__Space1DDescription*> PanTiltSpeedSpace              0;
/// @brief The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// Vector of tt__Space1DDescription* with length 0..unbounded
    std::vector<tt__Space1DDescription*> ZoomSpeedSpace                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    tt__PTZSpacesExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
/// class tt__PTZSpacesExtension operations:
/// - soap_new_tt__PTZSpacesExtension(soap*) allocate
/// - soap_new_tt__PTZSpacesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZSpacesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZSpacesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) deserialize from a stream
/// - int soap_write_tt__PTZSpacesExtension(soap, tt__PTZSpacesExtension*) serialize to a stream
class tt__PTZSpacesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
/// class tt__Space2DDescription operations:
/// - soap_new_tt__Space2DDescription(soap*) allocate
/// - soap_new_tt__Space2DDescription(soap*, int num) allocate array
/// - soap_new_req_tt__Space2DDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Space2DDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Space2DDescription(soap*, tt__Space2DDescription*) deserialize from a stream
/// - int soap_write_tt__Space2DDescription(soap, tt__Space2DDescription*) serialize to a stream
class tt__Space2DDescription
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// @brief A range of y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YRange                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
/// class tt__Space1DDescription operations:
/// - soap_new_tt__Space1DDescription(soap*) allocate
/// - soap_new_tt__Space1DDescription(soap*, int num) allocate array
/// - soap_new_req_tt__Space1DDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Space1DDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Space1DDescription(soap*, tt__Space1DDescription*) deserialize from a stream
/// - int soap_write_tt__Space1DDescription(soap, tt__Space1DDescription*) serialize to a stream
class tt__Space1DDescription
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
/// class tt__PTZSpeed operations:
/// - soap_new_tt__PTZSpeed(soap*) allocate
/// - soap_new_tt__PTZSpeed(soap*, int num) allocate array
/// - soap_new_req_tt__PTZSpeed(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZSpeed(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZSpeed(soap*, tt__PTZSpeed*) deserialize from a stream
/// - int soap_write_tt__PTZSpeed(soap, tt__PTZSpeed*) serialize to a stream
class tt__PTZSpeed
{ public:
/// @brief Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// @brief A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
/// class tt__PTZPreset operations:
/// - soap_new_tt__PTZPreset(soap*) allocate
/// - soap_new_tt__PTZPreset(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPreset(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPreset(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPreset(soap*, tt__PTZPreset*) deserialize from a stream
/// - int soap_write_tt__PTZPreset(soap, tt__PTZPreset*) serialize to a stream
class tt__PTZPreset
{ public:
/// @brief A list of preset position name.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// @brief A list of preset position.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    0;	///< Optional element.
/// @brief
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
/// class tt__PresetTour operations:
/// - soap_new_tt__PresetTour(soap*) allocate
/// - soap_new_tt__PresetTour(soap*, int num) allocate array
/// - soap_new_req_tt__PresetTour(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PresetTour(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PresetTour(soap*, tt__PresetTour*) deserialize from a stream
/// - int soap_write_tt__PresetTour(soap, tt__PresetTour*) serialize to a stream
class tt__PresetTour
{ public:
/// @brief Readable name of the preset tour.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// @brief Read only parameters to indicate the status of the preset tour.
/// Element Status of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    tt__PTZPresetTourStatus*             Status                         1;	///< Required element.
/// @brief Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @brief Parameters to specify the detail behavior of the preset tour.
/// Element StartingCondition of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// @brief A list of detail of touring spots including preset positions.
/// Vector of tt__PTZPresetTourSpot* with length 0..unbounded
    std::vector<tt__PTZPresetTourSpot* > TourSpot                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    tt__PTZPresetTourExtension*          Extension                      0;	///< Optional element.
/// @brief Unique identifier of this preset tour.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
/// class tt__PTZPresetTourExtension operations:
/// - soap_new_tt__PTZPresetTourExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourExtension(soap, tt__PTZPresetTourExtension*) serialize to a stream
class tt__PTZPresetTourExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
/// class tt__PTZPresetTourSpot operations:
/// - soap_new_tt__PTZPresetTourSpot(soap*) allocate
/// - soap_new_tt__PTZPresetTourSpot(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSpot(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSpot(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpot(soap, tt__PTZPresetTourSpot*) serialize to a stream
class tt__PTZPresetTourSpot
{ public:
/// @brief Detail definition of preset position of the tour spot.
/// Element PresetDetail of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    tt__PTZPresetTourPresetDetail*       PresetDetail                   1;	///< Required element.
/// @brief Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// @brief Optional parameter to specify time duration of staying on this tour sport.
/// Element StayTime of type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    tt__PTZPresetTourSpotExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
/// class tt__PTZPresetTourSpotExtension operations:
/// - soap_new_tt__PTZPresetTourSpotExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourSpotExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotExtension(soap, tt__PTZPresetTourSpotExtension*) serialize to a stream
class tt__PTZPresetTourSpotExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
/// class tt__PTZPresetTourPresetDetail operations:
/// - soap_new_tt__PTZPresetTourPresetDetail(soap*) allocate
/// - soap_new_tt__PTZPresetTourPresetDetail(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetail(soap, tt__PTZPresetTourPresetDetail*) serialize to a stream
class tt__PTZPresetTourPresetDetail
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// @brief Option to specify the preset position with Preset Token defined in advance.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                    1;	///< Required element.
/// @brief Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// Element Home of type xs:boolean.
    bool                                 Home                           1;	///< Required element.
/// @brief Option to specify the preset position with vector of PTZ node directly.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    1;	///< Required element.
/// Element TypeExtension of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    tt__PTZPresetTourTypeExtension*      TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
/// class tt__PTZPresetTourTypeExtension operations:
/// - soap_new_tt__PTZPresetTourTypeExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourTypeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourTypeExtension(soap, tt__PTZPresetTourTypeExtension*) serialize to a stream
class tt__PTZPresetTourTypeExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
/// class tt__PTZPresetTourStatus operations:
/// - soap_new_tt__PTZPresetTourStatus(soap*) allocate
/// - soap_new_tt__PTZPresetTourStatus(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatus(soap, tt__PTZPresetTourStatus*) serialize to a stream
class tt__PTZPresetTourStatus
{ public:
/// @brief Indicates state of this preset tour by Idle/Touring/Paused.
/// Element State of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// @brief Indicates a tour spot currently staying.
/// Element CurrentTourSpot of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    tt__PTZPresetTourSpot*               CurrentTourSpot                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    tt__PTZPresetTourStatusExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
/// class tt__PTZPresetTourStatusExtension operations:
/// - soap_new_tt__PTZPresetTourStatusExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourStatusExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatusExtension(soap, tt__PTZPresetTourStatusExtension*) serialize to a stream
class tt__PTZPresetTourStatusExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
/// class tt__PTZPresetTourStartingCondition operations:
/// - soap_new_tt__PTZPresetTourStartingCondition(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingCondition(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingCondition(soap, tt__PTZPresetTourStartingCondition*) serialize to a stream
class tt__PTZPresetTourStartingCondition
{ public:
/// @brief Optional parameter to specify how many times the preset tour is recurred.
/// Element RecurringTime of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// @brief Optional parameter to specify how long time duration the preset tour is recurred.
/// Element RecurringDuration of type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// @brief Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// Element Direction of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// @brief Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// Attribute RandomPresetOrder of type xs:boolean.
   @bool*                                RandomPresetOrder              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
/// class tt__PTZPresetTourStartingConditionExtension operations:
/// - soap_new_tt__PTZPresetTourStartingConditionExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingConditionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionExtension(soap, tt__PTZPresetTourStartingConditionExtension*) serialize to a stream
class tt__PTZPresetTourStartingConditionExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
/// class tt__PTZPresetTourOptions operations:
/// - soap_new_tt__PTZPresetTourOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourOptions(soap, tt__PTZPresetTourOptions*) serialize to a stream
class tt__PTZPresetTourOptions
{ public:
/// @brief Indicates whether or not the AutoStart is supported.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @brief Supported options for Preset Tour Starting Condition.
/// Element StartingCondition of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// @brief Supported options for Preset Tour Spot.
/// Element TourSpot of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    tt__PTZPresetTourSpotOptions*        TourSpot                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
/// class tt__PTZPresetTourSpotOptions operations:
/// - soap_new_tt__PTZPresetTourSpotOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourSpotOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotOptions(soap, tt__PTZPresetTourSpotOptions*) serialize to a stream
class tt__PTZPresetTourSpotOptions
{ public:
/// @brief Supported options for detail definition of preset position of the tour spot.
/// Element PresetDetail of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// @brief Supported range of stay time for a tour spot.
/// Element StayTime of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   StayTime                       1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
/// class tt__PTZPresetTourPresetDetailOptions operations:
/// - soap_new_tt__PTZPresetTourPresetDetailOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourPresetDetailOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptions(soap, tt__PTZPresetTourPresetDetailOptions*) serialize to a stream
class tt__PTZPresetTourPresetDetailOptions
{ public:
/// @brief A list of available Preset Tokens for tour spots.
/// Vector of tt__ReferenceToken with length 0..unbounded
    std::vector<tt__ReferenceToken     > PresetToken                    0;
/// @brief An option to indicate Home postion for tour spots.
/// Element Home of type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// @brief Supported range of Pan and Tilt for tour spots.
/// Element PanTiltPositionSpace of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              PanTiltPositionSpace           0;	///< Optional element.
/// @brief Supported range of Zoom for a tour spot.
/// Element ZoomPositionSpace of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              ZoomPositionSpace              0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
/// class tt__PTZPresetTourPresetDetailOptionsExtension operations:
/// - soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap, tt__PTZPresetTourPresetDetailOptionsExtension*) serialize to a stream
class tt__PTZPresetTourPresetDetailOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
/// class tt__PTZPresetTourStartingConditionOptions operations:
/// - soap_new_tt__PTZPresetTourStartingConditionOptions(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingConditionOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptions(soap, tt__PTZPresetTourStartingConditionOptions*) serialize to a stream
class tt__PTZPresetTourStartingConditionOptions
{ public:
/// @brief Supported range of Recurring Time.
/// Element RecurringTime of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        RecurringTime                  0;	///< Optional element.
/// @brief Supported range of Recurring Duration.
/// Element RecurringDuration of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   RecurringDuration              0;	///< Optional element.
/// @brief Supported options for Direction of Preset Tour.
/// Vector of enum tt__PTZPresetTourDirection with length 0..unbounded
    std::vector<enum tt__PTZPresetTourDirection> Direction                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
/// class tt__PTZPresetTourStartingConditionOptionsExtension operations:
/// - soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*) allocate
/// - soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap, tt__PTZPresetTourStartingConditionOptionsExtension*) serialize to a stream
class tt__PTZPresetTourStartingConditionOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
/// class tt__ImagingStatus operations:
/// - soap_new_tt__ImagingStatus(soap*) allocate
/// - soap_new_tt__ImagingStatus(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingStatus(soap*, tt__ImagingStatus*) deserialize from a stream
/// - int soap_write_tt__ImagingStatus(soap, tt__ImagingStatus*) serialize to a stream
class tt__ImagingStatus
{ public:
/// Element FocusStatus of type "http://www.onvif.org/ver10/schema":FocusStatus.
    tt__FocusStatus*                     FocusStatus                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
/// class tt__FocusStatus operations:
/// - soap_new_tt__FocusStatus(soap*) allocate
/// - soap_new_tt__FocusStatus(soap*, int num) allocate array
/// - soap_new_req_tt__FocusStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusStatus(soap*, tt__FocusStatus*) deserialize from a stream
/// - int soap_write_tt__FocusStatus(soap, tt__FocusStatus*) serialize to a stream
class tt__FocusStatus
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    std::string                          Error                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
/// class tt__FocusConfiguration operations:
/// - soap_new_tt__FocusConfiguration(soap*) allocate
/// - soap_new_tt__FocusConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__FocusConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration(soap, tt__FocusConfiguration*) serialize to a stream
class tt__FocusConfiguration
{ public:
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// @brief Parameter to set autofocus far limit (unit: meter). If set to 0.0, infinity will be used.
/// Element FarLimit of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
/// class tt__ImagingSettings operations:
/// - soap_new_tt__ImagingSettings(soap*) allocate
/// - soap_new_tt__ImagingSettings(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettings(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettings(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettings(soap*, tt__ImagingSettings*) deserialize from a stream
/// - int soap_write_tt__ImagingSettings(soap, tt__ImagingSettings*) serialize to a stream
class tt__ImagingSettings
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    tt__BacklightCompensation*           BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure.
    tt__Exposure*                        Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    tt__FocusConfiguration*              Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    tt__WideDynamicRange*                WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    tt__WhiteBalance*                    WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    tt__ImagingSettingsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
/// class tt__ImagingSettingsExtension operations:
/// - soap_new_tt__ImagingSettingsExtension(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension(soap, tt__ImagingSettingsExtension*) serialize to a stream
class tt__ImagingSettingsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Exposure is a complexType.
/// class tt__Exposure operations:
/// - soap_new_tt__Exposure(soap*) allocate
/// - soap_new_tt__Exposure(soap*, int num) allocate array
/// - soap_new_req_tt__Exposure(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Exposure(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Exposure(soap*, tt__Exposure*) deserialize from a stream
/// - int soap_write_tt__Exposure(soap, tt__Exposure*) serialize to a stream
class tt__Exposure
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the NVT.</li> <li>Manual Disabled exposure algorithm on the NVT.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         1;	///< Required element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float                                Gain                           1;	///< Required element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float                                Iris                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
/// class tt__WideDynamicRange operations:
/// - soap_new_tt__WideDynamicRange(soap*) allocate
/// - soap_new_tt__WideDynamicRange(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRange(soap, tt__WideDynamicRange*) serialize to a stream
class tt__WideDynamicRange
{ public:
/// @brief White dynamic range (on/off)
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// @brief Optional level parameter (unitless)
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
/// class tt__BacklightCompensation operations:
/// - soap_new_tt__BacklightCompensation(soap*) allocate
/// - soap_new_tt__BacklightCompensation(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensation(soap, tt__BacklightCompensation*) serialize to a stream
class tt__BacklightCompensation
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
/// class tt__ImagingOptions operations:
/// - soap_new_tt__ImagingOptions(soap*) allocate
/// - soap_new_tt__ImagingOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions(soap*, tt__ImagingOptions*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions(soap, tt__ImagingOptions*) serialize to a stream
class tt__ImagingOptions
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    tt__BacklightCompensationOptions*    BacklightCompensation          1;	///< Required element.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     1;	///< Required element.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                1;	///< Required element.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       1;	///< Required element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    tt__ExposureOptions*                 Exposure                       1;	///< Required element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions.
    tt__FocusOptions*                    Focus                          1;	///< Required element.
/// Vector of enum tt__IrCutFilterMode with length 1..unbounded
    std::vector<enum tt__IrCutFilterMode> IrCutFilterModes               1;
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      1;	///< Required element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    tt__WideDynamicRangeOptions*         WideDynamicRange               1;	///< Required element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    tt__WhiteBalanceOptions*             WhiteBalance                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
/// class tt__WideDynamicRangeOptions operations:
/// - soap_new_tt__WideDynamicRangeOptions(soap*) allocate
/// - soap_new_tt__WideDynamicRangeOptions(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRangeOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRangeOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRangeOptions(soap*, tt__WideDynamicRangeOptions*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRangeOptions(soap, tt__WideDynamicRangeOptions*) serialize to a stream
class tt__WideDynamicRangeOptions
{ public:
/// Vector of enum tt__WideDynamicMode with length 1..unbounded
    std::vector<enum tt__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
/// class tt__BacklightCompensationOptions operations:
/// - soap_new_tt__BacklightCompensationOptions(soap*) allocate
/// - soap_new_tt__BacklightCompensationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensationOptions(soap*, tt__BacklightCompensationOptions*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensationOptions(soap, tt__BacklightCompensationOptions*) serialize to a stream
class tt__BacklightCompensationOptions
{ public:
/// Vector of enum tt__WideDynamicMode with length 1..unbounded
    std::vector<enum tt__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
/// class tt__FocusOptions operations:
/// - soap_new_tt__FocusOptions(soap*) allocate
/// - soap_new_tt__FocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__FocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusOptions(soap*, tt__FocusOptions*) deserialize from a stream
/// - int soap_write_tt__FocusOptions(soap, tt__FocusOptions*) serialize to a stream
class tt__FocusOptions
{ public:
/// Vector of enum tt__AutoFocusMode with length 0..unbounded
    std::vector<enum tt__AutoFocusMode > AutoFocusModes                 0;
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   1;	///< Required element.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      1;	///< Required element.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
/// class tt__ExposureOptions operations:
/// - soap_new_tt__ExposureOptions(soap*) allocate
/// - soap_new_tt__ExposureOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ExposureOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ExposureOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ExposureOptions(soap*, tt__ExposureOptions*) deserialize from a stream
/// - int soap_write_tt__ExposureOptions(soap, tt__ExposureOptions*) serialize to a stream
class tt__ExposureOptions
{ public:
/// Vector of enum tt__ExposureMode with length 1..unbounded
    std::vector<enum tt__ExposureMode  > Mode                           1;
/// Vector of enum tt__ExposurePriority with length 1..unbounded
    std::vector<enum tt__ExposurePriority> Priority                       1;
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                1;	///< Required element.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                1;	///< Required element.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        1;	///< Required element.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        1;	///< Required element.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        1;	///< Required element.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        1;	///< Required element.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   1;	///< Required element.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           1;	///< Required element.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
/// class tt__WhiteBalanceOptions operations:
/// - soap_new_tt__WhiteBalanceOptions(soap*) allocate
/// - soap_new_tt__WhiteBalanceOptions(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalanceOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalanceOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalanceOptions(soap*, tt__WhiteBalanceOptions*) deserialize from a stream
/// - int soap_write_tt__WhiteBalanceOptions(soap, tt__WhiteBalanceOptions*) serialize to a stream
class tt__WhiteBalanceOptions
{ public:
/// Vector of enum tt__WhiteBalanceMode with length 1..unbounded
    std::vector<enum tt__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         1;	///< Required element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
/// class tt__FocusMove operations:
/// - soap_new_tt__FocusMove(soap*) allocate
/// - soap_new_tt__FocusMove(soap*, int num) allocate array
/// - soap_new_req_tt__FocusMove(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusMove(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusMove(soap*, tt__FocusMove*) deserialize from a stream
/// - int soap_write_tt__FocusMove(soap, tt__FocusMove*) serialize to a stream
class tt__FocusMove
{ public:
/// @brief Parameters for the absolute focus control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    tt__AbsoluteFocus*                   Absolute                       0;	///< Optional element.
/// @brief Parameters for the relative focus control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    tt__RelativeFocus*                   Relative                       0;	///< Optional element.
/// @brief Parameter for the continuous focus control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    tt__ContinuousFocus*                 Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
/// class tt__AbsoluteFocus operations:
/// - soap_new_tt__AbsoluteFocus(soap*) allocate
/// - soap_new_tt__AbsoluteFocus(soap*, int num) allocate array
/// - soap_new_req_tt__AbsoluteFocus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AbsoluteFocus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AbsoluteFocus(soap*, tt__AbsoluteFocus*) deserialize from a stream
/// - int soap_write_tt__AbsoluteFocus(soap, tt__AbsoluteFocus*) serialize to a stream
class tt__AbsoluteFocus
{ public:
/// @brief Position parameter for the absolute focus control.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Speed parameter for the absolute focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
/// class tt__RelativeFocus operations:
/// - soap_new_tt__RelativeFocus(soap*) allocate
/// - soap_new_tt__RelativeFocus(soap*, int num) allocate array
/// - soap_new_req_tt__RelativeFocus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelativeFocus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelativeFocus(soap*, tt__RelativeFocus*) deserialize from a stream
/// - int soap_write_tt__RelativeFocus(soap, tt__RelativeFocus*) serialize to a stream
class tt__RelativeFocus
{ public:
/// @brief Distance parameter for the relative focus control.
/// Element Distance of type xs:float.
    float                                Distance                       1;	///< Required element.
/// @brief Speed parameter for the relative focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
/// class tt__ContinuousFocus operations:
/// - soap_new_tt__ContinuousFocus(soap*) allocate
/// - soap_new_tt__ContinuousFocus(soap*, int num) allocate array
/// - soap_new_req_tt__ContinuousFocus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ContinuousFocus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ContinuousFocus(soap*, tt__ContinuousFocus*) deserialize from a stream
/// - int soap_write_tt__ContinuousFocus(soap, tt__ContinuousFocus*) serialize to a stream
class tt__ContinuousFocus
{ public:
/// @brief Speed parameter for the Continuous focus control.
/// Element Speed of type xs:float.
    float                                Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
/// class tt__MoveOptions operations:
/// - soap_new_tt__MoveOptions(soap*) allocate
/// - soap_new_tt__MoveOptions(soap*, int num) allocate array
/// - soap_new_req_tt__MoveOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MoveOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MoveOptions(soap*, tt__MoveOptions*) deserialize from a stream
/// - int soap_write_tt__MoveOptions(soap, tt__MoveOptions*) serialize to a stream
class tt__MoveOptions
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    tt__RelativeFocusOptions*            Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
/// class tt__AbsoluteFocusOptions operations:
/// - soap_new_tt__AbsoluteFocusOptions(soap*) allocate
/// - soap_new_tt__AbsoluteFocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__AbsoluteFocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AbsoluteFocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AbsoluteFocusOptions(soap*, tt__AbsoluteFocusOptions*) deserialize from a stream
/// - int soap_write_tt__AbsoluteFocusOptions(soap, tt__AbsoluteFocusOptions*) serialize to a stream
class tt__AbsoluteFocusOptions
{ public:
/// @brief Valid ranges of the position.
/// Element Position of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Position                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
/// class tt__RelativeFocusOptions operations:
/// - soap_new_tt__RelativeFocusOptions(soap*) allocate
/// - soap_new_tt__RelativeFocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__RelativeFocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelativeFocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelativeFocusOptions(soap*, tt__RelativeFocusOptions*) deserialize from a stream
/// - int soap_write_tt__RelativeFocusOptions(soap, tt__RelativeFocusOptions*) serialize to a stream
class tt__RelativeFocusOptions
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
/// class tt__ContinuousFocusOptions operations:
/// - soap_new_tt__ContinuousFocusOptions(soap*) allocate
/// - soap_new_tt__ContinuousFocusOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ContinuousFocusOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ContinuousFocusOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ContinuousFocusOptions(soap*, tt__ContinuousFocusOptions*) deserialize from a stream
/// - int soap_write_tt__ContinuousFocusOptions(soap, tt__ContinuousFocusOptions*) serialize to a stream
class tt__ContinuousFocusOptions
{ public:
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
/// class tt__WhiteBalance operations:
/// - soap_new_tt__WhiteBalance(soap*) allocate
/// - soap_new_tt__WhiteBalance(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalance(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalance(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalance(soap*, tt__WhiteBalance*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance(soap, tt__WhiteBalance*) serialize to a stream
class tt__WhiteBalance
{ public:
/// @brief Auto whitebalancing mode (auto/manual).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
/// class tt__ImagingStatus20 operations:
/// - soap_new_tt__ImagingStatus20(soap*) allocate
/// - soap_new_tt__ImagingStatus20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingStatus20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingStatus20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingStatus20(soap*, tt__ImagingStatus20*) deserialize from a stream
/// - int soap_write_tt__ImagingStatus20(soap, tt__ImagingStatus20*) serialize to a stream
class tt__ImagingStatus20
{ public:
/// @brief Status of focus.
/// Element FocusStatus20 of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    tt__FocusStatus20*                   FocusStatus20                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    tt__ImagingStatus20Extension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
/// class tt__ImagingStatus20Extension operations:
/// - soap_new_tt__ImagingStatus20Extension(soap*) allocate
/// - soap_new_tt__ImagingStatus20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingStatus20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingStatus20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingStatus20Extension(soap*, tt__ImagingStatus20Extension*) deserialize from a stream
/// - int soap_write_tt__ImagingStatus20Extension(soap, tt__ImagingStatus20Extension*) serialize to a stream
class tt__ImagingStatus20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
/// class tt__FocusStatus20 operations:
/// - soap_new_tt__FocusStatus20(soap*) allocate
/// - soap_new_tt__FocusStatus20(soap*, int num) allocate array
/// - soap_new_req_tt__FocusStatus20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusStatus20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusStatus20(soap*, tt__FocusStatus20*) deserialize from a stream
/// - int soap_write_tt__FocusStatus20(soap, tt__FocusStatus20*) serialize to a stream
class tt__FocusStatus20
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    tt__FocusStatus20Extension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
/// class tt__FocusStatus20Extension operations:
/// - soap_new_tt__FocusStatus20Extension(soap*) allocate
/// - soap_new_tt__FocusStatus20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__FocusStatus20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusStatus20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusStatus20Extension(soap*, tt__FocusStatus20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusStatus20Extension(soap, tt__FocusStatus20Extension*) serialize to a stream
class tt__FocusStatus20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
/// @brief Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// class tt__ImagingSettings20 operations:
/// - soap_new_tt__ImagingSettings20(soap*) allocate
/// - soap_new_tt__ImagingSettings20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettings20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettings20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) deserialize from a stream
/// - int soap_write_tt__ImagingSettings20(soap, tt__ImagingSettings20*) serialize to a stream
class tt__ImagingSettings20
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    tt__BacklightCompensation20*         BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure20.
    tt__Exposure20*                      Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    tt__FocusConfiguration20*            Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    tt__WideDynamicRange20*              WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    tt__WhiteBalance20*                  WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    tt__ImagingSettingsExtension20*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
/// class tt__ImagingSettingsExtension20 operations:
/// - soap_new_tt__ImagingSettingsExtension20(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension20(soap, tt__ImagingSettingsExtension20*) serialize to a stream
class tt__ImagingSettingsExtension20
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Optional element to configure Image Stabilization feature.
/// Element ImageStabilization of type "http://www.onvif.org/ver10/schema":ImageStabilization.
    tt__ImageStabilization*              ImageStabilization             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    tt__ImagingSettingsExtension202*     Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
/// class tt__ImagingSettingsExtension202 operations:
/// - soap_new_tt__ImagingSettingsExtension202(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension202(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension202(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension202(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension202(soap, tt__ImagingSettingsExtension202*) serialize to a stream
class tt__ImagingSettingsExtension202
{ public:
/// @brief An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// Vector of tt__IrCutFilterAutoAdjustment* with length 0..unbounded
    std::vector<tt__IrCutFilterAutoAdjustment*> IrCutFilterAutoAdjustment      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    tt__ImagingSettingsExtension203*     Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
/// class tt__ImagingSettingsExtension203 operations:
/// - soap_new_tt__ImagingSettingsExtension203(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension203(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension203(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension203(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension203(soap, tt__ImagingSettingsExtension203*) serialize to a stream
class tt__ImagingSettingsExtension203
{ public:
/// @brief Optional element to configure Image Contrast Compensation.
/// Element ToneCompensation of type "http://www.onvif.org/ver10/schema":ToneCompensation.
    tt__ToneCompensation*                ToneCompensation               0;	///< Optional element.
/// @brief Optional element to configure Image Defogging.
/// Element Defogging of type "http://www.onvif.org/ver10/schema":Defogging.
    tt__Defogging*                       Defogging                      0;	///< Optional element.
/// @brief Optional element to configure Image Noise Reduction.
/// Element NoiseReduction of type "http://www.onvif.org/ver10/schema":NoiseReduction.
    tt__NoiseReduction*                  NoiseReduction                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    tt__ImagingSettingsExtension204*     Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
/// class tt__ImagingSettingsExtension204 operations:
/// - soap_new_tt__ImagingSettingsExtension204(soap*) allocate
/// - soap_new_tt__ImagingSettingsExtension204(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingSettingsExtension204(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingSettingsExtension204(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension204(soap, tt__ImagingSettingsExtension204*) serialize to a stream
class tt__ImagingSettingsExtension204
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
/// class tt__ImageStabilization operations:
/// - soap_new_tt__ImageStabilization(soap*) allocate
/// - soap_new_tt__ImageStabilization(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilization(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilization(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilization(soap*, tt__ImageStabilization*) deserialize from a stream
/// - int soap_write_tt__ImageStabilization(soap, tt__ImageStabilization*) serialize to a stream
class tt__ImageStabilization
{ public:
/// @brief Parameter to enable/disable Image Stabilization feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified)
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    tt__ImageStabilizationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
/// class tt__ImageStabilizationExtension operations:
/// - soap_new_tt__ImageStabilizationExtension(soap*) allocate
/// - soap_new_tt__ImageStabilizationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilizationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilizationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationExtension(soap, tt__ImageStabilizationExtension*) serialize to a stream
class tt__ImageStabilizationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
/// class tt__IrCutFilterAutoAdjustment operations:
/// - soap_new_tt__IrCutFilterAutoAdjustment(soap*) allocate
/// - soap_new_tt__IrCutFilterAutoAdjustment(soap*, int num) allocate array
/// - soap_new_req_tt__IrCutFilterAutoAdjustment(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IrCutFilterAutoAdjustment(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment*) deserialize from a stream
/// - int soap_write_tt__IrCutFilterAutoAdjustment(soap, tt__IrCutFilterAutoAdjustment*) serialize to a stream
class tt__IrCutFilterAutoAdjustment
{ public:
/// @brief Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// Element BoundaryType of type xs:string.
    std::string                          BoundaryType                   1;	///< Required element.
/// @brief Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// Element BoundaryOffset of type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// @brief Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// Element ResponseTime of type xs:duration.
    xsd__duration*                       ResponseTime                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
/// class tt__IrCutFilterAutoAdjustmentExtension operations:
/// - soap_new_tt__IrCutFilterAutoAdjustmentExtension(soap*) allocate
/// - soap_new_tt__IrCutFilterAutoAdjustmentExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IrCutFilterAutoAdjustmentExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IrCutFilterAutoAdjustmentExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension*) deserialize from a stream
/// - int soap_write_tt__IrCutFilterAutoAdjustmentExtension(soap, tt__IrCutFilterAutoAdjustmentExtension*) serialize to a stream
class tt__IrCutFilterAutoAdjustmentExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
/// @brief Type describing whether WDR mode is enabled or disabled (on/off).
/// class tt__WideDynamicRange20 operations:
/// - soap_new_tt__WideDynamicRange20(soap*) allocate
/// - soap_new_tt__WideDynamicRange20(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRange20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRange20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRange20(soap, tt__WideDynamicRange20*) serialize to a stream
class tt__WideDynamicRange20
{ public:
/// @brief Wide dynamic range mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
/// @brief Type describing whether BLC mode is enabled or disabled (on/off).
/// class tt__BacklightCompensation20 operations:
/// - soap_new_tt__BacklightCompensation20(soap*) allocate
/// - soap_new_tt__BacklightCompensation20(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensation20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensation20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensation20(soap, tt__BacklightCompensation20*) serialize to a stream
class tt__BacklightCompensation20
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
/// @brief Type describing the exposure settings.
/// class tt__Exposure20 operations:
/// - soap_new_tt__Exposure20(soap*) allocate
/// - soap_new_tt__Exposure20(soap*, int num) allocate array
/// - soap_new_req_tt__Exposure20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Exposure20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Exposure20(soap*, tt__Exposure20*) deserialize from a stream
/// - int soap_write_tt__Exposure20(soap, tt__Exposure20*) serialize to a stream
class tt__Exposure20
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         0;	///< Optional element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// Element MinIris of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// Element MaxIris of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// Element Iris of type xs:float.
    float*                               Iris                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
/// class tt__ToneCompensation operations:
/// - soap_new_tt__ToneCompensation(soap*) allocate
/// - soap_new_tt__ToneCompensation(soap*, int num) allocate array
/// - soap_new_req_tt__ToneCompensation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ToneCompensation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ToneCompensation(soap*, tt__ToneCompensation*) deserialize from a stream
/// - int soap_write_tt__ToneCompensation(soap, tt__ToneCompensation*) serialize to a stream
class tt__ToneCompensation
{ public:
/// @brief Parameter to enable/disable or automatic ToneCompensation feature. Its options shall be chosen from tt:ToneCompensationMode Type.
/// Element Mode of type xs:string.
    std::string                          Mode                           1;	///< Required element.
/// @brief Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    tt__ToneCompensationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
/// class tt__ToneCompensationExtension operations:
/// - soap_new_tt__ToneCompensationExtension(soap*) allocate
/// - soap_new_tt__ToneCompensationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ToneCompensationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ToneCompensationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension*) deserialize from a stream
/// - int soap_write_tt__ToneCompensationExtension(soap, tt__ToneCompensationExtension*) serialize to a stream
class tt__ToneCompensationExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Defogging is a complexType.
/// class tt__Defogging operations:
/// - soap_new_tt__Defogging(soap*) allocate
/// - soap_new_tt__Defogging(soap*, int num) allocate array
/// - soap_new_req_tt__Defogging(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Defogging(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Defogging(soap*, tt__Defogging*) deserialize from a stream
/// - int soap_write_tt__Defogging(soap, tt__Defogging*) serialize to a stream
class tt__Defogging
{ public:
/// @brief Parameter to enable/disable or automatic Defogging feature. Its options shall be chosen from tt:DefoggingMode Type.
/// Element Mode of type xs:string.
    std::string                          Mode                           1;	///< Required element.
/// @brief Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    tt__DefoggingExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
/// class tt__DefoggingExtension operations:
/// - soap_new_tt__DefoggingExtension(soap*) allocate
/// - soap_new_tt__DefoggingExtension(soap*, int num) allocate array
/// - soap_new_req_tt__DefoggingExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DefoggingExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DefoggingExtension(soap*, tt__DefoggingExtension*) deserialize from a stream
/// - int soap_write_tt__DefoggingExtension(soap, tt__DefoggingExtension*) serialize to a stream
class tt__DefoggingExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
/// class tt__NoiseReduction operations:
/// - soap_new_tt__NoiseReduction(soap*) allocate
/// - soap_new_tt__NoiseReduction(soap*, int num) allocate array
/// - soap_new_req_tt__NoiseReduction(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NoiseReduction(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NoiseReduction(soap*, tt__NoiseReduction*) deserialize from a stream
/// - int soap_write_tt__NoiseReduction(soap, tt__NoiseReduction*) serialize to a stream
class tt__NoiseReduction
{ public:
/// @brief Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
/// class tt__ImagingOptions20 operations:
/// - soap_new_tt__ImagingOptions20(soap*) allocate
/// - soap_new_tt__ImagingOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20(soap*, tt__ImagingOptions20*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20(soap, tt__ImagingOptions20*) serialize to a stream
class tt__ImagingOptions20
{ public:
/// @brief Valid range of Backlight Compensation.
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// @brief Valid range of Brightness.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     0;	///< Optional element.
/// @brief Valid range of Color Saturation.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                0;	///< Optional element.
/// @brief Valid range of Contrast.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       0;	///< Optional element.
/// @brief Valid range of Exposure.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    tt__ExposureOptions20*               Exposure                       0;	///< Optional element.
/// @brief Valid range of Focus.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    tt__FocusOptions20*                  Focus                          0;	///< Optional element.
/// @brief Valid range of IrCutFilterModes.
/// Vector of enum tt__IrCutFilterMode with length 0..unbounded
    std::vector<enum tt__IrCutFilterMode> IrCutFilterModes               0;
/// @brief Valid range of Sharpness.
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      0;	///< Optional element.
/// @brief Valid range of WideDynamicRange.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    tt__WideDynamicRangeOptions20*       WideDynamicRange               0;	///< Optional element.
/// @brief Valid range of WhiteBalance.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    tt__WhiteBalanceOptions20*           WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    tt__ImagingOptions20Extension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
/// class tt__ImagingOptions20Extension operations:
/// - soap_new_tt__ImagingOptions20Extension(soap*) allocate
/// - soap_new_tt__ImagingOptions20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20Extension(soap*, tt__ImagingOptions20Extension*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20Extension(soap, tt__ImagingOptions20Extension*) serialize to a stream
class tt__ImagingOptions20Extension
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Options of parameters for Image Stabilization feature.
/// Element ImageStabilization of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    tt__ImageStabilizationOptions*       ImageStabilization             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    tt__ImagingOptions20Extension2*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
/// class tt__ImagingOptions20Extension2 operations:
/// - soap_new_tt__ImagingOptions20Extension2(soap*) allocate
/// - soap_new_tt__ImagingOptions20Extension2(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20Extension2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20Extension2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20Extension2(soap*, tt__ImagingOptions20Extension2*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20Extension2(soap, tt__ImagingOptions20Extension2*) serialize to a stream
class tt__ImagingOptions20Extension2
{ public:
/// @brief Options of parameters for adjustment of Ir cut filter auto mode.
/// Element IrCutFilterAutoAdjustment of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions.
    tt__IrCutFilterAutoAdjustmentOptions*  IrCutFilterAutoAdjustment      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3.
    tt__ImagingOptions20Extension3*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is a complexType.
/// class tt__ImagingOptions20Extension3 operations:
/// - soap_new_tt__ImagingOptions20Extension3(soap*) allocate
/// - soap_new_tt__ImagingOptions20Extension3(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20Extension3(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20Extension3(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20Extension3(soap*, tt__ImagingOptions20Extension3*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20Extension3(soap, tt__ImagingOptions20Extension3*) serialize to a stream
class tt__ImagingOptions20Extension3
{ public:
/// @brief Options of parameters for Tone Compensation feature.
/// Element ToneCompensationOptions of type "http://www.onvif.org/ver10/schema":ToneCompensationOptions.
    tt__ToneCompensationOptions*         ToneCompensationOptions        0;	///< Optional element.
/// @brief Options of parameters for Defogging feature.
/// Element DefoggingOptions of type "http://www.onvif.org/ver10/schema":DefoggingOptions.
    tt__DefoggingOptions*                DefoggingOptions               0;	///< Optional element.
/// @brief Options of parameter for Noise Reduction feature.
/// Element NoiseReductionOptions of type "http://www.onvif.org/ver10/schema":NoiseReductionOptions.
    tt__NoiseReductionOptions*           NoiseReductionOptions          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4.
    tt__ImagingOptions20Extension4*      Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is a complexType.
/// class tt__ImagingOptions20Extension4 operations:
/// - soap_new_tt__ImagingOptions20Extension4(soap*) allocate
/// - soap_new_tt__ImagingOptions20Extension4(soap*, int num) allocate array
/// - soap_new_req_tt__ImagingOptions20Extension4(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImagingOptions20Extension4(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImagingOptions20Extension4(soap*, tt__ImagingOptions20Extension4*) deserialize from a stream
/// - int soap_write_tt__ImagingOptions20Extension4(soap, tt__ImagingOptions20Extension4*) serialize to a stream
class tt__ImagingOptions20Extension4
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
/// class tt__ImageStabilizationOptions operations:
/// - soap_new_tt__ImageStabilizationOptions(soap*) allocate
/// - soap_new_tt__ImageStabilizationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilizationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilizationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilizationOptions(soap*, tt__ImageStabilizationOptions*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationOptions(soap, tt__ImageStabilizationOptions*) serialize to a stream
class tt__ImageStabilizationOptions
{ public:
/// @brief Supported options of Image Stabilization mode parameter.
/// Vector of enum tt__ImageStabilizationMode with length 1..unbounded
    std::vector<enum tt__ImageStabilizationMode> Mode                           1;
/// @brief Valid range of the Image Stabilization.
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
/// class tt__ImageStabilizationOptionsExtension operations:
/// - soap_new_tt__ImageStabilizationOptionsExtension(soap*) allocate
/// - soap_new_tt__ImageStabilizationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ImageStabilizationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ImageStabilizationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ImageStabilizationOptionsExtension(soap*, tt__ImageStabilizationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationOptionsExtension(soap, tt__ImageStabilizationOptionsExtension*) serialize to a stream
class tt__ImageStabilizationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is a complexType.
/// class tt__IrCutFilterAutoAdjustmentOptions operations:
/// - soap_new_tt__IrCutFilterAutoAdjustmentOptions(soap*) allocate
/// - soap_new_tt__IrCutFilterAutoAdjustmentOptions(soap*, int num) allocate array
/// - soap_new_req_tt__IrCutFilterAutoAdjustmentOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IrCutFilterAutoAdjustmentOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentOptions(soap*, tt__IrCutFilterAutoAdjustmentOptions*) deserialize from a stream
/// - int soap_write_tt__IrCutFilterAutoAdjustmentOptions(soap, tt__IrCutFilterAutoAdjustmentOptions*) serialize to a stream
class tt__IrCutFilterAutoAdjustmentOptions
{ public:
/// @brief Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > BoundaryType                   1;
/// @brief Indicates whether or not boundary offset for toggling Ir cut filter is supported.
/// Element BoundaryOffset of type xs:boolean.
    bool*                                BoundaryOffset                 0;	///< Optional element.
/// @brief Supported range of delay time for toggling Ir cut filter.
/// Element ResponseTimeRange of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   ResponseTimeRange              0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension.
    tt__IrCutFilterAutoAdjustmentOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is a complexType.
/// class tt__IrCutFilterAutoAdjustmentOptionsExtension operations:
/// - soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*) allocate
/// - soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, tt__IrCutFilterAutoAdjustmentOptionsExtension*) serialize to a stream
class tt__IrCutFilterAutoAdjustmentOptionsExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
/// class tt__WideDynamicRangeOptions20 operations:
/// - soap_new_tt__WideDynamicRangeOptions20(soap*) allocate
/// - soap_new_tt__WideDynamicRangeOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__WideDynamicRangeOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WideDynamicRangeOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WideDynamicRangeOptions20(soap*, tt__WideDynamicRangeOptions20*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRangeOptions20(soap, tt__WideDynamicRangeOptions20*) serialize to a stream
class tt__WideDynamicRangeOptions20
{ public:
/// Vector of enum tt__WideDynamicMode with length 1..unbounded
    std::vector<enum tt__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
/// class tt__BacklightCompensationOptions20 operations:
/// - soap_new_tt__BacklightCompensationOptions20(soap*) allocate
/// - soap_new_tt__BacklightCompensationOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__BacklightCompensationOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__BacklightCompensationOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__BacklightCompensationOptions20(soap*, tt__BacklightCompensationOptions20*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensationOptions20(soap, tt__BacklightCompensationOptions20*) serialize to a stream
class tt__BacklightCompensationOptions20
{ public:
/// @brief 'ON' or 'OFF'
/// Vector of enum tt__BacklightCompensationMode with length 1..unbounded
    std::vector<enum tt__BacklightCompensationMode> Mode                           1;
/// @brief Level range of BacklightCompensation.
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
/// class tt__ExposureOptions20 operations:
/// - soap_new_tt__ExposureOptions20(soap*) allocate
/// - soap_new_tt__ExposureOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__ExposureOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ExposureOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ExposureOptions20(soap*, tt__ExposureOptions20*) deserialize from a stream
/// - int soap_write_tt__ExposureOptions20(soap, tt__ExposureOptions20*) serialize to a stream
class tt__ExposureOptions20
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Vector of enum tt__ExposureMode with length 1..unbounded
    std::vector<enum tt__ExposureMode  > Mode                           1;
/// @brief The exposure priority mode (low noise/framerate).
/// Vector of enum tt__ExposurePriority with length 0..unbounded
    std::vector<enum tt__ExposurePriority> Priority                       0;
/// @brief Valid range of the Minimum ExposureTime.
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                0;	///< Optional element.
/// @brief Valid range of the Maximum ExposureTime.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                0;	///< Optional element.
/// @brief Valid range of the Minimum Gain.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        0;	///< Optional element.
/// @brief Valid range of the Maximum Gain.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        0;	///< Optional element.
/// @brief Valid range of the Minimum Iris.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        0;	///< Optional element.
/// @brief Valid range of the Maximum Iris.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        0;	///< Optional element.
/// @brief Valid range of the ExposureTime.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   0;	///< Optional element.
/// @brief Valid range of the Gain.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           0;	///< Optional element.
/// @brief Valid range of the Iris.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
/// class tt__MoveOptions20 operations:
/// - soap_new_tt__MoveOptions20(soap*) allocate
/// - soap_new_tt__MoveOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__MoveOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MoveOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MoveOptions20(soap*, tt__MoveOptions20*) deserialize from a stream
/// - int soap_write_tt__MoveOptions20(soap, tt__MoveOptions20*) serialize to a stream
class tt__MoveOptions20
{ public:
/// @brief Valid ranges for the absolute control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// @brief Valid ranges for the relative control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    tt__RelativeFocusOptions20*          Relative                       0;	///< Optional element.
/// @brief Valid ranges for the continuous control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
/// class tt__RelativeFocusOptions20 operations:
/// - soap_new_tt__RelativeFocusOptions20(soap*) allocate
/// - soap_new_tt__RelativeFocusOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__RelativeFocusOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelativeFocusOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelativeFocusOptions20(soap*, tt__RelativeFocusOptions20*) deserialize from a stream
/// - int soap_write_tt__RelativeFocusOptions20(soap, tt__RelativeFocusOptions20*) serialize to a stream
class tt__RelativeFocusOptions20
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
/// class tt__WhiteBalance20 operations:
/// - soap_new_tt__WhiteBalance20(soap*) allocate
/// - soap_new_tt__WhiteBalance20(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalance20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalance20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance20(soap, tt__WhiteBalance20*) serialize to a stream
class tt__WhiteBalance20
{ public:
/// @brief 'AUTO' or 'MANUAL'
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    tt__WhiteBalance20Extension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
/// class tt__WhiteBalance20Extension operations:
/// - soap_new_tt__WhiteBalance20Extension(soap*) allocate
/// - soap_new_tt__WhiteBalance20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalance20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalance20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance20Extension(soap, tt__WhiteBalance20Extension*) serialize to a stream
class tt__WhiteBalance20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
/// class tt__FocusConfiguration20 operations:
/// - soap_new_tt__FocusConfiguration20(soap*) allocate
/// - soap_new_tt__FocusConfiguration20(soap*, int num) allocate array
/// - soap_new_req_tt__FocusConfiguration20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusConfiguration20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration20(soap, tt__FocusConfiguration20*) serialize to a stream
class tt__FocusConfiguration20
{ public:
/// @brief Mode of auto focus. <ul> <li>AUTO - The device automatically adjusts focus.</li> <li>MANUAL - The device does not automatically adjust focus.</li> </ul> Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// @brief Parameter to set autofocus far limit (unit: meter).
/// Element FarLimit of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    tt__FocusConfiguration20Extension*   Extension                      0;	///< Optional element.
/// @brief Zero or more modes as defined in enumeration tt:AFModes.
/// Attribute AFMode of type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList*                  AFMode                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
/// class tt__FocusConfiguration20Extension operations:
/// - soap_new_tt__FocusConfiguration20Extension(soap*) allocate
/// - soap_new_tt__FocusConfiguration20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__FocusConfiguration20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusConfiguration20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration20Extension(soap, tt__FocusConfiguration20Extension*) serialize to a stream
class tt__FocusConfiguration20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
/// class tt__WhiteBalanceOptions20 operations:
/// - soap_new_tt__WhiteBalanceOptions20(soap*) allocate
/// - soap_new_tt__WhiteBalanceOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalanceOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalanceOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalanceOptions20(soap*, tt__WhiteBalanceOptions20*) deserialize from a stream
/// - int soap_write_tt__WhiteBalanceOptions20(soap, tt__WhiteBalanceOptions20*) serialize to a stream
class tt__WhiteBalanceOptions20
{ public:
/// @brief Mode of WhiteBalance. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Vector of enum tt__WhiteBalanceMode with length 1..unbounded
    std::vector<enum tt__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         0;	///< Optional element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
/// class tt__WhiteBalanceOptions20Extension operations:
/// - soap_new_tt__WhiteBalanceOptions20Extension(soap*) allocate
/// - soap_new_tt__WhiteBalanceOptions20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__WhiteBalanceOptions20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__WhiteBalanceOptions20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__WhiteBalanceOptions20Extension(soap*, tt__WhiteBalanceOptions20Extension*) deserialize from a stream
/// - int soap_write_tt__WhiteBalanceOptions20Extension(soap, tt__WhiteBalanceOptions20Extension*) serialize to a stream
class tt__WhiteBalanceOptions20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
/// class tt__FocusOptions20 operations:
/// - soap_new_tt__FocusOptions20(soap*) allocate
/// - soap_new_tt__FocusOptions20(soap*, int num) allocate array
/// - soap_new_req_tt__FocusOptions20(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusOptions20(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusOptions20(soap*, tt__FocusOptions20*) deserialize from a stream
/// - int soap_write_tt__FocusOptions20(soap, tt__FocusOptions20*) serialize to a stream
class tt__FocusOptions20
{ public:
/// @brief Supported modes for auto focus. <ul> <li>AUTO - The device supports automatic focus adjustment.</li> <li>MANUAL - The device supports manual focus adjustment.</li> </ul>
/// Vector of enum tt__AutoFocusMode with length 0..unbounded
    std::vector<enum tt__AutoFocusMode > AutoFocusModes                 0;
/// @brief Valid range of DefaultSpeed.
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   0;	///< Optional element.
/// @brief Valid range of NearLimit.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      0;	///< Optional element.
/// @brief Valid range of FarLimit.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    tt__FocusOptions20Extension*         Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
/// class tt__FocusOptions20Extension operations:
/// - soap_new_tt__FocusOptions20Extension(soap*) allocate
/// - soap_new_tt__FocusOptions20Extension(soap*, int num) allocate array
/// - soap_new_req_tt__FocusOptions20Extension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FocusOptions20Extension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FocusOptions20Extension(soap*, tt__FocusOptions20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusOptions20Extension(soap, tt__FocusOptions20Extension*) serialize to a stream
class tt__FocusOptions20Extension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Supported options for auto focus. Options shall be chosen from tt:AFModes.
/// Element AFModes of type "http://www.onvif.org/ver10/schema":StringAttrList.
    tt__StringAttrList*                  AFModes                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ToneCompensationOptions is a complexType.
/// class tt__ToneCompensationOptions operations:
/// - soap_new_tt__ToneCompensationOptions(soap*) allocate
/// - soap_new_tt__ToneCompensationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ToneCompensationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ToneCompensationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ToneCompensationOptions(soap*, tt__ToneCompensationOptions*) deserialize from a stream
/// - int soap_write_tt__ToneCompensationOptions(soap, tt__ToneCompensationOptions*) serialize to a stream
class tt__ToneCompensationOptions
{ public:
/// @brief Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Mode                           1;
/// @brief Indicates whether or not support Level parameter for Tone Compensation.
/// Element Level of type xs:boolean.
    bool                                 Level                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DefoggingOptions is a complexType.
/// class tt__DefoggingOptions operations:
/// - soap_new_tt__DefoggingOptions(soap*) allocate
/// - soap_new_tt__DefoggingOptions(soap*, int num) allocate array
/// - soap_new_req_tt__DefoggingOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DefoggingOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DefoggingOptions(soap*, tt__DefoggingOptions*) deserialize from a stream
/// - int soap_write_tt__DefoggingOptions(soap, tt__DefoggingOptions*) serialize to a stream
class tt__DefoggingOptions
{ public:
/// @brief Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Mode                           1;
/// @brief Indicates whether or not support Level parameter for Defogging.
/// Element Level of type xs:boolean.
    bool                                 Level                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":NoiseReductionOptions is a complexType.
/// class tt__NoiseReductionOptions operations:
/// - soap_new_tt__NoiseReductionOptions(soap*) allocate
/// - soap_new_tt__NoiseReductionOptions(soap*, int num) allocate array
/// - soap_new_req_tt__NoiseReductionOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NoiseReductionOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NoiseReductionOptions(soap*, tt__NoiseReductionOptions*) deserialize from a stream
/// - int soap_write_tt__NoiseReductionOptions(soap, tt__NoiseReductionOptions*) serialize to a stream
class tt__NoiseReductionOptions
{ public:
/// @brief Indicates whether or not support Level parameter for NoiseReduction.
/// Element Level of type xs:boolean.
    bool                                 Level                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
/// class tt__MessageExtension operations:
/// - soap_new_tt__MessageExtension(soap*) allocate
/// - soap_new_tt__MessageExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MessageExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MessageExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MessageExtension(soap*, tt__MessageExtension*) deserialize from a stream
/// - int soap_write_tt__MessageExtension(soap, tt__MessageExtension*) serialize to a stream
class tt__MessageExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemList is a complexType.
/// @brief List of parameters according to the corresponding ItemListDescription. Each item in the list shall have a unique name.
/// class tt__ItemList operations:
/// - soap_new_tt__ItemList(soap*) allocate
/// - soap_new_tt__ItemList(soap*, int num) allocate array
/// - soap_new_req_tt__ItemList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemList(soap*, tt__ItemList*) deserialize from a stream
/// - int soap_write_tt__ItemList(soap, tt__ItemList*) serialize to a stream
class tt__ItemList
{ public:
/// @brief Value name pair as defined by the corresponding description.
/// Vector of SimpleItem with length 0..unbounded
    std::vector<
/// class _tt__ItemList_SimpleItem operations:
/// - soap_new__tt__ItemList_SimpleItem(soap*) allocate
/// - soap_new__tt__ItemList_SimpleItem(soap*, int num) allocate array
/// - soap_new_req__tt__ItemList_SimpleItem(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemList_SimpleItem(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) deserialize from a stream
/// - int soap_write__tt__ItemList_SimpleItem(soap, _tt__ItemList_SimpleItem*) serialize to a stream
    class _tt__ItemList_SimpleItem
    {
/// @brief Item name.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief Item value. The type is defined in the corresponding description.
/// Attribute Value of type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }>                                  *SimpleItem                     0;
/// @brief Complex value structure.
/// Vector of ElementItem with length 0..unbounded
    std::vector<
/// class _tt__ItemList_ElementItem operations:
/// - soap_new__tt__ItemList_ElementItem(soap*) allocate
/// - soap_new__tt__ItemList_ElementItem(soap*, int num) allocate array
/// - soap_new_req__tt__ItemList_ElementItem(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemList_ElementItem(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) deserialize from a stream
/// - int soap_write__tt__ItemList_ElementItem(soap, _tt__ItemList_ElementItem*) serialize to a stream
    class _tt__ItemList_ElementItem
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// @brief Item name.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
    }>                                  *ElementItem                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    tt__ItemListExtension*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
/// class tt__ItemListExtension operations:
/// - soap_new_tt__ItemListExtension(soap*) allocate
/// - soap_new_tt__ItemListExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ItemListExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemListExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemListExtension(soap*, tt__ItemListExtension*) deserialize from a stream
/// - int soap_write_tt__ItemListExtension(soap, tt__ItemListExtension*) serialize to a stream
class tt__ItemListExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
/// class tt__MessageDescription operations:
/// - soap_new_tt__MessageDescription(soap*) allocate
/// - soap_new_tt__MessageDescription(soap*, int num) allocate array
/// - soap_new_req_tt__MessageDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MessageDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MessageDescription(soap*, tt__MessageDescription*) deserialize from a stream
/// - int soap_write_tt__MessageDescription(soap, tt__MessageDescription*) serialize to a stream
class tt__MessageDescription
{ public:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
/// class tt__MessageDescriptionExtension operations:
/// - soap_new_tt__MessageDescriptionExtension(soap*) allocate
/// - soap_new_tt__MessageDescriptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MessageDescriptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MessageDescriptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MessageDescriptionExtension(soap*, tt__MessageDescriptionExtension*) deserialize from a stream
/// - int soap_write_tt__MessageDescriptionExtension(soap, tt__MessageDescriptionExtension*) serialize to a stream
class tt__MessageDescriptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
/// @brief Describes a list of items. Each item in the list shall have a unique name. The list is designed as linear structure without optional or unbounded elements. Use ElementItems only when complex structures are inevitable.
/// class tt__ItemListDescription operations:
/// - soap_new_tt__ItemListDescription(soap*) allocate
/// - soap_new_tt__ItemListDescription(soap*, int num) allocate array
/// - soap_new_req_tt__ItemListDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemListDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemListDescription(soap*, tt__ItemListDescription*) deserialize from a stream
/// - int soap_write_tt__ItemListDescription(soap, tt__ItemListDescription*) serialize to a stream
class tt__ItemListDescription
{ public:
/// @brief Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// Vector of SimpleItemDescription with length 0..unbounded
    std::vector<
/// class _tt__ItemListDescription_SimpleItemDescription operations:
/// - soap_new__tt__ItemListDescription_SimpleItemDescription(soap*) allocate
/// - soap_new__tt__ItemListDescription_SimpleItemDescription(soap*, int num) allocate array
/// - soap_new_req__tt__ItemListDescription_SimpleItemDescription(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemListDescription_SimpleItemDescription(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemListDescription_SimpleItemDescription(soap*, _tt__ItemListDescription_SimpleItemDescription*) deserialize from a stream
/// - int soap_write__tt__ItemListDescription_SimpleItemDescription(soap, _tt__ItemListDescription_SimpleItemDescription*) serialize to a stream
    class _tt__ItemListDescription_SimpleItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }>                                  *SimpleItemDescription          0;
/// @brief Description of a complex type. The Type must reference a defined type.
/// Vector of ElementItemDescription with length 0..unbounded
    std::vector<
/// class _tt__ItemListDescription_ElementItemDescription operations:
/// - soap_new__tt__ItemListDescription_ElementItemDescription(soap*) allocate
/// - soap_new__tt__ItemListDescription_ElementItemDescription(soap*, int num) allocate array
/// - soap_new_req__tt__ItemListDescription_ElementItemDescription(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ItemListDescription_ElementItemDescription(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ItemListDescription_ElementItemDescription(soap*, _tt__ItemListDescription_ElementItemDescription*) deserialize from a stream
/// - int soap_write__tt__ItemListDescription_ElementItemDescription(soap, _tt__ItemListDescription_ElementItemDescription*) serialize to a stream
    class _tt__ItemListDescription_ElementItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief The type of the item. The Type must reference a defined type.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }>                                  *ElementItemDescription         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    tt__ItemListDescriptionExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
/// class tt__ItemListDescriptionExtension operations:
/// - soap_new_tt__ItemListDescriptionExtension(soap*) allocate
/// - soap_new_tt__ItemListDescriptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ItemListDescriptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ItemListDescriptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ItemListDescriptionExtension(soap*, tt__ItemListDescriptionExtension*) deserialize from a stream
/// - int soap_write_tt__ItemListDescriptionExtension(soap, tt__ItemListDescriptionExtension*) serialize to a stream
class tt__ItemListDescriptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Polyline is a complexType.
/// class tt__Polyline operations:
/// - soap_new_tt__Polyline(soap*) allocate
/// - soap_new_tt__Polyline(soap*, int num) allocate array
/// - soap_new_req_tt__Polyline(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Polyline(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Polyline(soap*, tt__Polyline*) deserialize from a stream
/// - int soap_write_tt__Polyline(soap, tt__Polyline*) serialize to a stream
class tt__Polyline
{ public:
/// Vector of tt__Vector* with length 2..unbounded
    std::vector<tt__Vector*            > Point                          2;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
/// class tt__AnalyticsEngineConfiguration operations:
/// - soap_new_tt__AnalyticsEngineConfiguration(soap*) allocate
/// - soap_new_tt__AnalyticsEngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineConfiguration(soap, tt__AnalyticsEngineConfiguration*) serialize to a stream
class tt__AnalyticsEngineConfiguration
{ public:
/// Vector of tt__Config* with length 0..unbounded
    std::vector<tt__Config*            > AnalyticsModule                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
/// class tt__AnalyticsEngineConfigurationExtension operations:
/// - soap_new_tt__AnalyticsEngineConfigurationExtension(soap*) allocate
/// - soap_new_tt__AnalyticsEngineConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineConfigurationExtension(soap, tt__AnalyticsEngineConfigurationExtension*) serialize to a stream
class tt__AnalyticsEngineConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
/// class tt__RuleEngineConfiguration operations:
/// - soap_new_tt__RuleEngineConfiguration(soap*) allocate
/// - soap_new_tt__RuleEngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__RuleEngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RuleEngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__RuleEngineConfiguration(soap, tt__RuleEngineConfiguration*) serialize to a stream
class tt__RuleEngineConfiguration
{ public:
/// Vector of tt__Config* with length 0..unbounded
    std::vector<tt__Config*            > Rule                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
/// class tt__RuleEngineConfigurationExtension operations:
/// - soap_new_tt__RuleEngineConfigurationExtension(soap*) allocate
/// - soap_new_tt__RuleEngineConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RuleEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RuleEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__RuleEngineConfigurationExtension(soap, tt__RuleEngineConfigurationExtension*) serialize to a stream
class tt__RuleEngineConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Config is a complexType.
/// class tt__Config operations:
/// - soap_new_tt__Config(soap*) allocate
/// - soap_new_tt__Config(soap*, int num) allocate array
/// - soap_new_req_tt__Config(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Config(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Config(soap*, tt__Config*) deserialize from a stream
/// - int soap_write_tt__Config(soap, tt__Config*) serialize to a stream
class tt__Config
{ public:
/// @brief List of configuration parameters as defined in the correspding description.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Parameters                     1;	///< Required element.
/// @brief Name of the configuration.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief The Type attribute specifies the type of rule and shall be equal to value of one of Name attributes of ConfigDescription elements returned by GetSupportedRules and GetSupportedAnalyticsModules command.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
/// class tt__ConfigDescription operations:
/// - soap_new_tt__ConfigDescription(soap*) allocate
/// - soap_new_tt__ConfigDescription(soap*, int num) allocate array
/// - soap_new_req_tt__ConfigDescription(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ConfigDescription(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ConfigDescription(soap*, tt__ConfigDescription*) deserialize from a stream
/// - int soap_write_tt__ConfigDescription(soap, tt__ConfigDescription*) serialize to a stream
class tt__ConfigDescription
{ public:
/// @brief List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems should be used to transport the information to ease parsing of dynamically defined messages by a client application.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Parameters                     1;	///< Required element.
/// @brief The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable. The name of all Items must be unique within all Items contained in any group of this Message. Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// Vector of Messages with length 0..unbounded
    std::vector<
/// class _tt__ConfigDescription_Messages operations:
/// - soap_new__tt__ConfigDescription_Messages(soap*) allocate
/// - soap_new__tt__ConfigDescription_Messages(soap*, int num) allocate array
/// - soap_new_req__tt__ConfigDescription_Messages(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ConfigDescription_Messages(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ConfigDescription_Messages(soap*, _tt__ConfigDescription_Messages*) deserialize from a stream
/// - int soap_write__tt__ConfigDescription_Messages(soap, _tt__ConfigDescription_Messages*) serialize to a stream
    class _tt__ConfigDescription_Messages
    {
/// INHERITED FROM tt__MessageDescription:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED FROM tt__MessageDescription
/// @brief The topic of the message. For historical reason the element is named ParentTopic, but the full topic is expected.
/// Element ParentTopic of type xs:string.
    std::string                          ParentTopic                    1;	///< Required element.
    }>                                  *Messages                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    tt__ConfigDescriptionExtension*      Extension                      0;	///< Optional element.
/// @brief The Name attribute (e.g. "tt::LineDetector") uniquely identifies the type of rule, not a type definition in a schema.
/// Attribute Name of type xs:QName.
   @xsd__QName                           Name                           1;	///< Required attribute.
/// @brief The fixed attribute signals that it is not allowed to add or remove this type of configuration.
/// Attribute fixed of type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// @brief The maxInstances attribute signals the maximum number of instances per configuration.
/// Attribute maxInstances of type xs:integer.
   @xsd__integer*                        maxInstances                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
/// class tt__ConfigDescriptionExtension operations:
/// - soap_new_tt__ConfigDescriptionExtension(soap*) allocate
/// - soap_new_tt__ConfigDescriptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ConfigDescriptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ConfigDescriptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ConfigDescriptionExtension(soap*, tt__ConfigDescriptionExtension*) deserialize from a stream
/// - int soap_write_tt__ConfigDescriptionExtension(soap, tt__ConfigDescriptionExtension*) serialize to a stream
class tt__ConfigDescriptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
/// class tt__SupportedRules operations:
/// - soap_new_tt__SupportedRules(soap*) allocate
/// - soap_new_tt__SupportedRules(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedRules(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedRules(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedRules(soap*, tt__SupportedRules*) deserialize from a stream
/// - int soap_write_tt__SupportedRules(soap, tt__SupportedRules*) serialize to a stream
class tt__SupportedRules
{ public:
/// @brief Lists the location of all schemas that are referenced in the rules.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > RuleContentSchemaLocation      0;
/// @brief List of rules supported by the Video Analytics configuration..
/// Vector of tt__ConfigDescription* with length 0..unbounded
    std::vector<tt__ConfigDescription* > RuleDescription                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    tt__SupportedRulesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
/// class tt__SupportedRulesExtension operations:
/// - soap_new_tt__SupportedRulesExtension(soap*) allocate
/// - soap_new_tt__SupportedRulesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedRulesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedRulesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedRulesExtension(soap*, tt__SupportedRulesExtension*) deserialize from a stream
/// - int soap_write_tt__SupportedRulesExtension(soap, tt__SupportedRulesExtension*) serialize to a stream
class tt__SupportedRulesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
/// class tt__SupportedAnalyticsModules operations:
/// - soap_new_tt__SupportedAnalyticsModules(soap*) allocate
/// - soap_new_tt__SupportedAnalyticsModules(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedAnalyticsModules(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedAnalyticsModules(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedAnalyticsModules(soap*, tt__SupportedAnalyticsModules*) deserialize from a stream
/// - int soap_write_tt__SupportedAnalyticsModules(soap, tt__SupportedAnalyticsModules*) serialize to a stream
class tt__SupportedAnalyticsModules
{ public:
/// @brief It optionally contains a list of URLs that provide the location of schema files. These schema files describe the types and elements used in the analytics module descriptions. Analytics module descriptions that reference types or elements imported from any ONVIF defined schema files need not explicitly list those schema files.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > AnalyticsModuleContentSchemaLocation 0;
/// Vector of tt__ConfigDescription* with length 0..unbounded
    std::vector<tt__ConfigDescription* > AnalyticsModuleDescription     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
/// class tt__SupportedAnalyticsModulesExtension operations:
/// - soap_new_tt__SupportedAnalyticsModulesExtension(soap*) allocate
/// - soap_new_tt__SupportedAnalyticsModulesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SupportedAnalyticsModulesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SupportedAnalyticsModulesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SupportedAnalyticsModulesExtension(soap*, tt__SupportedAnalyticsModulesExtension*) deserialize from a stream
/// - int soap_write_tt__SupportedAnalyticsModulesExtension(soap, tt__SupportedAnalyticsModulesExtension*) serialize to a stream
class tt__SupportedAnalyticsModulesExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
/// class tt__PolygonConfiguration operations:
/// - soap_new_tt__PolygonConfiguration(soap*) allocate
/// - soap_new_tt__PolygonConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PolygonConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolygonConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolygonConfiguration(soap*, tt__PolygonConfiguration*) deserialize from a stream
/// - int soap_write_tt__PolygonConfiguration(soap, tt__PolygonConfiguration*) serialize to a stream
class tt__PolygonConfiguration
{ public:
/// @brief Contains Polygon configuration for rule parameters
/// Element Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
    tt__Polygon*                         Polygon                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
/// class tt__PolylineArray operations:
/// - soap_new_tt__PolylineArray(soap*) allocate
/// - soap_new_tt__PolylineArray(soap*, int num) allocate array
/// - soap_new_req_tt__PolylineArray(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolylineArray(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolylineArray(soap*, tt__PolylineArray*) deserialize from a stream
/// - int soap_write_tt__PolylineArray(soap, tt__PolylineArray*) serialize to a stream
class tt__PolylineArray
{ public:
/// @brief Contains array of Polyline
/// Vector of tt__Polyline* with length 1..unbounded
    std::vector<tt__Polyline*          > Segment                        1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    tt__PolylineArrayExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
/// class tt__PolylineArrayExtension operations:
/// - soap_new_tt__PolylineArrayExtension(soap*) allocate
/// - soap_new_tt__PolylineArrayExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PolylineArrayExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolylineArrayExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolylineArrayExtension(soap*, tt__PolylineArrayExtension*) deserialize from a stream
/// - int soap_write_tt__PolylineArrayExtension(soap, tt__PolylineArrayExtension*) serialize to a stream
class tt__PolylineArrayExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
/// class tt__PolylineArrayConfiguration operations:
/// - soap_new_tt__PolylineArrayConfiguration(soap*) allocate
/// - soap_new_tt__PolylineArrayConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PolylineArrayConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PolylineArrayConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PolylineArrayConfiguration(soap*, tt__PolylineArrayConfiguration*) deserialize from a stream
/// - int soap_write_tt__PolylineArrayConfiguration(soap, tt__PolylineArrayConfiguration*) serialize to a stream
class tt__PolylineArrayConfiguration
{ public:
/// @brief Contains PolylineArray configuration data
/// Element PolylineArray of type "http://www.onvif.org/ver10/schema":PolylineArray.
    tt__PolylineArray*                   PolylineArray                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
/// class tt__MotionExpression operations:
/// - soap_new_tt__MotionExpression(soap*) allocate
/// - soap_new_tt__MotionExpression(soap*, int num) allocate array
/// - soap_new_req_tt__MotionExpression(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MotionExpression(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MotionExpression(soap*, tt__MotionExpression*) deserialize from a stream
/// - int soap_write_tt__MotionExpression(soap, tt__MotionExpression*) serialize to a stream
class tt__MotionExpression
{ public:
/// @brief Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// Element Expression of type xs:string.
    std::string                          Expression                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute Type of type xs:string.
   @std::string*                         Type                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
/// class tt__MotionExpressionConfiguration operations:
/// - soap_new_tt__MotionExpressionConfiguration(soap*) allocate
/// - soap_new_tt__MotionExpressionConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__MotionExpressionConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MotionExpressionConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MotionExpressionConfiguration(soap*, tt__MotionExpressionConfiguration*) deserialize from a stream
/// - int soap_write_tt__MotionExpressionConfiguration(soap, tt__MotionExpressionConfiguration*) serialize to a stream
class tt__MotionExpressionConfiguration
{ public:
/// @brief Contains Rule MotionExpression configuration
/// Element MotionExpression of type "http://www.onvif.org/ver10/schema":MotionExpression.
    tt__MotionExpression*                MotionExpression               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
/// class tt__CellLayout operations:
/// - soap_new_tt__CellLayout(soap*) allocate
/// - soap_new_tt__CellLayout(soap*, int num) allocate array
/// - soap_new_req_tt__CellLayout(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CellLayout(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CellLayout(soap*, tt__CellLayout*) deserialize from a stream
/// - int soap_write_tt__CellLayout(soap, tt__CellLayout*) serialize to a stream
class tt__CellLayout
{ public:
/// @brief Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Number of columns of the cell grid (x dimension)
/// Attribute Columns of type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// @brief Number of rows of the cell grid (y dimension)
/// Attribute Rows of type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
/// @brief Configuration of the streaming and coding settings of a Video window.
/// class tt__PaneConfiguration operations:
/// - soap_new_tt__PaneConfiguration(soap*) allocate
/// - soap_new_tt__PaneConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PaneConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneConfiguration(soap*, tt__PaneConfiguration*) deserialize from a stream
/// - int soap_write_tt__PaneConfiguration(soap, tt__PaneConfiguration*) serialize to a stream
class tt__PaneConfiguration
{ public:
/// @brief Optional name of the pane configuration.
/// Element PaneName of type xs:string.
    std::string*                         PaneName                       0;	///< Optional element.
/// @brief If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  AudioOutputToken               0;	///< Optional element.
/// @brief If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane. The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the DeviceIO service.
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  AudioSourceToken               0;	///< Optional element.
/// @brief The configuration of the audio encoder including codec, bitrate and sample rate.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// @brief A pointer to a Receiver that has the necessary information to receive data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the GetReceivers command of the Receiver Service.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ReceiverToken                  0;	///< Optional element.
/// @brief A unique identifier in the display device.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
/// @brief A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// class tt__PaneLayout operations:
/// - soap_new_tt__PaneLayout(soap*) allocate
/// - soap_new_tt__PaneLayout(soap*, int num) allocate array
/// - soap_new_req_tt__PaneLayout(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneLayout(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneLayout(soap*, tt__PaneLayout*) deserialize from a stream
/// - int soap_write_tt__PaneLayout(soap, tt__PaneLayout*) serialize to a stream
class tt__PaneLayout
{ public:
/// @brief Reference to the configuration of the streaming and coding parameters.
/// Element Pane of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// @brief Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// Element Area of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Area                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Layout is a complexType.
/// @brief A layout describes a set of Video windows that are displayed simultaniously on a display.
/// class tt__Layout operations:
/// - soap_new_tt__Layout(soap*) allocate
/// - soap_new_tt__Layout(soap*, int num) allocate array
/// - soap_new_req_tt__Layout(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Layout(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Layout(soap*, tt__Layout*) deserialize from a stream
/// - int soap_write_tt__Layout(soap, tt__Layout*) serialize to a stream
class tt__Layout
{ public:
/// @brief List of panes assembling the display layout.
/// Vector of tt__PaneLayout* with length 1..unbounded
    std::vector<tt__PaneLayout*        > PaneLayout                     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutExtension.
    tt__LayoutExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
/// class tt__LayoutExtension operations:
/// - soap_new_tt__LayoutExtension(soap*) allocate
/// - soap_new_tt__LayoutExtension(soap*, int num) allocate array
/// - soap_new_req_tt__LayoutExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LayoutExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LayoutExtension(soap*, tt__LayoutExtension*) deserialize from a stream
/// - int soap_write_tt__LayoutExtension(soap, tt__LayoutExtension*) serialize to a stream
class tt__LayoutExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
/// @brief This type contains the Audio and Video coding capabilities of a display service.
/// class tt__CodingCapabilities operations:
/// - soap_new_tt__CodingCapabilities(soap*) allocate
/// - soap_new_tt__CodingCapabilities(soap*, int num) allocate array
/// - soap_new_req_tt__CodingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CodingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CodingCapabilities(soap*, tt__CodingCapabilities*) deserialize from a stream
/// - int soap_write_tt__CodingCapabilities(soap, tt__CodingCapabilities*) serialize to a stream
class tt__CodingCapabilities
{ public:
/// @brief If the device supports audio encoding this section describes the supported codecs and their configuration.
/// Element AudioEncodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// @brief If the device supports audio decoding this section describes the supported codecs and their settings.
/// Element AudioDecodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// @brief This section describes the supported video codesc and their configuration.
/// Element VideoDecodingCapabilities of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
/// @brief The options supported for a display layout.
/// class tt__LayoutOptions operations:
/// - soap_new_tt__LayoutOptions(soap*) allocate
/// - soap_new_tt__LayoutOptions(soap*, int num) allocate array
/// - soap_new_req_tt__LayoutOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LayoutOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LayoutOptions(soap*, tt__LayoutOptions*) deserialize from a stream
/// - int soap_write_tt__LayoutOptions(soap, tt__LayoutOptions*) serialize to a stream
class tt__LayoutOptions
{ public:
/// @brief Lists the possible Pane Layouts of the Video Output
/// Vector of tt__PaneLayoutOptions* with length 1..unbounded
    std::vector<tt__PaneLayoutOptions* > PaneLayoutOptions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    tt__LayoutOptionsExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
/// class tt__LayoutOptionsExtension operations:
/// - soap_new_tt__LayoutOptionsExtension(soap*) allocate
/// - soap_new_tt__LayoutOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__LayoutOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LayoutOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LayoutOptionsExtension(soap*, tt__LayoutOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__LayoutOptionsExtension(soap, tt__LayoutOptionsExtension*) serialize to a stream
class tt__LayoutOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
/// @brief Description of a pane layout describing a complete display layout.
/// class tt__PaneLayoutOptions operations:
/// - soap_new_tt__PaneLayoutOptions(soap*) allocate
/// - soap_new_tt__PaneLayoutOptions(soap*, int num) allocate array
/// - soap_new_req_tt__PaneLayoutOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneLayoutOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneLayoutOptions(soap*, tt__PaneLayoutOptions*) deserialize from a stream
/// - int soap_write_tt__PaneLayoutOptions(soap, tt__PaneLayoutOptions*) serialize to a stream
class tt__PaneLayoutOptions
{ public:
/// @brief List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// Vector of tt__Rectangle* with length 1..unbounded
    std::vector<tt__Rectangle*         > Area                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    tt__PaneOptionExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
/// class tt__PaneOptionExtension operations:
/// - soap_new_tt__PaneOptionExtension(soap*) allocate
/// - soap_new_tt__PaneOptionExtension(soap*, int num) allocate array
/// - soap_new_req_tt__PaneOptionExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PaneOptionExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PaneOptionExtension(soap*, tt__PaneOptionExtension*) deserialize from a stream
/// - int soap_write_tt__PaneOptionExtension(soap, tt__PaneOptionExtension*) serialize to a stream
class tt__PaneOptionExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Receiver is a complexType.
/// @brief Description of a receiver, including its token and configuration.
/// class tt__Receiver operations:
/// - soap_new_tt__Receiver(soap*) allocate
/// - soap_new_tt__Receiver(soap*, int num) allocate array
/// - soap_new_req_tt__Receiver(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Receiver(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Receiver(soap*, tt__Receiver*) deserialize from a stream
/// - int soap_write_tt__Receiver(soap, tt__Receiver*) serialize to a stream
class tt__Receiver
{ public:
/// @brief Unique identifier of the receiver.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// @brief Describes the configuration of the receiver.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
/// @brief Describes the configuration of a receiver.
/// class tt__ReceiverConfiguration operations:
/// - soap_new_tt__ReceiverConfiguration(soap*) allocate
/// - soap_new_tt__ReceiverConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__ReceiverConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReceiverConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReceiverConfiguration(soap*, tt__ReceiverConfiguration*) deserialize from a stream
/// - int soap_write_tt__ReceiverConfiguration(soap, tt__ReceiverConfiguration*) serialize to a stream
class tt__ReceiverConfiguration
{ public:
/// @brief The following connection modes are defined:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// @brief Details of the URI to which the receiver should connect.
/// Element MediaUri of type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// @brief Stream connection parameters.
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
/// @brief Contains information about a receiver's current state.
/// class tt__ReceiverStateInformation operations:
/// - soap_new_tt__ReceiverStateInformation(soap*) allocate
/// - soap_new_tt__ReceiverStateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__ReceiverStateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReceiverStateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReceiverStateInformation(soap*, tt__ReceiverStateInformation*) deserialize from a stream
/// - int soap_write_tt__ReceiverStateInformation(soap, tt__ReceiverStateInformation*) serialize to a stream
class tt__ReceiverStateInformation
{ public:
/// @brief The connection state of the receiver may have one of the following states:
/// Element State of type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// @brief Indicates whether or not the receiver was created automatically.
/// Element AutoCreated of type xs:boolean.
    bool                                 AutoCreated                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
/// class tt__SourceReference operations:
/// - soap_new_tt__SourceReference(soap*) allocate
/// - soap_new_tt__SourceReference(soap*, int num) allocate array
/// - soap_new_req_tt__SourceReference(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SourceReference(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SourceReference(soap*, tt__SourceReference*) deserialize from a stream
/// - int soap_write_tt__SourceReference(soap, tt__SourceReference*) serialize to a stream
class tt__SourceReference
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute Type of type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default value="http://www.onvif.org/ver10/schema/Receiver".
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
/// class tt__DateTimeRange operations:
/// - soap_new_tt__DateTimeRange(soap*) allocate
/// - soap_new_tt__DateTimeRange(soap*, int num) allocate array
/// - soap_new_req_tt__DateTimeRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DateTimeRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DateTimeRange(soap*, tt__DateTimeRange*) deserialize from a stream
/// - int soap_write_tt__DateTimeRange(soap, tt__DateTimeRange*) serialize to a stream
class tt__DateTimeRange
{ public:
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
/// class tt__RecordingSummary operations:
/// - soap_new_tt__RecordingSummary(soap*) allocate
/// - soap_new_tt__RecordingSummary(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingSummary(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingSummary(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingSummary(soap*, tt__RecordingSummary*) deserialize from a stream
/// - int soap_write_tt__RecordingSummary(soap, tt__RecordingSummary*) serialize to a stream
class tt__RecordingSummary
{ public:
/// @brief The earliest point in time where there is recorded data on the device.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The most recent point in time where there is recorded data on the device.
/// Element DataUntil of type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// @brief The device contains this many recordings.
/// Element NumberRecordings of type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
/// @brief A structure for defining a limited scope when searching in recorded data.
/// class tt__SearchScope operations:
/// - soap_new_tt__SearchScope(soap*) allocate
/// - soap_new_tt__SearchScope(soap*, int num) allocate array
/// - soap_new_req_tt__SearchScope(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SearchScope(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SearchScope(soap*, tt__SearchScope*) deserialize from a stream
/// - int soap_write_tt__SearchScope(soap, tt__SearchScope*) serialize to a stream
class tt__SearchScope
{ public:
/// @brief A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// Vector of tt__SourceReference* with length 0..unbounded
    std::vector<tt__SourceReference*   > IncludedSources                0;
/// @brief A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// Vector of tt__RecordingReference with length 0..unbounded
    std::vector<tt__RecordingReference > IncludedRecordings             0;
/// @brief An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// Element RecordingInformationFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression*                 RecordingInformationFilter     0;	///< Optional element.
/// @brief Extension point
/// Element Extension of type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    tt__SearchScopeExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
/// class tt__SearchScopeExtension operations:
/// - soap_new_tt__SearchScopeExtension(soap*) allocate
/// - soap_new_tt__SearchScopeExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SearchScopeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SearchScopeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SearchScopeExtension(soap*, tt__SearchScopeExtension*) deserialize from a stream
/// - int soap_write_tt__SearchScopeExtension(soap, tt__SearchScopeExtension*) serialize to a stream
class tt__SearchScopeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
/// class tt__PTZPositionFilter operations:
/// - soap_new_tt__PTZPositionFilter(soap*) allocate
/// - soap_new_tt__PTZPositionFilter(soap*, int num) allocate array
/// - soap_new_req_tt__PTZPositionFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZPositionFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZPositionFilter(soap*, tt__PTZPositionFilter*) deserialize from a stream
/// - int soap_write_tt__PTZPositionFilter(soap, tt__PTZPositionFilter*) serialize to a stream
class tt__PTZPositionFilter
{ public:
/// @brief The lower boundary of the PTZ volume to look for.
/// Element MinPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MinPosition                    1;	///< Required element.
/// @brief The upper boundary of the PTZ volume to look for.
/// Element MaxPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MaxPosition                    1;	///< Required element.
/// @brief If true, search for when entering the specified PTZ volume.
/// Element EnterOrExit of type xs:boolean.
    bool                                 EnterOrExit                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
/// class tt__MetadataFilter operations:
/// - soap_new_tt__MetadataFilter(soap*) allocate
/// - soap_new_tt__MetadataFilter(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataFilter(soap*, tt__MetadataFilter*) deserialize from a stream
/// - int soap_write_tt__MetadataFilter(soap, tt__MetadataFilter*) serialize to a stream
class tt__MetadataFilter
{ public:
/// Element MetadataStreamFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
/// class tt__FindRecordingResultList operations:
/// - soap_new_tt__FindRecordingResultList(soap*) allocate
/// - soap_new_tt__FindRecordingResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindRecordingResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindRecordingResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindRecordingResultList(soap*, tt__FindRecordingResultList*) deserialize from a stream
/// - int soap_write_tt__FindRecordingResultList(soap, tt__FindRecordingResultList*) serialize to a stream
class tt__FindRecordingResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A RecordingInformation structure for each found recording matching the search.
/// Vector of tt__RecordingInformation* with length 0..unbounded
    std::vector<tt__RecordingInformation*> RecordingInformation           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
/// class tt__FindEventResultList operations:
/// - soap_new_tt__FindEventResultList(soap*) allocate
/// - soap_new_tt__FindEventResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindEventResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindEventResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindEventResultList(soap*, tt__FindEventResultList*) deserialize from a stream
/// - int soap_write_tt__FindEventResultList(soap, tt__FindEventResultList*) serialize to a stream
class tt__FindEventResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A FindEventResult structure for each found event matching the search.
/// Vector of tt__FindEventResult* with length 0..unbounded
    std::vector<tt__FindEventResult*   > Result                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
/// class tt__FindEventResult operations:
/// - soap_new_tt__FindEventResult(soap*) allocate
/// - soap_new_tt__FindEventResult(soap*, int num) allocate array
/// - soap_new_req_tt__FindEventResult(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindEventResult(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindEventResult(soap*, tt__FindEventResult*) deserialize from a stream
/// - int soap_write_tt__FindEventResult(soap, tt__FindEventResult*) serialize to a stream
class tt__FindEventResult
{ public:
/// @brief The recording where this event was found. Empty string if no recording is associated with this event.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A reference to the track where this event was found. Empty string if no track is associated with this event.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief The time when the event occured.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The description of the event.
/// Element Event of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// @brief If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// Element StartStateEvent of type xs:boolean.
    bool                                 StartStateEvent                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
/// class tt__FindPTZPositionResultList operations:
/// - soap_new_tt__FindPTZPositionResultList(soap*) allocate
/// - soap_new_tt__FindPTZPositionResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindPTZPositionResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindPTZPositionResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindPTZPositionResultList(soap*, tt__FindPTZPositionResultList*) deserialize from a stream
/// - int soap_write_tt__FindPTZPositionResultList(soap, tt__FindPTZPositionResultList*) serialize to a stream
class tt__FindPTZPositionResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A FindPTZPositionResult structure for each found PTZ position matching the search.
/// Vector of tt__FindPTZPositionResult* with length 0..unbounded
    std::vector<tt__FindPTZPositionResult*> Result                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
/// class tt__FindPTZPositionResult operations:
/// - soap_new_tt__FindPTZPositionResult(soap*) allocate
/// - soap_new_tt__FindPTZPositionResult(soap*, int num) allocate array
/// - soap_new_req_tt__FindPTZPositionResult(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindPTZPositionResult(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindPTZPositionResult(soap*, tt__FindPTZPositionResult*) deserialize from a stream
/// - int soap_write_tt__FindPTZPositionResult(soap, tt__FindPTZPositionResult*) serialize to a stream
class tt__FindPTZPositionResult
{ public:
/// @brief A reference to the recording containing the PTZ position.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the PTZ position.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief The time when the PTZ position was valid.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The PTZ position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
/// class tt__FindMetadataResultList operations:
/// - soap_new_tt__FindMetadataResultList(soap*) allocate
/// - soap_new_tt__FindMetadataResultList(soap*, int num) allocate array
/// - soap_new_req_tt__FindMetadataResultList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindMetadataResultList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindMetadataResultList(soap*, tt__FindMetadataResultList*) deserialize from a stream
/// - int soap_write_tt__FindMetadataResultList(soap, tt__FindMetadataResultList*) serialize to a stream
class tt__FindMetadataResultList
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// @brief A FindMetadataResult structure for each found set of Metadata matching the search.
/// Vector of tt__FindMetadataResult* with length 0..unbounded
    std::vector<tt__FindMetadataResult*> Result                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
/// class tt__FindMetadataResult operations:
/// - soap_new_tt__FindMetadataResult(soap*) allocate
/// - soap_new_tt__FindMetadataResult(soap*, int num) allocate array
/// - soap_new_req_tt__FindMetadataResult(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FindMetadataResult(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FindMetadataResult(soap*, tt__FindMetadataResult*) deserialize from a stream
/// - int soap_write_tt__FindMetadataResult(soap, tt__FindMetadataResult*) serialize to a stream
class tt__FindMetadataResult
{ public:
/// @brief A reference to the recording containing the metadata.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the matching metadata.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief The point in time when the matching metadata occurs in the metadata track.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
/// class tt__RecordingInformation operations:
/// - soap_new_tt__RecordingInformation(soap*) allocate
/// - soap_new_tt__RecordingInformation(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingInformation(soap*, tt__RecordingInformation*) deserialize from a stream
/// - int soap_write_tt__RecordingInformation(soap, tt__RecordingInformation*) serialize to a stream
class tt__RecordingInformation
{ public:
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single recording is intended to record related material, there is just one source. It is indicates the physical location or the major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// Element EarliestRecording of type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element LatestRecording of type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// @brief Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// Vector of tt__TrackInformation* with length 0..unbounded
    std::vector<tt__TrackInformation*  > Track                          0;
/// Element RecordingStatus of type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
/// @brief A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// class tt__RecordingSourceInformation operations:
/// - soap_new_tt__RecordingSourceInformation(soap*) allocate
/// - soap_new_tt__RecordingSourceInformation(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingSourceInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingSourceInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingSourceInformation(soap*, tt__RecordingSourceInformation*) deserialize from a stream
/// - int soap_write_tt__RecordingSourceInformation(soap, tt__RecordingSourceInformation*) serialize to a stream
class tt__RecordingSourceInformation
{ public:
/// @brief Identifier for the source chosen by the client that creates the structure. This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// Element SourceId of type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// @brief Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Informative description of the physical location of the source, e.g. the coordinates on a map.
/// Element Location of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// @brief Informative description of the source.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @brief URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// Element Address of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
/// class tt__TrackInformation operations:
/// - soap_new_tt__TrackInformation(soap*) allocate
/// - soap_new_tt__TrackInformation(soap*, int num) allocate array
/// - soap_new_req_tt__TrackInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackInformation(soap*, tt__TrackInformation*) deserialize from a stream
/// - int soap_write_tt__TrackInformation(soap, tt__TrackInformation*) serialize to a stream
class tt__TrackInformation
{ public:
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief Type of the track: "Video", "Audio" or "Metadata". The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// @brief Informative description of the contents of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// @brief The start date and time of the oldest recorded data in the track.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The stop date and time of the newest recorded data in the track.
/// Element DataTo of type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
/// @brief A set of media attributes valid for a recording at a point in time or for a time interval.
/// class tt__MediaAttributes operations:
/// - soap_new_tt__MediaAttributes(soap*) allocate
/// - soap_new_tt__MediaAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__MediaAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MediaAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MediaAttributes(soap*, tt__MediaAttributes*) deserialize from a stream
/// - int soap_write_tt__MediaAttributes(soap, tt__MediaAttributes*) serialize to a stream
class tt__MediaAttributes
{ public:
/// @brief A reference to the recording that has these attributes.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief A set of attributes for each track.
/// Vector of tt__TrackAttributes* with length 0..unbounded
    std::vector<tt__TrackAttributes*   > TrackAttributes                0;
/// @brief The attributes are valid from this point in time in the recording.
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// @brief The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
/// class tt__TrackAttributes operations:
/// - soap_new_tt__TrackAttributes(soap*) allocate
/// - soap_new_tt__TrackAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__TrackAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackAttributes(soap*, tt__TrackAttributes*) deserialize from a stream
/// - int soap_write_tt__TrackAttributes(soap, tt__TrackAttributes*) serialize to a stream
class tt__TrackAttributes
{ public:
/// @brief The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// Element TrackInformation of type "http://www.onvif.org/ver10/schema":TrackInformation.
    tt__TrackInformation*                TrackInformation               1;	///< Required element.
/// @brief If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// Element VideoAttributes of type "http://www.onvif.org/ver10/schema":VideoAttributes.
    tt__VideoAttributes*                 VideoAttributes                0;	///< Optional element.
/// @brief If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// Element AudioAttributes of type "http://www.onvif.org/ver10/schema":AudioAttributes.
    tt__AudioAttributes*                 AudioAttributes                0;	///< Optional element.
/// @brief If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// Element MetadataAttributes of type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    tt__MetadataAttributes*              MetadataAttributes             0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    tt__TrackAttributesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
/// class tt__TrackAttributesExtension operations:
/// - soap_new_tt__TrackAttributesExtension(soap*) allocate
/// - soap_new_tt__TrackAttributesExtension(soap*, int num) allocate array
/// - soap_new_req_tt__TrackAttributesExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackAttributesExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackAttributesExtension(soap*, tt__TrackAttributesExtension*) deserialize from a stream
/// - int soap_write_tt__TrackAttributesExtension(soap, tt__TrackAttributesExtension*) serialize to a stream
class tt__TrackAttributesExtension
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
/// class tt__VideoAttributes operations:
/// - soap_new_tt__VideoAttributes(soap*) allocate
/// - soap_new_tt__VideoAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__VideoAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoAttributes(soap*, tt__VideoAttributes*) deserialize from a stream
/// - int soap_write_tt__VideoAttributes(soap, tt__VideoAttributes*) serialize to a stream
class tt__VideoAttributes
{ public:
/// @brief Average bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief The width of the video in pixels.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief The height of the video in pixels.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// @brief Video encoding of the track. Use value from tt:VideoEncoding for MPEG4. Otherwise use values from tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// Element Encoding of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// @brief Average framerate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
/// class tt__AudioAttributes operations:
/// - soap_new_tt__AudioAttributes(soap*) allocate
/// - soap_new_tt__AudioAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__AudioAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioAttributes(soap*, tt__AudioAttributes*) deserialize from a stream
/// - int soap_write_tt__AudioAttributes(soap, tt__AudioAttributes*) serialize to a stream
class tt__AudioAttributes
{ public:
/// @brief The bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief Audio encoding of the track. Use values from tt:AudioEncoding for G711 and AAC. Otherwise use values from tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// Element Encoding of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// @brief The sample rate in kHz.
/// Element Samplerate of type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
/// class tt__MetadataAttributes operations:
/// - soap_new_tt__MetadataAttributes(soap*) allocate
/// - soap_new_tt__MetadataAttributes(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataAttributes(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataAttributes(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataAttributes(soap*, tt__MetadataAttributes*) deserialize from a stream
/// - int soap_write_tt__MetadataAttributes(soap, tt__MetadataAttributes*) serialize to a stream
class tt__MetadataAttributes
{ public:
/// @brief Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// Element CanContainPTZ of type xs:boolean.
    bool                                 CanContainPTZ                  1;	///< Required element.
/// @brief Indicates that there can be analytics data in the metadata track in the specified time interval.
/// Element CanContainAnalytics of type xs:boolean.
    bool                                 CanContainAnalytics            1;	///< Required element.
/// @brief Indicates that there can be notifications in the metadata track in the specified time interval.
/// Element CanContainNotifications of type xs:boolean.
    bool                                 CanContainNotifications        1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.
/// Attribute PtzSpaces of type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList*                  PtzSpaces                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
/// class tt__RecordingConfiguration operations:
/// - soap_new_tt__RecordingConfiguration(soap*) allocate
/// - soap_new_tt__RecordingConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingConfiguration(soap*, tt__RecordingConfiguration*) deserialize from a stream
/// - int soap_write_tt__RecordingConfiguration(soap, tt__RecordingConfiguration*) serialize to a stream
class tt__RecordingConfiguration
{ public:
/// @brief Information about the source of the recording.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// @brief Informative description of the source.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// @brief Sspecifies the maximum time that data in any track within the recording shall be stored. The device shall delete any data older than the maximum retention time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0, the device shall not limit the retention time of stored data, except by resource constraints. Whatever the value of MaximumRetentionTime, the device may automatically delete recordings to free up storage space for new recordings.
/// Element MaximumRetentionTime of type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
/// class tt__TrackConfiguration operations:
/// - soap_new_tt__TrackConfiguration(soap*) allocate
/// - soap_new_tt__TrackConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__TrackConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TrackConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TrackConfiguration(soap*, tt__TrackConfiguration*) deserialize from a stream
/// - int soap_write_tt__TrackConfiguration(soap, tt__TrackConfiguration*) serialize to a stream
class tt__TrackConfiguration
{ public:
/// @brief Type of the track. It shall be equal to the strings Video, Audio or Metadata. The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// @brief Informative description of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
/// class tt__GetRecordingsResponseItem operations:
/// - soap_new_tt__GetRecordingsResponseItem(soap*) allocate
/// - soap_new_tt__GetRecordingsResponseItem(soap*, int num) allocate array
/// - soap_new_req_tt__GetRecordingsResponseItem(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetRecordingsResponseItem(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetRecordingsResponseItem(soap*, tt__GetRecordingsResponseItem*) deserialize from a stream
/// - int soap_write_tt__GetRecordingsResponseItem(soap, tt__GetRecordingsResponseItem*) serialize to a stream
class tt__GetRecordingsResponseItem
{ public:
/// @brief Token of the recording.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief Configuration of the recording.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          Configuration                  1;	///< Required element.
/// @brief List of tracks.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    tt__GetTracksResponseList*           Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
/// class tt__GetTracksResponseList operations:
/// - soap_new_tt__GetTracksResponseList(soap*) allocate
/// - soap_new_tt__GetTracksResponseList(soap*, int num) allocate array
/// - soap_new_req_tt__GetTracksResponseList(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetTracksResponseList(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetTracksResponseList(soap*, tt__GetTracksResponseList*) deserialize from a stream
/// - int soap_write_tt__GetTracksResponseList(soap, tt__GetTracksResponseList*) serialize to a stream
class tt__GetTracksResponseList
{ public:
/// @brief Configuration of a track.
/// Vector of tt__GetTracksResponseItem* with length 0..unbounded
    std::vector<tt__GetTracksResponseItem*> Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
/// class tt__GetTracksResponseItem operations:
/// - soap_new_tt__GetTracksResponseItem(soap*) allocate
/// - soap_new_tt__GetTracksResponseItem(soap*, int num) allocate array
/// - soap_new_req_tt__GetTracksResponseItem(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetTracksResponseItem(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetTracksResponseItem(soap*, tt__GetTracksResponseItem*) deserialize from a stream
/// - int soap_write_tt__GetTracksResponseItem(soap, tt__GetTracksResponseItem*) serialize to a stream
class tt__GetTracksResponseItem
{ public:
/// @brief Token of the track.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// @brief Configuration of the track.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
/// class tt__RecordingJobConfiguration operations:
/// - soap_new_tt__RecordingJobConfiguration(soap*) allocate
/// - soap_new_tt__RecordingJobConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobConfiguration(soap*, tt__RecordingJobConfiguration*) deserialize from a stream
/// - int soap_write_tt__RecordingJobConfiguration(soap, tt__RecordingJobConfiguration*) serialize to a stream
class tt__RecordingJobConfiguration
{ public:
/// @brief Identifies the recording to which this job shall store the received data.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/> The only valid values for Mode shall be Idle and Active.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// @brief This shall be a non-negative number. If there are multiple recording jobs that store data to the same track, the device will only store the data for the recording job with the highest priority. The priority is specified per recording job, but the device shall determine the priority of each track individually. If there are two recording jobs with the same priority, the device shall record the data corresponding to the recording job that was activated the latest.
/// Element Priority of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// @brief Source of the recording.
/// Vector of tt__RecordingJobSource* with length 0..unbounded
    std::vector<tt__RecordingJobSource*> Source                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// @brief This attribute adds an additional requirement for activating the recording job. If this optional field is provided the job shall only record if the schedule exists and is active.
/// Attribute 'ScheduleToken' has no type or ref: assuming string content.
   @std::string                          ScheduleToken                  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
/// class tt__RecordingJobConfigurationExtension operations:
/// - soap_new_tt__RecordingJobConfigurationExtension(soap*) allocate
/// - soap_new_tt__RecordingJobConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobConfigurationExtension(soap*, tt__RecordingJobConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__RecordingJobConfigurationExtension(soap, tt__RecordingJobConfigurationExtension*) serialize to a stream
class tt__RecordingJobConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
/// class tt__RecordingJobSource operations:
/// - soap_new_tt__RecordingJobSource(soap*) allocate
/// - soap_new_tt__RecordingJobSource(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobSource(soap*, tt__RecordingJobSource*) deserialize from a stream
/// - int soap_write_tt__RecordingJobSource(soap, tt__RecordingJobSource*) serialize to a stream
class tt__RecordingJobSource
{ public:
/// @brief This field shall be a reference to the source of the data. The type of the source is determined by the attribute Type in the SourceToken structure. If Type is http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case the device shall receive the data over the network. If Type is http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the device to obtain data from a profile that exists on the local device.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    0;	///< Optional element.
/// @brief If this field is TRUE, and if the SourceToken is omitted, the device shall create a receiver object (through the receiver service) and assign the ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration from the device, the AutoCreateReceiver field shall never be present.
/// Element AutoCreateReceiver of type xs:boolean.
    bool*                                AutoCreateReceiver             0;	///< Optional element.
/// @brief List of tracks associated with the recording.
/// Vector of tt__RecordingJobTrack* with length 0..unbounded
    std::vector<tt__RecordingJobTrack* > Tracks                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    tt__RecordingJobSourceExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
/// class tt__RecordingJobSourceExtension operations:
/// - soap_new_tt__RecordingJobSourceExtension(soap*) allocate
/// - soap_new_tt__RecordingJobSourceExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobSourceExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobSourceExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobSourceExtension(soap*, tt__RecordingJobSourceExtension*) deserialize from a stream
/// - int soap_write_tt__RecordingJobSourceExtension(soap, tt__RecordingJobSourceExtension*) serialize to a stream
class tt__RecordingJobSourceExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
/// class tt__RecordingJobTrack operations:
/// - soap_new_tt__RecordingJobTrack(soap*) allocate
/// - soap_new_tt__RecordingJobTrack(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobTrack(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobTrack(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobTrack(soap*, tt__RecordingJobTrack*) deserialize from a stream
/// - int soap_write_tt__RecordingJobTrack(soap, tt__RecordingJobTrack*) serialize to a stream
class tt__RecordingJobTrack
{ public:
/// @brief If the received RTSP stream contains multiple tracks of the same type, the SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// Element SourceTag of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// @brief The destination is the tracktoken of the track to which the device shall store the received data.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
/// class tt__RecordingJobStateInformation operations:
/// - soap_new_tt__RecordingJobStateInformation(soap*) allocate
/// - soap_new_tt__RecordingJobStateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateInformation(soap*, tt__RecordingJobStateInformation*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateInformation(soap, tt__RecordingJobStateInformation*) serialize to a stream
class tt__RecordingJobStateInformation
{ public:
/// @brief Identification of the recording that the recording job records to.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// @brief Holds the aggregated state over the whole RecordingJobInformation structure.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @brief Identifies the data source of the recording job.
/// Vector of tt__RecordingJobStateSource* with length 0..unbounded
    std::vector<tt__RecordingJobStateSource*> Sources                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
/// class tt__RecordingJobStateInformationExtension operations:
/// - soap_new_tt__RecordingJobStateInformationExtension(soap*) allocate
/// - soap_new_tt__RecordingJobStateInformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateInformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateInformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateInformationExtension(soap*, tt__RecordingJobStateInformationExtension*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateInformationExtension(soap, tt__RecordingJobStateInformationExtension*) serialize to a stream
class tt__RecordingJobStateInformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
/// class tt__RecordingJobStateSource operations:
/// - soap_new_tt__RecordingJobStateSource(soap*) allocate
/// - soap_new_tt__RecordingJobStateSource(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateSource(soap*, tt__RecordingJobStateSource*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateSource(soap, tt__RecordingJobStateSource*) serialize to a stream
class tt__RecordingJobStateSource
{ public:
/// @brief Identifies the data source of the recording job.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    1;	///< Required element.
/// @brief Holds the aggregated state over all substructures of RecordingJobStateSource.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// @brief List of track items.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    tt__RecordingJobStateTracks*         Tracks                         1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
/// class tt__RecordingJobStateTracks operations:
/// - soap_new_tt__RecordingJobStateTracks(soap*) allocate
/// - soap_new_tt__RecordingJobStateTracks(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateTracks(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateTracks(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateTracks(soap*, tt__RecordingJobStateTracks*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateTracks(soap, tt__RecordingJobStateTracks*) serialize to a stream
class tt__RecordingJobStateTracks
{ public:
/// Vector of tt__RecordingJobStateTrack* with length 0..unbounded
    std::vector<tt__RecordingJobStateTrack*> Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
/// class tt__RecordingJobStateTrack operations:
/// - soap_new_tt__RecordingJobStateTrack(soap*) allocate
/// - soap_new_tt__RecordingJobStateTrack(soap*, int num) allocate array
/// - soap_new_req_tt__RecordingJobStateTrack(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RecordingJobStateTrack(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RecordingJobStateTrack(soap*, tt__RecordingJobStateTrack*) deserialize from a stream
/// - int soap_write_tt__RecordingJobStateTrack(soap, tt__RecordingJobStateTrack*) serialize to a stream
class tt__RecordingJobStateTrack
{ public:
/// @brief Identifies the track of the data source that provides the data.
/// Element SourceTag of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// @brief Indicates the destination track.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// @brief Optionally holds an implementation defined string value that describes the error. The string should be in the English language.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// @brief Provides the job state of the track. The valid values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
/// class tt__GetRecordingJobsResponseItem operations:
/// - soap_new_tt__GetRecordingJobsResponseItem(soap*) allocate
/// - soap_new_tt__GetRecordingJobsResponseItem(soap*, int num) allocate array
/// - soap_new_req_tt__GetRecordingJobsResponseItem(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GetRecordingJobsResponseItem(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GetRecordingJobsResponseItem(soap*, tt__GetRecordingJobsResponseItem*) deserialize from a stream
/// - int soap_write_tt__GetRecordingJobsResponseItem(soap, tt__GetRecordingJobsResponseItem*) serialize to a stream
class tt__GetRecordingJobsResponseItem
{ public:
/// Element JobToken of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element JobConfiguration of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
/// @brief Configuration parameters for the replay service.
/// class tt__ReplayConfiguration operations:
/// - soap_new_tt__ReplayConfiguration(soap*) allocate
/// - soap_new_tt__ReplayConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__ReplayConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ReplayConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ReplayConfiguration(soap*, tt__ReplayConfiguration*) deserialize from a stream
/// - int soap_write_tt__ReplayConfiguration(soap, tt__ReplayConfiguration*) serialize to a stream
class tt__ReplayConfiguration
{ public:
/// @brief The RTSP session timeout.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
/// class tt__AnalyticsDeviceEngineConfiguration operations:
/// - soap_new_tt__AnalyticsDeviceEngineConfiguration(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceEngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceEngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceEngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceEngineConfiguration(soap*, tt__AnalyticsDeviceEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceEngineConfiguration(soap, tt__AnalyticsDeviceEngineConfiguration*) serialize to a stream
class tt__AnalyticsDeviceEngineConfiguration
{ public:
/// Vector of tt__EngineConfiguration* with length 1..unbounded
    std::vector<tt__EngineConfiguration*> EngineConfiguration            1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
/// class tt__AnalyticsDeviceEngineConfigurationExtension operations:
/// - soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(soap*) allocate
/// - soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsDeviceEngineConfigurationExtension(soap*, tt__AnalyticsDeviceEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceEngineConfigurationExtension(soap, tt__AnalyticsDeviceEngineConfigurationExtension*) serialize to a stream
class tt__AnalyticsDeviceEngineConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
/// class tt__EngineConfiguration operations:
/// - soap_new_tt__EngineConfiguration(soap*) allocate
/// - soap_new_tt__EngineConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__EngineConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EngineConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EngineConfiguration(soap*, tt__EngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__EngineConfiguration(soap, tt__EngineConfiguration*) serialize to a stream
class tt__EngineConfiguration
{ public:
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    1;	///< Required element.
/// Element AnalyticsEngineInputInfo of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    tt__AnalyticsEngineInputInfo*        AnalyticsEngineInputInfo       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
/// class tt__AnalyticsEngineInputInfo operations:
/// - soap_new_tt__AnalyticsEngineInputInfo(soap*) allocate
/// - soap_new_tt__AnalyticsEngineInputInfo(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineInputInfo(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineInputInfo(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineInputInfo(soap*, tt__AnalyticsEngineInputInfo*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineInputInfo(soap, tt__AnalyticsEngineInputInfo*) serialize to a stream
class tt__AnalyticsEngineInputInfo
{ public:
/// Element InputInfo of type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          InputInfo                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
/// class tt__AnalyticsEngineInputInfoExtension operations:
/// - soap_new_tt__AnalyticsEngineInputInfoExtension(soap*) allocate
/// - soap_new_tt__AnalyticsEngineInputInfoExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineInputInfoExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineInputInfoExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineInputInfoExtension(soap*, tt__AnalyticsEngineInputInfoExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineInputInfoExtension(soap, tt__AnalyticsEngineInputInfoExtension*) serialize to a stream
class tt__AnalyticsEngineInputInfoExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
/// class tt__SourceIdentification operations:
/// - soap_new_tt__SourceIdentification(soap*) allocate
/// - soap_new_tt__SourceIdentification(soap*, int num) allocate array
/// - soap_new_req_tt__SourceIdentification(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SourceIdentification(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SourceIdentification(soap*, tt__SourceIdentification*) deserialize from a stream
/// - int soap_write_tt__SourceIdentification(soap, tt__SourceIdentification*) serialize to a stream
class tt__SourceIdentification
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Vector of tt__ReferenceToken with length 1..unbounded
    std::vector<tt__ReferenceToken     > Token                          1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    tt__SourceIdentificationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
/// class tt__SourceIdentificationExtension operations:
/// - soap_new_tt__SourceIdentificationExtension(soap*) allocate
/// - soap_new_tt__SourceIdentificationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__SourceIdentificationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__SourceIdentificationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__SourceIdentificationExtension(soap*, tt__SourceIdentificationExtension*) deserialize from a stream
/// - int soap_write_tt__SourceIdentificationExtension(soap, tt__SourceIdentificationExtension*) serialize to a stream
class tt__SourceIdentificationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
/// class tt__MetadataInput operations:
/// - soap_new_tt__MetadataInput(soap*) allocate
/// - soap_new_tt__MetadataInput(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataInput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataInput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataInput(soap*, tt__MetadataInput*) deserialize from a stream
/// - int soap_write_tt__MetadataInput(soap, tt__MetadataInput*) serialize to a stream
class tt__MetadataInput
{ public:
/// Vector of tt__Config* with length 0..unbounded
    std::vector<tt__Config*            > MetadataConfig                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    tt__MetadataInputExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
/// class tt__MetadataInputExtension operations:
/// - soap_new_tt__MetadataInputExtension(soap*) allocate
/// - soap_new_tt__MetadataInputExtension(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataInputExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataInputExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataInputExtension(soap*, tt__MetadataInputExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataInputExtension(soap, tt__MetadataInputExtension*) serialize to a stream
class tt__MetadataInputExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
/// class tt__AnalyticsStateInformation operations:
/// - soap_new_tt__AnalyticsStateInformation(soap*) allocate
/// - soap_new_tt__AnalyticsStateInformation(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsStateInformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsStateInformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsStateInformation(soap*, tt__AnalyticsStateInformation*) deserialize from a stream
/// - int soap_write_tt__AnalyticsStateInformation(soap, tt__AnalyticsStateInformation*) serialize to a stream
class tt__AnalyticsStateInformation
{ public:
/// @brief Token of the control object whose status is requested.
/// Element AnalyticsEngineControlToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element State of type "http://www.onvif.org/ver10/schema":AnalyticsState.
    tt__AnalyticsState*                  State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
/// class tt__AnalyticsState operations:
/// - soap_new_tt__AnalyticsState(soap*) allocate
/// - soap_new_tt__AnalyticsState(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsState(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsState(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsState(soap*, tt__AnalyticsState*) deserialize from a stream
/// - int soap_write_tt__AnalyticsState(soap, tt__AnalyticsState*) serialize to a stream
class tt__AnalyticsState
{ public:
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element State of type xs:string.
    std::string                          State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
/// @brief Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// class tt__ActionEngineEventPayload operations:
/// - soap_new_tt__ActionEngineEventPayload(soap*) allocate
/// - soap_new_tt__ActionEngineEventPayload(soap*, int num) allocate array
/// - soap_new_req_tt__ActionEngineEventPayload(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ActionEngineEventPayload(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ActionEngineEventPayload(soap*, tt__ActionEngineEventPayload*) deserialize from a stream
/// - int soap_write_tt__ActionEngineEventPayload(soap, tt__ActionEngineEventPayload*) serialize to a stream
class tt__ActionEngineEventPayload
{ public:
/// @brief Request Message
/// Element RequestInfo of type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           RequestInfo                    0;	///< Optional element.
/// @brief Response Message
/// Element ResponseInfo of type SOAP-ENV:Envelope.
    struct SOAP_ENV__Envelope*           ResponseInfo                   0;	///< Optional element.
/// @brief Fault Message
/// Element Fault of type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
/// class tt__ActionEngineEventPayloadExtension operations:
/// - soap_new_tt__ActionEngineEventPayloadExtension(soap*) allocate
/// - soap_new_tt__ActionEngineEventPayloadExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ActionEngineEventPayloadExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ActionEngineEventPayloadExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ActionEngineEventPayloadExtension(soap*, tt__ActionEngineEventPayloadExtension*) deserialize from a stream
/// - int soap_write_tt__ActionEngineEventPayloadExtension(soap, tt__ActionEngineEventPayloadExtension*) serialize to a stream
class tt__ActionEngineEventPayloadExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioClassCandidate is a complexType.
/// class tt__AudioClassCandidate operations:
/// - soap_new_tt__AudioClassCandidate(soap*) allocate
/// - soap_new_tt__AudioClassCandidate(soap*, int num) allocate array
/// - soap_new_req_tt__AudioClassCandidate(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioClassCandidate(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioClassCandidate(soap*, tt__AudioClassCandidate*) deserialize from a stream
/// - int soap_write_tt__AudioClassCandidate(soap, tt__AudioClassCandidate*) serialize to a stream
class tt__AudioClassCandidate
{ public:
/// @brief Indicates audio class label
/// Element Type of type "http://www.onvif.org/ver10/schema":AudioClassType.
    tt__AudioClassType                   Type                           1;	///< Required element.
/// @brief A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioClassDescriptor is a complexType.
/// class tt__AudioClassDescriptor operations:
/// - soap_new_tt__AudioClassDescriptor(soap*) allocate
/// - soap_new_tt__AudioClassDescriptor(soap*, int num) allocate array
/// - soap_new_req_tt__AudioClassDescriptor(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioClassDescriptor(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioClassDescriptor(soap*, tt__AudioClassDescriptor*) deserialize from a stream
/// - int soap_write_tt__AudioClassDescriptor(soap, tt__AudioClassDescriptor*) serialize to a stream
class tt__AudioClassDescriptor
{ public:
/// @brief Array of audio class label and class probability
/// Vector of tt__AudioClassCandidate* with length 0..unbounded
    std::vector<tt__AudioClassCandidate*> ClassCandidate                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension.
    tt__AudioClassDescriptorExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is a complexType.
/// class tt__AudioClassDescriptorExtension operations:
/// - soap_new_tt__AudioClassDescriptorExtension(soap*) allocate
/// - soap_new_tt__AudioClassDescriptorExtension(soap*, int num) allocate array
/// - soap_new_req_tt__AudioClassDescriptorExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioClassDescriptorExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioClassDescriptorExtension(soap*, tt__AudioClassDescriptorExtension*) deserialize from a stream
/// - int soap_write_tt__AudioClassDescriptorExtension(soap, tt__AudioClassDescriptorExtension*) serialize to a stream
class tt__AudioClassDescriptorExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ActiveConnection is a complexType.
/// class tt__ActiveConnection operations:
/// - soap_new_tt__ActiveConnection(soap*) allocate
/// - soap_new_tt__ActiveConnection(soap*, int num) allocate array
/// - soap_new_req_tt__ActiveConnection(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ActiveConnection(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ActiveConnection(soap*, tt__ActiveConnection*) deserialize from a stream
/// - int soap_write_tt__ActiveConnection(soap, tt__ActiveConnection*) serialize to a stream
class tt__ActiveConnection
{ public:
/// Element CurrentBitrate of type xs:float.
    float                                CurrentBitrate                 1;	///< Required element.
/// Element CurrentFps of type xs:float.
    float                                CurrentFps                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileStatus is a complexType.
/// class tt__ProfileStatus operations:
/// - soap_new_tt__ProfileStatus(soap*) allocate
/// - soap_new_tt__ProfileStatus(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileStatus(soap*, tt__ProfileStatus*) deserialize from a stream
/// - int soap_write_tt__ProfileStatus(soap, tt__ProfileStatus*) serialize to a stream
class tt__ProfileStatus
{ public:
/// Vector of tt__ActiveConnection* with length 0..unbounded
    std::vector<tt__ActiveConnection*  > ActiveConnections              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileStatusExtension.
    tt__ProfileStatusExtension*          Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ProfileStatusExtension is a complexType.
/// class tt__ProfileStatusExtension operations:
/// - soap_new_tt__ProfileStatusExtension(soap*) allocate
/// - soap_new_tt__ProfileStatusExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ProfileStatusExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ProfileStatusExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ProfileStatusExtension(soap*, tt__ProfileStatusExtension*) deserialize from a stream
/// - int soap_write_tt__ProfileStatusExtension(soap, tt__ProfileStatusExtension*) serialize to a stream
class tt__ProfileStatusExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
/// class tt__OSDPosConfiguration operations:
/// - soap_new_tt__OSDPosConfiguration(soap*) allocate
/// - soap_new_tt__OSDPosConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__OSDPosConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDPosConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDPosConfiguration(soap, tt__OSDPosConfiguration*) serialize to a stream
class tt__OSDPosConfiguration
{ public:
/// @brief For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li> <li>UpperRight</li> <li>LowerLeft</li> <li>LowerRight</li> <li>Custom</li></ul>
/// Element Type of type xs:string.
    std::string                          Type                           1;	///< Required element.
/// Element Pos of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Pos                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    tt__OSDPosConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
/// class tt__OSDPosConfigurationExtension operations:
/// - soap_new_tt__OSDPosConfigurationExtension(soap*) allocate
/// - soap_new_tt__OSDPosConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDPosConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDPosConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDPosConfigurationExtension(soap, tt__OSDPosConfigurationExtension*) serialize to a stream
class tt__OSDPosConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
/// @brief The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// class tt__OSDColor operations:
/// - soap_new_tt__OSDColor(soap*) allocate
/// - soap_new_tt__OSDColor(soap*, int num) allocate array
/// - soap_new_req_tt__OSDColor(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDColor(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDColor(soap*, tt__OSDColor*) deserialize from a stream
/// - int soap_write_tt__OSDColor(soap, tt__OSDColor*) serialize to a stream
class tt__OSDColor
{ public:
/// Element Color of type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Attribute Transparent of type xs:int.
   @int*                                 Transparent                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
/// class tt__OSDTextConfiguration operations:
/// - soap_new_tt__OSDTextConfiguration(soap*) allocate
/// - soap_new_tt__OSDTextConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__OSDTextConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDTextConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDTextConfiguration(soap, tt__OSDTextConfiguration*) serialize to a stream
class tt__OSDTextConfiguration
{ public:
/// @brief The following OSD Text Type are defined:<ul> <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li> <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li> <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li> <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li> </ul>
/// Element Type of type xs:string.
    std::string                          Type                           1;	///< Required element.
/// @brief List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul> <li>M/d/yyyy - e.g. 3/6/2013</li> <li>MM/dd/yyyy - e.g. 03/06/2013</li> <li>dd/MM/yyyy - e.g. 06/03/2013</li> <li>yyyy/MM/dd - e.g. 2013/03/06</li> <li>yyyy-MM-dd - e.g. 2013-06-03</li> <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li> <li>MMMM dd, yyyy - e.g. March 06, 2013</li> <li>dd MMMM, yyyy - e.g. 06 March, 2013</li> </ul>
/// Element DateFormat of type xs:string.
    std::string*                         DateFormat                     0;	///< Optional element.
/// @brief List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul> <li>h:mm:ss tt - e.g. 2:14:21 PM</li> <li>hh:mm:ss tt - e.g. 02:14:21 PM</li> <li>H:mm:ss - e.g. 14:14:21</li> <li>HH:mm:ss - e.g. 14:14:21</li> </ul>
/// Element TimeFormat of type xs:string.
    std::string*                         TimeFormat                     0;	///< Optional element.
/// @brief Font size of the text in pt.
/// Element FontSize of type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// @brief Font color of the text.
/// Element FontColor of type "http://www.onvif.org/ver10/schema":OSDColor.
    tt__OSDColor*                        FontColor                      0;	///< Optional element.
/// @brief Background color of the text.
/// Element BackgroundColor of type "http://www.onvif.org/ver10/schema":OSDColor.
    tt__OSDColor*                        BackgroundColor                0;	///< Optional element.
/// @brief The content of text to be displayed.
/// Element PlainText of type xs:string.
    std::string*                         PlainText                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    tt__OSDTextConfigurationExtension*   Extension                      0;	///< Optional element.
/// @brief This flag is applicable for Type Plain and defaults to true. When set to false the PlainText content will not be persistent across device reboots.
/// Attribute IsPersistentText of type xs:boolean.
   @bool*                                IsPersistentText               0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
/// class tt__OSDTextConfigurationExtension operations:
/// - soap_new_tt__OSDTextConfigurationExtension(soap*) allocate
/// - soap_new_tt__OSDTextConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDTextConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDTextConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDTextConfigurationExtension(soap, tt__OSDTextConfigurationExtension*) serialize to a stream
class tt__OSDTextConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
/// class tt__OSDImgConfiguration operations:
/// - soap_new_tt__OSDImgConfiguration(soap*) allocate
/// - soap_new_tt__OSDImgConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__OSDImgConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDImgConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDImgConfiguration(soap, tt__OSDImgConfiguration*) serialize to a stream
class tt__OSDImgConfiguration
{ public:
/// @brief The URI of the image which to be displayed.
/// Element ImgPath of type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    tt__OSDImgConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
/// class tt__OSDImgConfigurationExtension operations:
/// - soap_new_tt__OSDImgConfigurationExtension(soap*) allocate
/// - soap_new_tt__OSDImgConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDImgConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDImgConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDImgConfigurationExtension(soap, tt__OSDImgConfigurationExtension*) serialize to a stream
class tt__OSDImgConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
/// class tt__ColorspaceRange operations:
/// - soap_new_tt__ColorspaceRange(soap*) allocate
/// - soap_new_tt__ColorspaceRange(soap*, int num) allocate array
/// - soap_new_req_tt__ColorspaceRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorspaceRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorspaceRange(soap*, tt__ColorspaceRange*) deserialize from a stream
/// - int soap_write_tt__ColorspaceRange(soap, tt__ColorspaceRange*) serialize to a stream
class tt__ColorspaceRange
{ public:
/// Element X of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      X                              1;	///< Required element.
/// Element Y of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Y                              1;	///< Required element.
/// Element Z of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Z                              1;	///< Required element.
/// @brief Acceptable values are the same as in tt:Color.
/// Element Colorspace of type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
/// @brief Describe the colors supported. Either list each color or define the range of color values.
/// class tt__ColorOptions operations:
/// - soap_new_tt__ColorOptions(soap*) allocate
/// - soap_new_tt__ColorOptions(soap*, int num) allocate array
/// - soap_new_req_tt__ColorOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorOptions(soap*, tt__ColorOptions*) deserialize from a stream
/// - int soap_write_tt__ColorOptions(soap, tt__ColorOptions*) serialize to a stream
class tt__ColorOptions
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_ColorOptions          ;	///< Union _tt__union_ColorOptions selector: set to SOAP_UNION__tt__union_ColorOptions_<fieldname>
/// Union for choice in type tt__ColorOptions
    union _tt__union_ColorOptions
    {
/// @brief List the supported color.
/// Vector of tt__Color* with length 1..unbounded
    std::vector<tt__Color*            > *ColorList                      1;
/// @brief Define the range of color supported.
/// Vector of tt__ColorspaceRange* with length 1..unbounded
    std::vector<tt__ColorspaceRange*  > *ColorspaceRange                1;
    }                                    union_ColorOptions            ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
/// @brief Describe the option of the color and its transparency.
/// class tt__OSDColorOptions operations:
/// - soap_new_tt__OSDColorOptions(soap*) allocate
/// - soap_new_tt__OSDColorOptions(soap*, int num) allocate array
/// - soap_new_req_tt__OSDColorOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDColorOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDColorOptions(soap*, tt__OSDColorOptions*) deserialize from a stream
/// - int soap_write_tt__OSDColorOptions(soap, tt__OSDColorOptions*) serialize to a stream
class tt__OSDColorOptions
{ public:
/// @brief Optional list of supported colors.
/// Element Color of type "http://www.onvif.org/ver10/schema":ColorOptions.
    tt__ColorOptions*                    Color                          0;	///< Optional element.
/// @brief Range of the transparent level. Larger means more tranparent.
/// Element Transparent of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        Transparent                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    tt__OSDColorOptionsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
/// class tt__OSDColorOptionsExtension operations:
/// - soap_new_tt__OSDColorOptionsExtension(soap*) allocate
/// - soap_new_tt__OSDColorOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDColorOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDColorOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDColorOptionsExtension(soap, tt__OSDColorOptionsExtension*) serialize to a stream
class tt__OSDColorOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
/// class tt__OSDTextOptions operations:
/// - soap_new_tt__OSDTextOptions(soap*) allocate
/// - soap_new_tt__OSDTextOptions(soap*, int num) allocate array
/// - soap_new_req_tt__OSDTextOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDTextOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDTextOptions(soap*, tt__OSDTextOptions*) deserialize from a stream
/// - int soap_write_tt__OSDTextOptions(soap, tt__OSDTextOptions*) serialize to a stream
class tt__OSDTextOptions
{ public:
/// @brief List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Type                           1;
/// @brief Range of the font size value.
/// Element FontSizeRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FontSizeRange                  0;	///< Optional element.
/// @brief List of supported date format.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > DateFormat                     0;
/// @brief List of supported time format.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > TimeFormat                     0;
/// @brief List of supported font color.
/// Element FontColor of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    tt__OSDColorOptions*                 FontColor                      0;	///< Optional element.
/// @brief List of supported background color.
/// Element BackgroundColor of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    tt__OSDColorOptions*                 BackgroundColor                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    tt__OSDTextOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
/// class tt__OSDTextOptionsExtension operations:
/// - soap_new_tt__OSDTextOptionsExtension(soap*) allocate
/// - soap_new_tt__OSDTextOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDTextOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDTextOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDTextOptionsExtension(soap, tt__OSDTextOptionsExtension*) serialize to a stream
class tt__OSDTextOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
/// class tt__OSDImgOptions operations:
/// - soap_new_tt__OSDImgOptions(soap*) allocate
/// - soap_new_tt__OSDImgOptions(soap*, int num) allocate array
/// - soap_new_req_tt__OSDImgOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDImgOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDImgOptions(soap*, tt__OSDImgOptions*) deserialize from a stream
/// - int soap_write_tt__OSDImgOptions(soap, tt__OSDImgOptions*) serialize to a stream
class tt__OSDImgOptions
{ public:
/// @brief List of available image URIs.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ImagePath                      1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    tt__OSDImgOptionsExtension*          Extension                      0;	///< Optional element.
/// @brief List of supported image MIME types, such as "image/png".
/// Attribute FormatsSupported of type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList*                  FormatsSupported               0;	///< Optional attribute.
/// @brief The maximum size (in bytes) of the image that can be uploaded.
/// Attribute MaxSize of type xs:int.
   @int*                                 MaxSize                        0;	///< Optional attribute.
/// @brief The maximum width (in pixels) of the image that can be uploaded.
/// Attribute MaxWidth of type xs:int.
   @int*                                 MaxWidth                       0;	///< Optional attribute.
/// @brief The maximum height (in pixels) of the image that can be uploaded.
/// Attribute MaxHeight of type xs:int.
   @int*                                 MaxHeight                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
/// class tt__OSDImgOptionsExtension operations:
/// - soap_new_tt__OSDImgOptionsExtension(soap*) allocate
/// - soap_new_tt__OSDImgOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDImgOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDImgOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDImgOptionsExtension(soap, tt__OSDImgOptionsExtension*) serialize to a stream
class tt__OSDImgOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
/// class tt__OSDConfigurationExtension operations:
/// - soap_new_tt__OSDConfigurationExtension(soap*) allocate
/// - soap_new_tt__OSDConfigurationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDConfigurationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDConfigurationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDConfigurationExtension(soap, tt__OSDConfigurationExtension*) serialize to a stream
class tt__OSDConfigurationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
/// class tt__MaximumNumberOfOSDs operations:
/// - soap_new_tt__MaximumNumberOfOSDs(soap*) allocate
/// - soap_new_tt__MaximumNumberOfOSDs(soap*, int num) allocate array
/// - soap_new_req_tt__MaximumNumberOfOSDs(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MaximumNumberOfOSDs(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs*) deserialize from a stream
/// - int soap_write_tt__MaximumNumberOfOSDs(soap, tt__MaximumNumberOfOSDs*) serialize to a stream
class tt__MaximumNumberOfOSDs
{ public:
/// Attribute Total of type xs:int.
   @int                                  Total                          1;	///< Required attribute.
/// Attribute Image of type xs:int.
   @int*                                 Image                          0;	///< Optional attribute.
/// Attribute PlainText of type xs:int.
   @int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute Date of type xs:int.
   @int*                                 Date                           0;	///< Optional attribute.
/// Attribute Time of type xs:int.
   @int*                                 Time                           0;	///< Optional attribute.
/// Attribute DateAndTime of type xs:int.
   @int*                                 DateAndTime                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
/// class tt__OSDConfigurationOptions operations:
/// - soap_new_tt__OSDConfigurationOptions(soap*) allocate
/// - soap_new_tt__OSDConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tt__OSDConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__OSDConfigurationOptions(soap, tt__OSDConfigurationOptions*) serialize to a stream
class tt__OSDConfigurationOptions
{ public:
/// @brief The maximum number of OSD configurations supported for the specified video source configuration. If the configuration does not support OSDs, this value shall be zero and the Type and PositionOption elements are ignored. If a device limits the number of instances by OSDType, it shall indicate the supported number for each type via the related attribute.
/// Element MaximumNumberOfOSDs of type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    tt__MaximumNumberOfOSDs*             MaximumNumberOfOSDs            1;	///< Required element.
/// @brief List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// Vector of enum tt__OSDType with length 1..unbounded
    std::vector<enum tt__OSDType       > Type                           1;
/// @brief List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li> <li>UpperRight</li> <li>LowerLeft</li> <li>LowerRight</li> <li>Custom</li></ul>
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > PositionOption                 1;
/// @brief Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// Element TextOption of type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    tt__OSDTextOptions*                  TextOption                     0;	///< Optional element.
/// @brief Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// Element ImageOption of type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    tt__OSDImgOptions*                   ImageOption                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
/// class tt__OSDConfigurationOptionsExtension operations:
/// - soap_new_tt__OSDConfigurationOptionsExtension(soap*) allocate
/// - soap_new_tt__OSDConfigurationOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tt__OSDConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDConfigurationOptionsExtension(soap, tt__OSDConfigurationOptionsExtension*) serialize to a stream
class tt__OSDConfigurationOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":FileProgress is a complexType.
/// class tt__FileProgress operations:
/// - soap_new_tt__FileProgress(soap*) allocate
/// - soap_new_tt__FileProgress(soap*, int num) allocate array
/// - soap_new_req_tt__FileProgress(soap*, ...) allocate, set required members
/// - soap_new_set_tt__FileProgress(soap*, ...) allocate, set all public members
/// - int soap_read_tt__FileProgress(soap*, tt__FileProgress*) deserialize from a stream
/// - int soap_write_tt__FileProgress(soap, tt__FileProgress*) serialize to a stream
class tt__FileProgress
{ public:
/// @brief Exported file name
/// Element FileName of type xs:string.
    std::string                          FileName                       1;	///< Required element.
/// @brief Normalized percentage completion for uploading the exported file
/// Element Progress of type xs:float.
    float                                Progress                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is a complexType.
/// class tt__ArrayOfFileProgress operations:
/// - soap_new_tt__ArrayOfFileProgress(soap*) allocate
/// - soap_new_tt__ArrayOfFileProgress(soap*, int num) allocate array
/// - soap_new_req_tt__ArrayOfFileProgress(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ArrayOfFileProgress(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ArrayOfFileProgress(soap*, tt__ArrayOfFileProgress*) deserialize from a stream
/// - int soap_write_tt__ArrayOfFileProgress(soap, tt__ArrayOfFileProgress*) serialize to a stream
class tt__ArrayOfFileProgress
{ public:
/// @brief Exported file name and export progress information
/// Vector of tt__FileProgress* with length 0..unbounded
    std::vector<tt__FileProgress*      > FileProgress                   0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension.
    tt__ArrayOfFileProgressExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is a complexType.
/// class tt__ArrayOfFileProgressExtension operations:
/// - soap_new_tt__ArrayOfFileProgressExtension(soap*) allocate
/// - soap_new_tt__ArrayOfFileProgressExtension(soap*, int num) allocate array
/// - soap_new_req_tt__ArrayOfFileProgressExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ArrayOfFileProgressExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ArrayOfFileProgressExtension(soap*, tt__ArrayOfFileProgressExtension*) deserialize from a stream
/// - int soap_write_tt__ArrayOfFileProgressExtension(soap, tt__ArrayOfFileProgressExtension*) serialize to a stream
class tt__ArrayOfFileProgressExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":StorageReferencePath is a complexType.
/// class tt__StorageReferencePath operations:
/// - soap_new_tt__StorageReferencePath(soap*) allocate
/// - soap_new_tt__StorageReferencePath(soap*, int num) allocate array
/// - soap_new_req_tt__StorageReferencePath(soap*, ...) allocate, set required members
/// - soap_new_set_tt__StorageReferencePath(soap*, ...) allocate, set all public members
/// - int soap_read_tt__StorageReferencePath(soap*, tt__StorageReferencePath*) deserialize from a stream
/// - int soap_write_tt__StorageReferencePath(soap, tt__StorageReferencePath*) serialize to a stream
class tt__StorageReferencePath
{ public:
/// @brief identifier of an existing Storage Configuration.
/// Element StorageToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   StorageToken                   1;	///< Required element.
/// @brief gives the relative directory path on the storage
/// Element RelativePath of type xs:string.
    std::string*                         RelativePath                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":StorageReferencePathExtension.
    tt__StorageReferencePathExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is a complexType.
/// class tt__StorageReferencePathExtension operations:
/// - soap_new_tt__StorageReferencePathExtension(soap*) allocate
/// - soap_new_tt__StorageReferencePathExtension(soap*, int num) allocate array
/// - soap_new_req_tt__StorageReferencePathExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__StorageReferencePathExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__StorageReferencePathExtension(soap*, tt__StorageReferencePathExtension*) deserialize from a stream
/// - int soap_write_tt__StorageReferencePathExtension(soap, tt__StorageReferencePathExtension*) serialize to a stream
class tt__StorageReferencePathExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":IntRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
/// class tt__IntRange operations:
/// - soap_new_tt__IntRange(soap*) allocate
/// - soap_new_tt__IntRange(soap*, int num) allocate array
/// - soap_new_req_tt__IntRange(soap*, ...) allocate, set required members
/// - soap_new_set_tt__IntRange(soap*, ...) allocate, set all public members
/// - int soap_read_tt__IntRange(soap*, tt__IntRange*) deserialize from a stream
/// - int soap_write_tt__IntRange(soap, tt__IntRange*) serialize to a stream
class tt__IntRange
{ public:
/// Element Min of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element Max of type xs:int.
    int                                  Max                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
/// class tt__Vector2D operations:
/// - soap_new_tt__Vector2D(soap*) allocate
/// - soap_new_tt__Vector2D(soap*, int num) allocate array
/// - soap_new_req_tt__Vector2D(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Vector2D(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Vector2D(soap*, tt__Vector2D*) deserialize from a stream
/// - int soap_write_tt__Vector2D(soap, tt__Vector2D*) serialize to a stream
class tt__Vector2D
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute y of type xs:float.
   @float                                y                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li> </ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
/// class tt__Vector1D operations:
/// - soap_new_tt__Vector1D(soap*) allocate
/// - soap_new_tt__Vector1D(soap*, int num) allocate array
/// - soap_new_req_tt__Vector1D(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Vector1D(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Vector1D(soap*, tt__Vector1D*) deserialize from a stream
/// - int soap_write_tt__Vector1D(soap, tt__Vector1D*) serialize to a stream
class tt__Vector1D
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// @brief Zoom coordinate space selector. The following options are defined:<ul style=""> <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/ZoomGenericSpeedSpace</li> </ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
/// class tt__PTZVector operations:
/// - soap_new_tt__PTZVector(soap*) allocate
/// - soap_new_tt__PTZVector(soap*, int num) allocate array
/// - soap_new_req_tt__PTZVector(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZVector(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZVector(soap*, tt__PTZVector*) deserialize from a stream
/// - int soap_write_tt__PTZVector(soap, tt__PTZVector*) serialize to a stream
class tt__PTZVector
{ public:
/// @brief Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// @brief A zoom position.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
/// class tt__PTZStatus operations:
/// - soap_new_tt__PTZStatus(soap*) allocate
/// - soap_new_tt__PTZStatus(soap*, int num) allocate array
/// - soap_new_req_tt__PTZStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZStatus(soap*, tt__PTZStatus*) deserialize from a stream
/// - int soap_write_tt__PTZStatus(soap, tt__PTZStatus*) serialize to a stream
class tt__PTZStatus
{ public:
/// @brief Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       0;	///< Optional element.
/// @brief Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    tt__PTZMoveStatus*                   MoveStatus                     0;	///< Optional element.
/// @brief States a current PTZ error.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// @brief Specifies the UTC time when this status was generated.
/// Element UtcTime of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
/// class tt__PTZMoveStatus operations:
/// - soap_new_tt__PTZMoveStatus(soap*) allocate
/// - soap_new_tt__PTZMoveStatus(soap*, int num) allocate array
/// - soap_new_req_tt__PTZMoveStatus(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZMoveStatus(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) deserialize from a stream
/// - int soap_write_tt__PTZMoveStatus(soap, tt__PTZMoveStatus*) serialize to a stream
class tt__PTZMoveStatus
{ public:
/// @brief
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.
/// @brief
/// Element Zoom of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Vector is a complexType.
/// class tt__Vector operations:
/// - soap_new_tt__Vector(soap*) allocate
/// - soap_new_tt__Vector(soap*, int num) allocate array
/// - soap_new_req_tt__Vector(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Vector(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Vector(soap*, tt__Vector*) deserialize from a stream
/// - int soap_write_tt__Vector(soap, tt__Vector*) serialize to a stream
class tt__Vector
{ public:
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
/// class tt__Rectangle operations:
/// - soap_new_tt__Rectangle(soap*) allocate
/// - soap_new_tt__Rectangle(soap*, int num) allocate array
/// - soap_new_req_tt__Rectangle(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Rectangle(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Rectangle(soap*, tt__Rectangle*) deserialize from a stream
/// - int soap_write_tt__Rectangle(soap, tt__Rectangle*) serialize to a stream
class tt__Rectangle
{ public:
/// Attribute bottom of type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute top of type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute right of type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute left of type xs:float.
   @float*                               left                           0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Polygon is a complexType.
/// class tt__Polygon operations:
/// - soap_new_tt__Polygon(soap*) allocate
/// - soap_new_tt__Polygon(soap*, int num) allocate array
/// - soap_new_req_tt__Polygon(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Polygon(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Polygon(soap*, tt__Polygon*) deserialize from a stream
/// - int soap_write_tt__Polygon(soap, tt__Polygon*) serialize to a stream
class tt__Polygon
{ public:
/// Vector of tt__Vector* with length 3..unbounded
    std::vector<tt__Vector*            > Point                          3;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Color is a complexType.
/// class tt__Color operations:
/// - soap_new_tt__Color(soap*) allocate
/// - soap_new_tt__Color(soap*, int num) allocate array
/// - soap_new_req_tt__Color(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Color(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Color(soap*, tt__Color*) deserialize from a stream
/// - int soap_write_tt__Color(soap, tt__Color*) serialize to a stream
class tt__Color
{ public:
/// Attribute X of type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute Y of type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute Z of type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// @brief Acceptable values: <ul> <li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr <ul><li>X attribute = Y value</li> <li>Y attribute = Cb value</li> <li>Z attribute = Cr value</li></ul> </li> <li>http://www.onvif.org/ver10/colorspace/RGB - RGB <ul><li>X attribute = R value</li> <li>Y attribute = G value</li> <li>Z attribute = B value</li></ul> </li> </ul> If the Colorspace attribute is absent, YCbCr is implied. Deprecated values: <ul> <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li> <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li> <li>http://www.onvif.org/ver10/colorspace/HSV - HSV</li> </ul>
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
/// class tt__ColorCovariance operations:
/// - soap_new_tt__ColorCovariance(soap*) allocate
/// - soap_new_tt__ColorCovariance(soap*, int num) allocate array
/// - soap_new_req_tt__ColorCovariance(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorCovariance(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorCovariance(soap*, tt__ColorCovariance*) deserialize from a stream
/// - int soap_write_tt__ColorCovariance(soap, tt__ColorCovariance*) serialize to a stream
class tt__ColorCovariance
{ public:
/// Attribute XX of type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute YY of type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute ZZ of type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute XY of type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute XZ of type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute YZ of type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// @brief Acceptable values are the same as in tt:Color.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
/// class tt__ColorDescriptor operations:
/// - soap_new_tt__ColorDescriptor(soap*) allocate
/// - soap_new_tt__ColorDescriptor(soap*, int num) allocate array
/// - soap_new_req_tt__ColorDescriptor(soap*, ...) allocate, set required members
/// - soap_new_set_tt__ColorDescriptor(soap*, ...) allocate, set all public members
/// - int soap_read_tt__ColorDescriptor(soap*, tt__ColorDescriptor*) deserialize from a stream
/// - int soap_write_tt__ColorDescriptor(soap, tt__ColorDescriptor*) serialize to a stream
class tt__ColorDescriptor
{ public:
/// Vector of ColorCluster with length 0..unbounded
    std::vector<
/// class _tt__ColorDescriptor_ColorCluster operations:
/// - soap_new__tt__ColorDescriptor_ColorCluster(soap*) allocate
/// - soap_new__tt__ColorDescriptor_ColorCluster(soap*, int num) allocate array
/// - soap_new_req__tt__ColorDescriptor_ColorCluster(soap*, ...) allocate, set required members
/// - soap_new_set__tt__ColorDescriptor_ColorCluster(soap*, ...) allocate, set all public members
/// - int soap_read__tt__ColorDescriptor_ColorCluster(soap*, _tt__ColorDescriptor_ColorCluster*) deserialize from a stream
/// - int soap_write__tt__ColorDescriptor_ColorCluster(soap, _tt__ColorDescriptor_ColorCluster*) serialize to a stream
    class _tt__ColorDescriptor_ColorCluster
    {
/// Element Color of type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Element Weight of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element Covariance of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    tt__ColorCovariance*                 Covariance                     0;	///< Optional element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }>                                  *ColorCluster                   0;
/// Element Extension of type xs:anyType.
    xsd__anyType*                        Extension                      0;	///< Optional element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":Transformation is a complexType.
/// class tt__Transformation operations:
/// - soap_new_tt__Transformation(soap*) allocate
/// - soap_new_tt__Transformation(soap*, int num) allocate array
/// - soap_new_req_tt__Transformation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Transformation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Transformation(soap*, tt__Transformation*) deserialize from a stream
/// - int soap_write_tt__Transformation(soap, tt__Transformation*) serialize to a stream
class tt__Transformation
{ public:
/// Element Translate of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Translate                      0;	///< Optional element.
/// Element Scale of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Scale                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    tt__TransformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
/// class tt__TransformationExtension operations:
/// - soap_new_tt__TransformationExtension(soap*) allocate
/// - soap_new_tt__TransformationExtension(soap*, int num) allocate array
/// - soap_new_req_tt__TransformationExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tt__TransformationExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tt__TransformationExtension(soap*, tt__TransformationExtension*) deserialize from a stream
/// - int soap_write_tt__TransformationExtension(soap, tt__TransformationExtension*) serialize to a stream
class tt__TransformationExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
/// class tt__GeoLocation operations:
/// - soap_new_tt__GeoLocation(soap*) allocate
/// - soap_new_tt__GeoLocation(soap*, int num) allocate array
/// - soap_new_req_tt__GeoLocation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GeoLocation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GeoLocation(soap*, tt__GeoLocation*) deserialize from a stream
/// - int soap_write_tt__GeoLocation(soap, tt__GeoLocation*) serialize to a stream
class tt__GeoLocation
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief East west location as angle.
/// Attribute lon of type xs:double.
   @double*                              lon                            0;	///< Optional attribute.
/// @brief North south location as angle.
/// Attribute lat of type xs:double.
   @double*                              lat                            0;	///< Optional attribute.
/// @brief Hight in meters above sea level.
/// Attribute elevation of type xs:float.
   @float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":GeoOrientation is a complexType.
/// class tt__GeoOrientation operations:
/// - soap_new_tt__GeoOrientation(soap*) allocate
/// - soap_new_tt__GeoOrientation(soap*, int num) allocate array
/// - soap_new_req_tt__GeoOrientation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__GeoOrientation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__GeoOrientation(soap*, tt__GeoOrientation*) deserialize from a stream
/// - int soap_write_tt__GeoOrientation(soap, tt__GeoOrientation*) serialize to a stream
class tt__GeoOrientation
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Rotation around the x axis.
/// Attribute roll of type xs:float.
   @float*                               roll                           0;	///< Optional attribute.
/// @brief Rotation around the y axis.
/// Attribute pitch of type xs:float.
   @float*                               pitch                          0;	///< Optional attribute.
/// @brief Rotation around the z axis.
/// Attribute yaw of type xs:float.
   @float*                               yaw                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LocalLocation is a complexType.
/// class tt__LocalLocation operations:
/// - soap_new_tt__LocalLocation(soap*) allocate
/// - soap_new_tt__LocalLocation(soap*, int num) allocate array
/// - soap_new_req_tt__LocalLocation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LocalLocation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LocalLocation(soap*, tt__LocalLocation*) deserialize from a stream
/// - int soap_write_tt__LocalLocation(soap, tt__LocalLocation*) serialize to a stream
class tt__LocalLocation
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief East west location as angle.
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// @brief North south location as angle.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
/// @brief Offset in meters from the sea level.
/// Attribute z of type xs:float.
   @float*                               z                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LocalOrientation is a complexType.
/// class tt__LocalOrientation operations:
/// - soap_new_tt__LocalOrientation(soap*) allocate
/// - soap_new_tt__LocalOrientation(soap*, int num) allocate array
/// - soap_new_req_tt__LocalOrientation(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LocalOrientation(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LocalOrientation(soap*, tt__LocalOrientation*) deserialize from a stream
/// - int soap_write_tt__LocalOrientation(soap, tt__LocalOrientation*) serialize to a stream
class tt__LocalOrientation
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Rotation around the y axis.
/// Attribute pan of type xs:float.
   @float*                               pan                            0;	///< Optional attribute.
/// @brief Rotation around the z axis.
/// Attribute tilt of type xs:float.
   @float*                               tilt                           0;	///< Optional attribute.
/// @brief Rotation around the x axis.
/// Attribute roll of type xs:float.
   @float*                               roll                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":LocationEntity is a complexType.
/// class tt__LocationEntity operations:
/// - soap_new_tt__LocationEntity(soap*) allocate
/// - soap_new_tt__LocationEntity(soap*, int num) allocate array
/// - soap_new_req_tt__LocationEntity(soap*, ...) allocate, set required members
/// - soap_new_set_tt__LocationEntity(soap*, ...) allocate, set all public members
/// - int soap_read_tt__LocationEntity(soap*, tt__LocationEntity*) deserialize from a stream
/// - int soap_write_tt__LocationEntity(soap, tt__LocationEntity*) serialize to a stream
class tt__LocationEntity
{ public:
/// @brief Location on earth.
/// Element GeoLocation of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// @brief Orientation relative to earth.
/// Element GeoOrientation of type "http://www.onvif.org/ver10/schema":GeoOrientation.
    tt__GeoOrientation*                  GeoOrientation                 0;	///< Optional element.
/// @brief Indoor location offset.
/// Element LocalLocation of type "http://www.onvif.org/ver10/schema":LocalLocation.
    tt__LocalLocation*                   LocalLocation                  0;	///< Optional element.
/// @brief Indoor orientation offset.
/// Element LocalOrientation of type "http://www.onvif.org/ver10/schema":LocalOrientation.
    tt__LocalOrientation*                LocalOrientation               0;	///< Optional element.
/// @brief Entity type the entry refers to, use a value from the tt:Entity enumeration.
/// Attribute Entity of type xs:string.
   @std::string*                         Entity                         0;	///< Optional attribute.
/// @brief Optional entity token.
/// Attribute Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken*                  Token                          0;	///< Optional attribute.
/// @brief If this value is true the entity cannot be deleted.
/// Attribute Fixed of type xs:boolean.
   @bool*                                Fixed                          0;	///< Optional attribute.
/// @brief Optional reference to the XAddr of another devices DeviceManagement service.
/// Attribute GeoSource of type xs:anyURI.
   @xsd__anyURI*                         GeoSource                      0;	///< Optional attribute.
/// @brief If set the geo location is obtained internally.
/// Attribute AutoGeo of type xs:boolean.
   @bool*                                AutoGeo                        0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/schema":StringItems

/// "http://www.onvif.org/ver10/schema":StringItems is a complexType.
/// class _tt__StringItems operations:
/// - soap_new__tt__StringItems(soap*) allocate
/// - soap_new__tt__StringItems(soap*, int num) allocate array
/// - soap_new_req__tt__StringItems(soap*, ...) allocate, set required members
/// - soap_new_set__tt__StringItems(soap*, ...) allocate, set all public members
/// - int soap_read__tt__StringItems(soap*, _tt__StringItems*) deserialize from a stream
/// - int soap_write__tt__StringItems(soap, _tt__StringItems*) serialize to a stream
class _tt__StringItems
{ public:
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Item                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/schema":Message

/// "http://www.onvif.org/ver10/schema":Message is a complexType.
/// class _tt__Message operations:
/// - soap_new__tt__Message(soap*) allocate
/// - soap_new__tt__Message(soap*, int num) allocate array
/// - soap_new_req__tt__Message(soap*, ...) allocate, set required members
/// - soap_new_set__tt__Message(soap*, ...) allocate, set all public members
/// - int soap_read__tt__Message(soap*, _tt__Message*) deserialize from a stream
/// - int soap_write__tt__Message(soap, _tt__Message*) serialize to a stream
class _tt__Message
{ public:
/// @brief Token value pairs that triggered this message. Typically only one item is present.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageExtension.
    tt__MessageExtension*                Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute PropertyOperation of type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
/// class wsnt__QueryExpressionType operations:
/// - soap_new_wsnt__QueryExpressionType(soap*) allocate
/// - soap_new_wsnt__QueryExpressionType(soap*, int num) allocate array
/// - soap_new_req_wsnt__QueryExpressionType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__QueryExpressionType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__QueryExpressionType(soap*, wsnt__QueryExpressionType*) deserialize from a stream
/// - int soap_write_wsnt__QueryExpressionType(soap, wsnt__QueryExpressionType*) serialize to a stream
class wsnt__QueryExpressionType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
/// class wsnt__TopicExpressionType operations:
/// - soap_new_wsnt__TopicExpressionType(soap*) allocate
/// - soap_new_wsnt__TopicExpressionType(soap*, int num) allocate array
/// - soap_new_req_wsnt__TopicExpressionType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__TopicExpressionType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__TopicExpressionType(soap*, wsnt__TopicExpressionType*) deserialize from a stream
/// - int soap_write_wsnt__TopicExpressionType(soap, wsnt__TopicExpressionType*) serialize to a stream
class wsnt__TopicExpressionType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
/// class wsnt__FilterType operations:
/// - soap_new_wsnt__FilterType(soap*) allocate
/// - soap_new_wsnt__FilterType(soap*, int num) allocate array
/// - soap_new_req_wsnt__FilterType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__FilterType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__FilterType(soap*, wsnt__FilterType*) deserialize from a stream
/// - int soap_write_wsnt__FilterType(soap, wsnt__FilterType*) serialize to a stream
class wsnt__FilterType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
/// class wsnt__SubscriptionPolicyType operations:
/// - soap_new_wsnt__SubscriptionPolicyType(soap*) allocate
/// - soap_new_wsnt__SubscriptionPolicyType(soap*, int num) allocate array
/// - soap_new_req_wsnt__SubscriptionPolicyType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__SubscriptionPolicyType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__SubscriptionPolicyType(soap*, wsnt__SubscriptionPolicyType*) deserialize from a stream
/// - int soap_write_wsnt__SubscriptionPolicyType(soap, wsnt__SubscriptionPolicyType*) serialize to a stream
class wsnt__SubscriptionPolicyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
/// class wsnt__NotificationMessageHolderType operations:
/// - soap_new_wsnt__NotificationMessageHolderType(soap*) allocate
/// - soap_new_wsnt__NotificationMessageHolderType(soap*, int num) allocate array
/// - soap_new_req_wsnt__NotificationMessageHolderType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__NotificationMessageHolderType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__NotificationMessageHolderType(soap*, wsnt__NotificationMessageHolderType*) deserialize from a stream
/// - int soap_write_wsnt__NotificationMessageHolderType(soap, wsnt__NotificationMessageHolderType*) serialize to a stream
class wsnt__NotificationMessageHolderType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    wsnt__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// class _wsnt__NotificationMessageHolderType_Message operations:
/// - soap_new__wsnt__NotificationMessageHolderType_Message(soap*) allocate
/// - soap_new__wsnt__NotificationMessageHolderType_Message(soap*, int num) allocate array
/// - soap_new_req__wsnt__NotificationMessageHolderType_Message(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__NotificationMessageHolderType_Message(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__NotificationMessageHolderType_Message(soap*, _wsnt__NotificationMessageHolderType_Message*) deserialize from a stream
/// - int soap_write__wsnt__NotificationMessageHolderType_Message(soap, _wsnt__NotificationMessageHolderType_Message*) serialize to a stream
    class _wsnt__NotificationMessageHolderType_Message
    {
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                    Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP

/// "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
/// class _wsnt__NotificationProducerRP operations:
/// - soap_new__wsnt__NotificationProducerRP(soap*) allocate
/// - soap_new__wsnt__NotificationProducerRP(soap*, int num) allocate array
/// - soap_new_req__wsnt__NotificationProducerRP(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__NotificationProducerRP(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__NotificationProducerRP(soap*, _wsnt__NotificationProducerRP*) deserialize from a stream
/// - int soap_write__wsnt__NotificationProducerRP(soap, _wsnt__NotificationProducerRP*) serialize to a stream
class _wsnt__NotificationProducerRP
{ public:
/// Vector of wsnt__TopicExpressionType* element refs with length 0..unbounded
    std::vector<wsnt__TopicExpressionType*> TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                FixedTopicSet                  0;	///< Optional element.
/// Vector of xsd__anyURI element refs with length 0..unbounded
    std::vector<xsd__anyURI            > TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
/// class _wsnt__SubscriptionManagerRP operations:
/// - soap_new__wsnt__SubscriptionManagerRP(soap*) allocate
/// - soap_new__wsnt__SubscriptionManagerRP(soap*, int num) allocate array
/// - soap_new_req__wsnt__SubscriptionManagerRP(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__SubscriptionManagerRP(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__SubscriptionManagerRP(soap*, _wsnt__SubscriptionManagerRP*) deserialize from a stream
/// - int soap_write__wsnt__SubscriptionManagerRP(soap, _wsnt__SubscriptionManagerRP*) serialize to a stream
class _wsnt__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    wsnt__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
/// class _wsnt__Notify operations:
/// - soap_new__wsnt__Notify(soap*) allocate
/// - soap_new__wsnt__Notify(soap*, int num) allocate array
/// - soap_new_req__wsnt__Notify(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Notify(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Notify(soap*, _wsnt__Notify*) deserialize from a stream
/// - int soap_write__wsnt__Notify(soap, _wsnt__Notify*) serialize to a stream
class _wsnt__Notify
{ public:
/// Vector of wsnt__NotificationMessageHolderType* element refs with length 1..unbounded
    std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
/// class _wsnt__UseRaw operations:
/// - soap_new__wsnt__UseRaw(soap*) allocate
/// - soap_new__wsnt__UseRaw(soap*, int num) allocate array
/// - soap_new_req__wsnt__UseRaw(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__UseRaw(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__UseRaw(soap*, _wsnt__UseRaw*) deserialize from a stream
/// - int soap_write__wsnt__UseRaw(soap, _wsnt__UseRaw*) serialize to a stream
class _wsnt__UseRaw
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
/// class _wsnt__Subscribe operations:
/// - soap_new__wsnt__Subscribe(soap*) allocate
/// - soap_new__wsnt__Subscribe(soap*, int num) allocate array
/// - soap_new_req__wsnt__Subscribe(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Subscribe(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Subscribe(soap*, _wsnt__Subscribe*) deserialize from a stream
/// - int soap_write__wsnt__Subscribe(soap, _wsnt__Subscribe*) serialize to a stream
class _wsnt__Subscribe
{ public:
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Nillable pointer.
/// class _wsnt__Subscribe_SubscriptionPolicy operations:
/// - soap_new__wsnt__Subscribe_SubscriptionPolicy(soap*) allocate
/// - soap_new__wsnt__Subscribe_SubscriptionPolicy(soap*, int num) allocate array
/// - soap_new_req__wsnt__Subscribe_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Subscribe_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Subscribe_SubscriptionPolicy(soap*, _wsnt__Subscribe_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__wsnt__Subscribe_SubscriptionPolicy(soap, _wsnt__Subscribe_SubscriptionPolicy*) serialize to a stream
    class _wsnt__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
/// class _wsnt__SubscribeResponse operations:
/// - soap_new__wsnt__SubscribeResponse(soap*) allocate
/// - soap_new__wsnt__SubscribeResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__SubscribeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__SubscribeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__SubscribeResponse(soap*, _wsnt__SubscribeResponse*) deserialize from a stream
/// - int soap_write__wsnt__SubscribeResponse(soap, _wsnt__SubscribeResponse*) serialize to a stream
class _wsnt__SubscribeResponse
{ public:
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
/// class _wsnt__GetCurrentMessage operations:
/// - soap_new__wsnt__GetCurrentMessage(soap*) allocate
/// - soap_new__wsnt__GetCurrentMessage(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetCurrentMessage(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetCurrentMessage(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetCurrentMessage(soap*, _wsnt__GetCurrentMessage*) deserialize from a stream
/// - int soap_write__wsnt__GetCurrentMessage(soap, _wsnt__GetCurrentMessage*) serialize to a stream
class _wsnt__GetCurrentMessage
{ public:
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    wsnt__TopicExpressionType*           Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
/// class _wsnt__GetCurrentMessageResponse operations:
/// - soap_new__wsnt__GetCurrentMessageResponse(soap*) allocate
/// - soap_new__wsnt__GetCurrentMessageResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetCurrentMessageResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetCurrentMessageResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetCurrentMessageResponse(soap*, _wsnt__GetCurrentMessageResponse*) deserialize from a stream
/// - int soap_write__wsnt__GetCurrentMessageResponse(soap, _wsnt__GetCurrentMessageResponse*) serialize to a stream
class _wsnt__GetCurrentMessageResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
/// class _wsnt__GetMessages operations:
/// - soap_new__wsnt__GetMessages(soap*) allocate
/// - soap_new__wsnt__GetMessages(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetMessages(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetMessages(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetMessages(soap*, _wsnt__GetMessages*) deserialize from a stream
/// - int soap_write__wsnt__GetMessages(soap, _wsnt__GetMessages*) serialize to a stream
class _wsnt__GetMessages
{ public:
/// Element MaximumNumber of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
/// class _wsnt__GetMessagesResponse operations:
/// - soap_new__wsnt__GetMessagesResponse(soap*) allocate
/// - soap_new__wsnt__GetMessagesResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__GetMessagesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__GetMessagesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__GetMessagesResponse(soap*, _wsnt__GetMessagesResponse*) deserialize from a stream
/// - int soap_write__wsnt__GetMessagesResponse(soap, _wsnt__GetMessagesResponse*) serialize to a stream
class _wsnt__GetMessagesResponse
{ public:
/// Vector of wsnt__NotificationMessageHolderType* element refs with length 0..unbounded
    std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
/// class _wsnt__DestroyPullPoint operations:
/// - soap_new__wsnt__DestroyPullPoint(soap*) allocate
/// - soap_new__wsnt__DestroyPullPoint(soap*, int num) allocate array
/// - soap_new_req__wsnt__DestroyPullPoint(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__DestroyPullPoint(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__DestroyPullPoint(soap*, _wsnt__DestroyPullPoint*) deserialize from a stream
/// - int soap_write__wsnt__DestroyPullPoint(soap, _wsnt__DestroyPullPoint*) serialize to a stream
class _wsnt__DestroyPullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
/// class _wsnt__DestroyPullPointResponse operations:
/// - soap_new__wsnt__DestroyPullPointResponse(soap*) allocate
/// - soap_new__wsnt__DestroyPullPointResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__DestroyPullPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__DestroyPullPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__DestroyPullPointResponse(soap*, _wsnt__DestroyPullPointResponse*) deserialize from a stream
/// - int soap_write__wsnt__DestroyPullPointResponse(soap, _wsnt__DestroyPullPointResponse*) serialize to a stream
class _wsnt__DestroyPullPointResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
/// class _wsnt__CreatePullPoint operations:
/// - soap_new__wsnt__CreatePullPoint(soap*) allocate
/// - soap_new__wsnt__CreatePullPoint(soap*, int num) allocate array
/// - soap_new_req__wsnt__CreatePullPoint(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__CreatePullPoint(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__CreatePullPoint(soap*, _wsnt__CreatePullPoint*) deserialize from a stream
/// - int soap_write__wsnt__CreatePullPoint(soap, _wsnt__CreatePullPoint*) serialize to a stream
class _wsnt__CreatePullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
/// class _wsnt__CreatePullPointResponse operations:
/// - soap_new__wsnt__CreatePullPointResponse(soap*) allocate
/// - soap_new__wsnt__CreatePullPointResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__CreatePullPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__CreatePullPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__CreatePullPointResponse(soap*, _wsnt__CreatePullPointResponse*) deserialize from a stream
/// - int soap_write__wsnt__CreatePullPointResponse(soap, _wsnt__CreatePullPointResponse*) serialize to a stream
class _wsnt__CreatePullPointResponse
{ public:
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
/// class _wsnt__Renew operations:
/// - soap_new__wsnt__Renew(soap*) allocate
/// - soap_new__wsnt__Renew(soap*, int num) allocate array
/// - soap_new_req__wsnt__Renew(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Renew(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Renew(soap*, _wsnt__Renew*) deserialize from a stream
/// - int soap_write__wsnt__Renew(soap, _wsnt__Renew*) serialize to a stream
class _wsnt__Renew
{ public:
/// Element TerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    TerminationTime                1;	///< Nillable pointer.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
/// class _wsnt__RenewResponse operations:
/// - soap_new__wsnt__RenewResponse(soap*) allocate
/// - soap_new__wsnt__RenewResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__RenewResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__RenewResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__RenewResponse(soap*, _wsnt__RenewResponse*) deserialize from a stream
/// - int soap_write__wsnt__RenewResponse(soap, _wsnt__RenewResponse*) serialize to a stream
class _wsnt__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
/// class _wsnt__Unsubscribe operations:
/// - soap_new__wsnt__Unsubscribe(soap*) allocate
/// - soap_new__wsnt__Unsubscribe(soap*, int num) allocate array
/// - soap_new_req__wsnt__Unsubscribe(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__Unsubscribe(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__Unsubscribe(soap*, _wsnt__Unsubscribe*) deserialize from a stream
/// - int soap_write__wsnt__Unsubscribe(soap, _wsnt__Unsubscribe*) serialize to a stream
class _wsnt__Unsubscribe
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
/// class _wsnt__UnsubscribeResponse operations:
/// - soap_new__wsnt__UnsubscribeResponse(soap*) allocate
/// - soap_new__wsnt__UnsubscribeResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__UnsubscribeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__UnsubscribeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__UnsubscribeResponse(soap*, _wsnt__UnsubscribeResponse*) deserialize from a stream
/// - int soap_write__wsnt__UnsubscribeResponse(soap, _wsnt__UnsubscribeResponse*) serialize to a stream
class _wsnt__UnsubscribeResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
/// class _wsnt__PauseSubscription operations:
/// - soap_new__wsnt__PauseSubscription(soap*) allocate
/// - soap_new__wsnt__PauseSubscription(soap*, int num) allocate array
/// - soap_new_req__wsnt__PauseSubscription(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__PauseSubscription(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__PauseSubscription(soap*, _wsnt__PauseSubscription*) deserialize from a stream
/// - int soap_write__wsnt__PauseSubscription(soap, _wsnt__PauseSubscription*) serialize to a stream
class _wsnt__PauseSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
/// class _wsnt__PauseSubscriptionResponse operations:
/// - soap_new__wsnt__PauseSubscriptionResponse(soap*) allocate
/// - soap_new__wsnt__PauseSubscriptionResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__PauseSubscriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__PauseSubscriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__PauseSubscriptionResponse(soap*, _wsnt__PauseSubscriptionResponse*) deserialize from a stream
/// - int soap_write__wsnt__PauseSubscriptionResponse(soap, _wsnt__PauseSubscriptionResponse*) serialize to a stream
class _wsnt__PauseSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
/// class _wsnt__ResumeSubscription operations:
/// - soap_new__wsnt__ResumeSubscription(soap*) allocate
/// - soap_new__wsnt__ResumeSubscription(soap*, int num) allocate array
/// - soap_new_req__wsnt__ResumeSubscription(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__ResumeSubscription(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__ResumeSubscription(soap*, _wsnt__ResumeSubscription*) deserialize from a stream
/// - int soap_write__wsnt__ResumeSubscription(soap, _wsnt__ResumeSubscription*) serialize to a stream
class _wsnt__ResumeSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
/// class _wsnt__ResumeSubscriptionResponse operations:
/// - soap_new__wsnt__ResumeSubscriptionResponse(soap*) allocate
/// - soap_new__wsnt__ResumeSubscriptionResponse(soap*, int num) allocate array
/// - soap_new_req__wsnt__ResumeSubscriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__wsnt__ResumeSubscriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__wsnt__ResumeSubscriptionResponse(soap*, _wsnt__ResumeSubscriptionResponse*) deserialize from a stream
/// - int soap_write__wsnt__ResumeSubscriptionResponse(soap, _wsnt__ResumeSubscriptionResponse*) serialize to a stream
class _wsnt__ResumeSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
/// class wsrfbf__BaseFaultType operations:
/// - soap_new_wsrfbf__BaseFaultType(soap*) allocate
/// - soap_new_wsrfbf__BaseFaultType(soap*, int num) allocate array
/// - soap_new_req_wsrfbf__BaseFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsrfbf__BaseFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsrfbf__BaseFaultType(soap*, wsrfbf__BaseFaultType*) deserialize from a stream
/// - int soap_write_wsrfbf__BaseFaultType(soap, wsrfbf__BaseFaultType*) serialize to a stream
class wsrfbf__BaseFaultType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__BaseFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__BaseFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__BaseFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__BaseFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__BaseFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__BaseFaultType_ErrorCode(soap*, _wsrfbf__BaseFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_ErrorCode(soap, _wsrfbf__BaseFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__BaseFaultType_Description operations:
/// - soap_new__wsrfbf__BaseFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__BaseFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__BaseFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__BaseFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__BaseFaultType_Description(soap*, _wsrfbf__BaseFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_Description(soap, _wsrfbf__BaseFaultType_Description*) serialize to a stream
    class _wsrfbf__BaseFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__BaseFaultType_FaultCause operations:
/// - soap_new__wsrfbf__BaseFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__BaseFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__BaseFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__BaseFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__BaseFaultType_FaultCause(soap*, _wsrfbf__BaseFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__BaseFaultType_FaultCause(soap, _wsrfbf__BaseFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__BaseFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
/// class wstop__Documentation operations:
/// - soap_new_wstop__Documentation(soap*) allocate
/// - soap_new_wstop__Documentation(soap*, int num) allocate array
/// - soap_new_req_wstop__Documentation(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__Documentation(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__Documentation(soap*, wstop__Documentation*) deserialize from a stream
/// - int soap_write_wstop__Documentation(soap, wstop__Documentation*) serialize to a stream
class wstop__Documentation
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
/// class wstop__ExtensibleDocumented operations:
/// - soap_new_wstop__ExtensibleDocumented(soap*) allocate
/// - soap_new_wstop__ExtensibleDocumented(soap*, int num) allocate array
/// - soap_new_req_wstop__ExtensibleDocumented(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__ExtensibleDocumented(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__ExtensibleDocumented(soap*, wstop__ExtensibleDocumented*) deserialize from a stream
/// - int soap_write_wstop__ExtensibleDocumented(soap, wstop__ExtensibleDocumented*) serialize to a stream
class wstop__ExtensibleDocumented
{ public:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
/// class wstop__QueryExpressionType operations:
/// - soap_new_wstop__QueryExpressionType(soap*) allocate
/// - soap_new_wstop__QueryExpressionType(soap*, int num) allocate array
/// - soap_new_req_wstop__QueryExpressionType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__QueryExpressionType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__QueryExpressionType(soap*, wstop__QueryExpressionType*) deserialize from a stream
/// - int soap_write_wstop__QueryExpressionType(soap, wstop__QueryExpressionType*) serialize to a stream
class wstop__QueryExpressionType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __mixed                       0;	///< Catch mixed content in DOM soap_dom_element linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities is a complexType.
/// class tmd__Capabilities operations:
/// - soap_new_tmd__Capabilities(soap*) allocate
/// - soap_new_tmd__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tmd__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__Capabilities(soap*, tmd__Capabilities*) deserialize from a stream
/// - int soap_write_tmd__Capabilities(soap, tmd__Capabilities*) serialize to a stream
class tmd__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Number of video sources (defaults to none).
/// Attribute VideoSources of type xs:int.
   @int                                  VideoSources                   0 = 0;	///< Default value="0".
/// @brief Number of video outputs (defaults to none).
/// Attribute VideoOutputs of type xs:int.
   @int                                  VideoOutputs                   0 = 0;	///< Default value="0".
/// @brief Number of audio sources (defaults to none).
/// Attribute AudioSources of type xs:int.
   @int                                  AudioSources                   0 = 0;	///< Default value="0".
/// @brief Number of audio outputs (defaults to none).
/// Attribute AudioOutputs of type xs:int.
   @int                                  AudioOutputs                   0 = 0;	///< Default value="0".
/// @brief Number of relay outputs (defaults to none).
/// Attribute RelayOutputs of type xs:int.
   @int                                  RelayOutputs                   0 = 0;	///< Default value="0".
/// @brief Number of serial ports (defaults to none).
/// Attribute SerialPorts of type xs:int.
   @int                                  SerialPorts                    0 = 0;	///< Default value="0".
/// @brief Number of digital inputs (defaults to none).
/// Attribute DigitalInputs of type xs:int.
   @int                                  DigitalInputs                  0 = 0;	///< Default value="0".
/// @brief Indicates support for DigitalInput configuration of the idle state (defaults to false).
/// Attribute DigitalInputOptions of type xs:boolean.
   @bool                                 DigitalInputOptions            0 = false;	///< Default value="false".
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptions is a complexType.
/// class tmd__RelayOutputOptions operations:
/// - soap_new_tmd__RelayOutputOptions(soap*) allocate
/// - soap_new_tmd__RelayOutputOptions(soap*, int num) allocate array
/// - soap_new_req_tmd__RelayOutputOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__RelayOutputOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__RelayOutputOptions(soap*, tmd__RelayOutputOptions*) deserialize from a stream
/// - int soap_write_tmd__RelayOutputOptions(soap, tmd__RelayOutputOptions*) serialize to a stream
class tmd__RelayOutputOptions
{ public:
/// @brief Supported Modes.
/// Vector of enum tt__RelayMode with length 1..unbounded
    std::vector<enum tt__RelayMode     > Mode                           1;
/// @brief Supported delay time range or discrete values in seconds. This element must be present if MonoStable mode is supported.
/// Element DelayTimes of type "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes.
    tmd__DelayTimes*                     DelayTimes                     0;	///< Optional element.
/// @brief True if the relay only supports the exact values for the DelayTimes listed. Default is false.
/// Element Discrete of type xs:boolean.
    bool*                                Discrete                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension.
    tmd__RelayOutputOptionsExtension*    Extension                      0;	///< Optional element.
/// @brief Token of the relay output.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension is a complexType.
/// class tmd__RelayOutputOptionsExtension operations:
/// - soap_new_tmd__RelayOutputOptionsExtension(soap*) allocate
/// - soap_new_tmd__RelayOutputOptionsExtension(soap*, int num) allocate array
/// - soap_new_req_tmd__RelayOutputOptionsExtension(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__RelayOutputOptionsExtension(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__RelayOutputOptionsExtension(soap*, tmd__RelayOutputOptionsExtension*) deserialize from a stream
/// - int soap_write_tmd__RelayOutputOptionsExtension(soap, tmd__RelayOutputOptionsExtension*) serialize to a stream
class tmd__RelayOutputOptionsExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":Get is a complexType.
/// class tmd__Get operations:
/// - soap_new_tmd__Get(soap*) allocate
/// - soap_new_tmd__Get(soap*, int num) allocate array
/// - soap_new_req_tmd__Get(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__Get(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__Get(soap*, tmd__Get*) deserialize from a stream
/// - int soap_write_tmd__Get(soap, tmd__Get*) serialize to a stream
class tmd__Get
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse is a complexType.
/// class tmd__GetResponse operations:
/// - soap_new_tmd__GetResponse(soap*) allocate
/// - soap_new_tmd__GetResponse(soap*, int num) allocate array
/// - soap_new_req_tmd__GetResponse(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__GetResponse(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__GetResponse(soap*, tmd__GetResponse*) deserialize from a stream
/// - int soap_write_tmd__GetResponse(soap, tmd__GetResponse*) serialize to a stream
class tmd__GetResponse
{ public:
/// @brief List tokens of a physical IO of a device.
/// Vector of tt__ReferenceToken with length 0..unbounded
    std::vector<tt__ReferenceToken     > Token                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":DigitalInputConfigurationOptions is a complexType.
/// class tmd__DigitalInputConfigurationOptions operations:
/// - soap_new_tmd__DigitalInputConfigurationOptions(soap*) allocate
/// - soap_new_tmd__DigitalInputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tmd__DigitalInputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__DigitalInputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__DigitalInputConfigurationOptions(soap*, tmd__DigitalInputConfigurationOptions*) deserialize from a stream
/// - int soap_write_tmd__DigitalInputConfigurationOptions(soap, tmd__DigitalInputConfigurationOptions*) serialize to a stream
class tmd__DigitalInputConfigurationOptions
{ public:
/// @brief Configuration Options for a digital input.
/// Vector of enum tt__DigitalIdleState with length 1..unbounded
    std::vector<enum tt__DigitalIdleState> IdleState                      1;
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData is a complexType.
/// @brief The serial port data.
/// class tmd__SerialData operations:
/// - soap_new_tmd__SerialData(soap*) allocate
/// - soap_new_tmd__SerialData(soap*, int num) allocate array
/// - soap_new_req_tmd__SerialData(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__SerialData(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__SerialData(soap*, tmd__SerialData*) deserialize from a stream
/// - int soap_write_tmd__SerialData(soap, tmd__SerialData*) serialize to a stream
class tmd__SerialData
{ public:
/// CHOICE <xs:choice>
   $int                                  __union_SerialData            ;	///< Union _tmd__union_SerialData selector: set to SOAP_UNION__tmd__union_SerialData_<fieldname>
/// Union for choice in type tmd__SerialData
    union _tmd__union_SerialData
    {
/// Element Binary of type xs:base64Binary.
    xsd__base64Binary*                   Binary                         1;	///< Required element.
/// Element String of type xs:string.
    std::string*                         String                         1;	///< Required element.
    }                                    union_SerialData              ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration is a complexType.
/// @brief The parameters for configuring the serial port.
/// class tmd__SerialPortConfiguration operations:
/// - soap_new_tmd__SerialPortConfiguration(soap*) allocate
/// - soap_new_tmd__SerialPortConfiguration(soap*, int num) allocate array
/// - soap_new_req_tmd__SerialPortConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__SerialPortConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__SerialPortConfiguration(soap*, tmd__SerialPortConfiguration*) deserialize from a stream
/// - int soap_write_tmd__SerialPortConfiguration(soap, tmd__SerialPortConfiguration*) serialize to a stream
class tmd__SerialPortConfiguration
{ public:
/// @brief The transfer bitrate.
/// Element BaudRate of type xs:int.
    int                                  BaudRate                       1;	///< Required element.
/// @brief The parity for the data error detection.
/// Element ParityBit of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit.
    enum tmd__ParityBit                  ParityBit                      1;	///< Required element.
/// @brief The bit length for each character.
/// Element CharacterLength of type xs:int.
    int                                  CharacterLength                1;	///< Required element.
/// @brief The number of stop bits used to terminate each character.
/// Element StopBit of type xs:float.
    float                                StopBit                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Attribute type of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType.
   @enum tmd__SerialPortType             type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions is a complexType.
/// @brief The configuration options that relates to serial port.
/// class tmd__SerialPortConfigurationOptions operations:
/// - soap_new_tmd__SerialPortConfigurationOptions(soap*) allocate
/// - soap_new_tmd__SerialPortConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req_tmd__SerialPortConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__SerialPortConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__SerialPortConfigurationOptions(soap*, tmd__SerialPortConfigurationOptions*) deserialize from a stream
/// - int soap_write_tmd__SerialPortConfigurationOptions(soap, tmd__SerialPortConfigurationOptions*) serialize to a stream
class tmd__SerialPortConfigurationOptions
{ public:
/// @brief The list of configurable transfer bitrate.
/// Element BaudRateList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        BaudRateList                   1;	///< Required element.
/// @brief The list of configurable parity for the data error detection.
/// Element ParityBitList of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList.
    tmd__ParityBitList*                  ParityBitList                  1;	///< Required element.
/// @brief The list of configurable bit length for each character.
/// Element CharacterLengthList of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        CharacterLengthList            1;	///< Required element.
/// @brief The list of configurable number of stop bits used to terminate each character.
/// Element StopBitList of type "http://www.onvif.org/ver10/schema":FloatItems.
    tt__FloatItems*                      StopBitList                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList is a complexType.
/// @brief The list of configurable parity for the data error detection.
/// class tmd__ParityBitList operations:
/// - soap_new_tmd__ParityBitList(soap*) allocate
/// - soap_new_tmd__ParityBitList(soap*, int num) allocate array
/// - soap_new_req_tmd__ParityBitList(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__ParityBitList(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__ParityBitList(soap*, tmd__ParityBitList*) deserialize from a stream
/// - int soap_write_tmd__ParityBitList(soap, tmd__ParityBitList*) serialize to a stream
class tmd__ParityBitList
{ public:
/// Vector of enum tmd__ParityBit with length 0..unbounded
    std::vector<enum tmd__ParityBit    > Items                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities is a complexType.
/// class _tmd__GetServiceCapabilities operations:
/// - soap_new__tmd__GetServiceCapabilities(soap*) allocate
/// - soap_new__tmd__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tmd__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetServiceCapabilities(soap*, _tmd__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tmd__GetServiceCapabilities(soap, _tmd__GetServiceCapabilities*) serialize to a stream
class _tmd__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _tmd__GetServiceCapabilitiesResponse operations:
/// - soap_new__tmd__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tmd__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetServiceCapabilitiesResponse(soap*, _tmd__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tmd__GetServiceCapabilitiesResponse(soap, _tmd__GetServiceCapabilitiesResponse*) serialize to a stream
class _tmd__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the device IO service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
    tmd__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions is a complexType.
/// class _tmd__GetRelayOutputOptions operations:
/// - soap_new__tmd__GetRelayOutputOptions(soap*) allocate
/// - soap_new__tmd__GetRelayOutputOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetRelayOutputOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetRelayOutputOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetRelayOutputOptions(soap*, _tmd__GetRelayOutputOptions*) deserialize from a stream
/// - int soap_write__tmd__GetRelayOutputOptions(soap, _tmd__GetRelayOutputOptions*) serialize to a stream
class _tmd__GetRelayOutputOptions
{ public:
/// @brief Optional reference token to the relay for which the options are requested.
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  RelayOutputToken               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse is a complexType.
/// class _tmd__GetRelayOutputOptionsResponse operations:
/// - soap_new__tmd__GetRelayOutputOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetRelayOutputOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetRelayOutputOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetRelayOutputOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetRelayOutputOptionsResponse(soap*, _tmd__GetRelayOutputOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetRelayOutputOptionsResponse(soap, _tmd__GetRelayOutputOptionsResponse*) serialize to a stream
class _tmd__GetRelayOutputOptionsResponse
{ public:
/// @brief Valid values and ranges for the configuration of a relay output.
/// Vector of tmd__RelayOutputOptions* with length 0..unbounded
    std::vector<tmd__RelayOutputOptions*> RelayOutputOptions             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs is a complexType.
/// class _tmd__GetVideoOutputs operations:
/// - soap_new__tmd__GetVideoOutputs(soap*) allocate
/// - soap_new__tmd__GetVideoOutputs(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoOutputs(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoOutputs(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoOutputs(soap*, _tmd__GetVideoOutputs*) deserialize from a stream
/// - int soap_write__tmd__GetVideoOutputs(soap, _tmd__GetVideoOutputs*) serialize to a stream
class _tmd__GetVideoOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse is a complexType.
/// class _tmd__GetVideoOutputsResponse operations:
/// - soap_new__tmd__GetVideoOutputsResponse(soap*) allocate
/// - soap_new__tmd__GetVideoOutputsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoOutputsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoOutputsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoOutputsResponse(soap*, _tmd__GetVideoOutputsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetVideoOutputsResponse(soap, _tmd__GetVideoOutputsResponse*) serialize to a stream
class _tmd__GetVideoOutputsResponse
{ public:
/// @brief List containing all physical Video output connections of a device.
/// Vector of tt__VideoOutput* with length 0..unbounded
    std::vector<tt__VideoOutput*       > VideoOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration is a complexType.
/// class _tmd__GetAudioSourceConfiguration operations:
/// - soap_new__tmd__GetAudioSourceConfiguration(soap*) allocate
/// - soap_new__tmd__GetAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioSourceConfiguration(soap*, _tmd__GetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__tmd__GetAudioSourceConfiguration(soap, _tmd__GetAudioSourceConfiguration*) serialize to a stream
class _tmd__GetAudioSourceConfiguration
{ public:
/// @brief Token of the requested AudioSource.
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse is a complexType.
/// class _tmd__GetAudioSourceConfigurationResponse operations:
/// - soap_new__tmd__GetAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__tmd__GetAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioSourceConfigurationResponse(soap*, _tmd__GetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__GetAudioSourceConfigurationResponse(soap, _tmd__GetAudioSourceConfigurationResponse*) serialize to a stream
class _tmd__GetAudioSourceConfigurationResponse
{ public:
/// @brief Current configuration of the Audio input.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration is a complexType.
/// class _tmd__GetAudioOutputConfiguration operations:
/// - soap_new__tmd__GetAudioOutputConfiguration(soap*) allocate
/// - soap_new__tmd__GetAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioOutputConfiguration(soap*, _tmd__GetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__tmd__GetAudioOutputConfiguration(soap, _tmd__GetAudioOutputConfiguration*) serialize to a stream
class _tmd__GetAudioOutputConfiguration
{ public:
/// @brief Token of the physical Audio output.
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse is a complexType.
/// class _tmd__GetAudioOutputConfigurationResponse operations:
/// - soap_new__tmd__GetAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__tmd__GetAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioOutputConfigurationResponse(soap*, _tmd__GetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__GetAudioOutputConfigurationResponse(soap, _tmd__GetAudioOutputConfigurationResponse*) serialize to a stream
class _tmd__GetAudioOutputConfigurationResponse
{ public:
/// @brief Current configuration of the Audio output.
/// Element AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration is a complexType.
/// class _tmd__GetVideoSourceConfiguration operations:
/// - soap_new__tmd__GetVideoSourceConfiguration(soap*) allocate
/// - soap_new__tmd__GetVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoSourceConfiguration(soap*, _tmd__GetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__tmd__GetVideoSourceConfiguration(soap, _tmd__GetVideoSourceConfiguration*) serialize to a stream
class _tmd__GetVideoSourceConfiguration
{ public:
/// @brief Token of the requested VideoSource.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse is a complexType.
/// class _tmd__GetVideoSourceConfigurationResponse operations:
/// - soap_new__tmd__GetVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__tmd__GetVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoSourceConfigurationResponse(soap*, _tmd__GetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__GetVideoSourceConfigurationResponse(soap, _tmd__GetVideoSourceConfigurationResponse*) serialize to a stream
class _tmd__GetVideoSourceConfigurationResponse
{ public:
/// @brief Current configuration of the Video input.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration is a complexType.
/// class _tmd__GetVideoOutputConfiguration operations:
/// - soap_new__tmd__GetVideoOutputConfiguration(soap*) allocate
/// - soap_new__tmd__GetVideoOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoOutputConfiguration(soap*, _tmd__GetVideoOutputConfiguration*) deserialize from a stream
/// - int soap_write__tmd__GetVideoOutputConfiguration(soap, _tmd__GetVideoOutputConfiguration*) serialize to a stream
class _tmd__GetVideoOutputConfiguration
{ public:
/// @brief Token of the requested VideoOutput.
/// Element VideoOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse is a complexType.
/// class _tmd__GetVideoOutputConfigurationResponse operations:
/// - soap_new__tmd__GetVideoOutputConfigurationResponse(soap*) allocate
/// - soap_new__tmd__GetVideoOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoOutputConfigurationResponse(soap*, _tmd__GetVideoOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__GetVideoOutputConfigurationResponse(soap, _tmd__GetVideoOutputConfigurationResponse*) serialize to a stream
class _tmd__GetVideoOutputConfigurationResponse
{ public:
/// @brief Current configuration of the Video output.
/// Element VideoOutputConfiguration of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    tt__VideoOutputConfiguration*        VideoOutputConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration is a complexType.
/// class _tmd__SetAudioSourceConfiguration operations:
/// - soap_new__tmd__SetAudioSourceConfiguration(soap*) allocate
/// - soap_new__tmd__SetAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__SetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetAudioSourceConfiguration(soap*, _tmd__SetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__tmd__SetAudioSourceConfiguration(soap, _tmd__SetAudioSourceConfiguration*) serialize to a stream
class _tmd__SetAudioSourceConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse is a complexType.
/// class _tmd__SetAudioSourceConfigurationResponse operations:
/// - soap_new__tmd__SetAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__tmd__SetAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetAudioSourceConfigurationResponse(soap*, _tmd__SetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__SetAudioSourceConfigurationResponse(soap, _tmd__SetAudioSourceConfigurationResponse*) serialize to a stream
class _tmd__SetAudioSourceConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration is a complexType.
/// class _tmd__SetAudioOutputConfiguration operations:
/// - soap_new__tmd__SetAudioOutputConfiguration(soap*) allocate
/// - soap_new__tmd__SetAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__SetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetAudioOutputConfiguration(soap*, _tmd__SetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__tmd__SetAudioOutputConfiguration(soap, _tmd__SetAudioOutputConfiguration*) serialize to a stream
class _tmd__SetAudioOutputConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse is a complexType.
/// class _tmd__SetAudioOutputConfigurationResponse operations:
/// - soap_new__tmd__SetAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__tmd__SetAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetAudioOutputConfigurationResponse(soap*, _tmd__SetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__SetAudioOutputConfigurationResponse(soap, _tmd__SetAudioOutputConfigurationResponse*) serialize to a stream
class _tmd__SetAudioOutputConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration is a complexType.
/// class _tmd__SetVideoSourceConfiguration operations:
/// - soap_new__tmd__SetVideoSourceConfiguration(soap*) allocate
/// - soap_new__tmd__SetVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__SetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetVideoSourceConfiguration(soap*, _tmd__SetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__tmd__SetVideoSourceConfiguration(soap, _tmd__SetVideoSourceConfiguration*) serialize to a stream
class _tmd__SetVideoSourceConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse is a complexType.
/// class _tmd__SetVideoSourceConfigurationResponse operations:
/// - soap_new__tmd__SetVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__tmd__SetVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetVideoSourceConfigurationResponse(soap*, _tmd__SetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__SetVideoSourceConfigurationResponse(soap, _tmd__SetVideoSourceConfigurationResponse*) serialize to a stream
class _tmd__SetVideoSourceConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration is a complexType.
/// class _tmd__SetVideoOutputConfiguration operations:
/// - soap_new__tmd__SetVideoOutputConfiguration(soap*) allocate
/// - soap_new__tmd__SetVideoOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__SetVideoOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetVideoOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetVideoOutputConfiguration(soap*, _tmd__SetVideoOutputConfiguration*) deserialize from a stream
/// - int soap_write__tmd__SetVideoOutputConfiguration(soap, _tmd__SetVideoOutputConfiguration*) serialize to a stream
class _tmd__SetVideoOutputConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    tt__VideoOutputConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse is a complexType.
/// class _tmd__SetVideoOutputConfigurationResponse operations:
/// - soap_new__tmd__SetVideoOutputConfigurationResponse(soap*) allocate
/// - soap_new__tmd__SetVideoOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetVideoOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetVideoOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetVideoOutputConfigurationResponse(soap*, _tmd__SetVideoOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__SetVideoOutputConfigurationResponse(soap, _tmd__SetVideoOutputConfigurationResponse*) serialize to a stream
class _tmd__SetVideoOutputConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions is a complexType.
/// class _tmd__GetVideoSourceConfigurationOptions operations:
/// - soap_new__tmd__GetVideoSourceConfigurationOptions(soap*) allocate
/// - soap_new__tmd__GetVideoSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoSourceConfigurationOptions(soap*, _tmd__GetVideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__tmd__GetVideoSourceConfigurationOptions(soap, _tmd__GetVideoSourceConfigurationOptions*) serialize to a stream
class _tmd__GetVideoSourceConfigurationOptions
{ public:
/// @brief Token of the Video input whose options are requested..
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
/// class _tmd__GetVideoSourceConfigurationOptionsResponse operations:
/// - soap_new__tmd__GetVideoSourceConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetVideoSourceConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoSourceConfigurationOptionsResponse(soap*, _tmd__GetVideoSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetVideoSourceConfigurationOptionsResponse(soap, _tmd__GetVideoSourceConfigurationOptionsResponse*) serialize to a stream
class _tmd__GetVideoSourceConfigurationOptionsResponse
{ public:
/// Element VideoSourceConfigurationOptions of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    tt__VideoSourceConfigurationOptions*  VideoSourceConfigurationOptions 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions is a complexType.
/// class _tmd__GetVideoOutputConfigurationOptions operations:
/// - soap_new__tmd__GetVideoOutputConfigurationOptions(soap*) allocate
/// - soap_new__tmd__GetVideoOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoOutputConfigurationOptions(soap*, _tmd__GetVideoOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write__tmd__GetVideoOutputConfigurationOptions(soap, _tmd__GetVideoOutputConfigurationOptions*) serialize to a stream
class _tmd__GetVideoOutputConfigurationOptions
{ public:
/// @brief Token of the Video Output whose options are requested..
/// Element VideoOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse is a complexType.
/// class _tmd__GetVideoOutputConfigurationOptionsResponse operations:
/// - soap_new__tmd__GetVideoOutputConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetVideoOutputConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetVideoOutputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetVideoOutputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetVideoOutputConfigurationOptionsResponse(soap*, _tmd__GetVideoOutputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetVideoOutputConfigurationOptionsResponse(soap, _tmd__GetVideoOutputConfigurationOptionsResponse*) serialize to a stream
class _tmd__GetVideoOutputConfigurationOptionsResponse
{ public:
/// Element VideoOutputConfigurationOptions of type "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions.
    tt__VideoOutputConfigurationOptions*  VideoOutputConfigurationOptions 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions is a complexType.
/// class _tmd__GetAudioSourceConfigurationOptions operations:
/// - soap_new__tmd__GetAudioSourceConfigurationOptions(soap*) allocate
/// - soap_new__tmd__GetAudioSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioSourceConfigurationOptions(soap*, _tmd__GetAudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__tmd__GetAudioSourceConfigurationOptions(soap, _tmd__GetAudioSourceConfigurationOptions*) serialize to a stream
class _tmd__GetAudioSourceConfigurationOptions
{ public:
/// @brief Token of the physical Audio input whose options are requested..
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
/// class _tmd__GetAudioSourceConfigurationOptionsResponse operations:
/// - soap_new__tmd__GetAudioSourceConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetAudioSourceConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioSourceConfigurationOptionsResponse(soap*, _tmd__GetAudioSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetAudioSourceConfigurationOptionsResponse(soap, _tmd__GetAudioSourceConfigurationOptionsResponse*) serialize to a stream
class _tmd__GetAudioSourceConfigurationOptionsResponse
{ public:
/// @brief Returns the AudioSourceToken available.
/// Element AudioSourceOptions of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    tt__AudioSourceConfigurationOptions*  AudioSourceOptions             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions is a complexType.
/// class _tmd__GetAudioOutputConfigurationOptions operations:
/// - soap_new__tmd__GetAudioOutputConfigurationOptions(soap*) allocate
/// - soap_new__tmd__GetAudioOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioOutputConfigurationOptions(soap*, _tmd__GetAudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write__tmd__GetAudioOutputConfigurationOptions(soap, _tmd__GetAudioOutputConfigurationOptions*) serialize to a stream
class _tmd__GetAudioOutputConfigurationOptions
{ public:
/// @brief Token of the physical Audio Output whose options are requested..
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
/// class _tmd__GetAudioOutputConfigurationOptionsResponse operations:
/// - soap_new__tmd__GetAudioOutputConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetAudioOutputConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetAudioOutputConfigurationOptionsResponse(soap*, _tmd__GetAudioOutputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetAudioOutputConfigurationOptionsResponse(soap, _tmd__GetAudioOutputConfigurationOptionsResponse*) serialize to a stream
class _tmd__GetAudioOutputConfigurationOptionsResponse
{ public:
/// @brief Available settings and ranges for the requested Audio output.
/// Element AudioOutputOptions of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  AudioOutputOptions             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings is a complexType.
/// class _tmd__SetRelayOutputSettings operations:
/// - soap_new__tmd__SetRelayOutputSettings(soap*) allocate
/// - soap_new__tmd__SetRelayOutputSettings(soap*, int num) allocate array
/// - soap_new_req__tmd__SetRelayOutputSettings(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetRelayOutputSettings(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetRelayOutputSettings(soap*, _tmd__SetRelayOutputSettings*) deserialize from a stream
/// - int soap_write__tmd__SetRelayOutputSettings(soap, _tmd__SetRelayOutputSettings*) serialize to a stream
class _tmd__SetRelayOutputSettings
{ public:
/// Element RelayOutput of type "http://www.onvif.org/ver10/schema":RelayOutput.
    tt__RelayOutput*                     RelayOutput                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse is a complexType.
/// class _tmd__SetRelayOutputSettingsResponse operations:
/// - soap_new__tmd__SetRelayOutputSettingsResponse(soap*) allocate
/// - soap_new__tmd__SetRelayOutputSettingsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetRelayOutputSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetRelayOutputSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetRelayOutputSettingsResponse(soap*, _tmd__SetRelayOutputSettingsResponse*) deserialize from a stream
/// - int soap_write__tmd__SetRelayOutputSettingsResponse(soap, _tmd__SetRelayOutputSettingsResponse*) serialize to a stream
class _tmd__SetRelayOutputSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs
/// @brief Get the available digital inputs of a device.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs is a complexType.
/// class _tmd__GetDigitalInputs operations:
/// - soap_new__tmd__GetDigitalInputs(soap*) allocate
/// - soap_new__tmd__GetDigitalInputs(soap*, int num) allocate array
/// - soap_new_req__tmd__GetDigitalInputs(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetDigitalInputs(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetDigitalInputs(soap*, _tmd__GetDigitalInputs*) deserialize from a stream
/// - int soap_write__tmd__GetDigitalInputs(soap, _tmd__GetDigitalInputs*) serialize to a stream
class _tmd__GetDigitalInputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse
/// @brief Requested digital inputs.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse is a complexType.
/// class _tmd__GetDigitalInputsResponse operations:
/// - soap_new__tmd__GetDigitalInputsResponse(soap*) allocate
/// - soap_new__tmd__GetDigitalInputsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetDigitalInputsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetDigitalInputsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetDigitalInputsResponse(soap*, _tmd__GetDigitalInputsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetDigitalInputsResponse(soap, _tmd__GetDigitalInputsResponse*) serialize to a stream
class _tmd__GetDigitalInputsResponse
{ public:
/// Vector of tt__DigitalInput* with length 0..unbounded
    std::vector<tt__DigitalInput*      > DigitalInputs                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptions is a complexType.
/// class _tmd__GetDigitalInputConfigurationOptions operations:
/// - soap_new__tmd__GetDigitalInputConfigurationOptions(soap*) allocate
/// - soap_new__tmd__GetDigitalInputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetDigitalInputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetDigitalInputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetDigitalInputConfigurationOptions(soap*, _tmd__GetDigitalInputConfigurationOptions*) deserialize from a stream
/// - int soap_write__tmd__GetDigitalInputConfigurationOptions(soap, _tmd__GetDigitalInputConfigurationOptions*) serialize to a stream
class _tmd__GetDigitalInputConfigurationOptions
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Token                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptionsResponse is a complexType.
/// class _tmd__GetDigitalInputConfigurationOptionsResponse operations:
/// - soap_new__tmd__GetDigitalInputConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetDigitalInputConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetDigitalInputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetDigitalInputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetDigitalInputConfigurationOptionsResponse(soap*, _tmd__GetDigitalInputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetDigitalInputConfigurationOptionsResponse(soap, _tmd__GetDigitalInputConfigurationOptionsResponse*) serialize to a stream
class _tmd__GetDigitalInputConfigurationOptionsResponse
{ public:
/// Element DigitalInputOptions of type "http://www.onvif.org/ver10/deviceIO/wsdl":DigitalInputConfigurationOptions.
    tmd__DigitalInputConfigurationOptions*  DigitalInputOptions            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurations

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurations is a complexType.
/// class _tmd__SetDigitalInputConfigurations operations:
/// - soap_new__tmd__SetDigitalInputConfigurations(soap*) allocate
/// - soap_new__tmd__SetDigitalInputConfigurations(soap*, int num) allocate array
/// - soap_new_req__tmd__SetDigitalInputConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetDigitalInputConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetDigitalInputConfigurations(soap*, _tmd__SetDigitalInputConfigurations*) deserialize from a stream
/// - int soap_write__tmd__SetDigitalInputConfigurations(soap, _tmd__SetDigitalInputConfigurations*) serialize to a stream
class _tmd__SetDigitalInputConfigurations
{ public:
/// Vector of tt__DigitalInput* with length 1..unbounded
    std::vector<tt__DigitalInput*      > DigitalInputs                  1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurationsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurationsResponse is a complexType.
/// class _tmd__SetDigitalInputConfigurationsResponse operations:
/// - soap_new__tmd__SetDigitalInputConfigurationsResponse(soap*) allocate
/// - soap_new__tmd__SetDigitalInputConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetDigitalInputConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetDigitalInputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetDigitalInputConfigurationsResponse(soap*, _tmd__SetDigitalInputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tmd__SetDigitalInputConfigurationsResponse(soap, _tmd__SetDigitalInputConfigurationsResponse*) serialize to a stream
class _tmd__SetDigitalInputConfigurationsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts
/// @brief The physical serial port on the device that allows serial data to be read and written.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts is a complexType.
/// class _tmd__GetSerialPorts operations:
/// - soap_new__tmd__GetSerialPorts(soap*) allocate
/// - soap_new__tmd__GetSerialPorts(soap*, int num) allocate array
/// - soap_new_req__tmd__GetSerialPorts(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetSerialPorts(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetSerialPorts(soap*, _tmd__GetSerialPorts*) deserialize from a stream
/// - int soap_write__tmd__GetSerialPorts(soap, _tmd__GetSerialPorts*) serialize to a stream
class _tmd__GetSerialPorts
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse
/// @brief Requested serial ports.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse is a complexType.
/// class _tmd__GetSerialPortsResponse operations:
/// - soap_new__tmd__GetSerialPortsResponse(soap*) allocate
/// - soap_new__tmd__GetSerialPortsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetSerialPortsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetSerialPortsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetSerialPortsResponse(soap*, _tmd__GetSerialPortsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetSerialPortsResponse(soap, _tmd__GetSerialPortsResponse*) serialize to a stream
class _tmd__GetSerialPortsResponse
{ public:
/// Vector of tmd__SerialPort* with length 0..unbounded
    std::vector<tmd__SerialPort*       > SerialPort                     0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration
/// @brief Gets the configuration that relates to serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration is a complexType.
/// class _tmd__GetSerialPortConfiguration operations:
/// - soap_new__tmd__GetSerialPortConfiguration(soap*) allocate
/// - soap_new__tmd__GetSerialPortConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__GetSerialPortConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetSerialPortConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetSerialPortConfiguration(soap*, _tmd__GetSerialPortConfiguration*) deserialize from a stream
/// - int soap_write__tmd__GetSerialPortConfiguration(soap, _tmd__GetSerialPortConfiguration*) serialize to a stream
class _tmd__GetSerialPortConfiguration
{ public:
/// Element SerialPortToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse
/// @brief Requested serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse is a complexType.
/// class _tmd__GetSerialPortConfigurationResponse operations:
/// - soap_new__tmd__GetSerialPortConfigurationResponse(soap*) allocate
/// - soap_new__tmd__GetSerialPortConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetSerialPortConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetSerialPortConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetSerialPortConfigurationResponse(soap*, _tmd__GetSerialPortConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__GetSerialPortConfigurationResponse(soap, _tmd__GetSerialPortConfigurationResponse*) serialize to a stream
class _tmd__GetSerialPortConfigurationResponse
{ public:
/// Element SerialPortConfiguration of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    tmd__SerialPortConfiguration*        SerialPortConfiguration        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration
/// @brief Sets the configuration that relates to serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration is a complexType.
/// class _tmd__SetSerialPortConfiguration operations:
/// - soap_new__tmd__SetSerialPortConfiguration(soap*) allocate
/// - soap_new__tmd__SetSerialPortConfiguration(soap*, int num) allocate array
/// - soap_new_req__tmd__SetSerialPortConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetSerialPortConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetSerialPortConfiguration(soap*, _tmd__SetSerialPortConfiguration*) deserialize from a stream
/// - int soap_write__tmd__SetSerialPortConfiguration(soap, _tmd__SetSerialPortConfiguration*) serialize to a stream
class _tmd__SetSerialPortConfiguration
{ public:
/// Element SerialPortConfiguration of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    tmd__SerialPortConfiguration*        SerialPortConfiguration        1;	///< Required element.
/// Element ForcePersistance of type xs:boolean.
    bool                                 ForcePersistance               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse is a complexType.
/// class _tmd__SetSerialPortConfigurationResponse operations:
/// - soap_new__tmd__SetSerialPortConfigurationResponse(soap*) allocate
/// - soap_new__tmd__SetSerialPortConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SetSerialPortConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SetSerialPortConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SetSerialPortConfigurationResponse(soap*, _tmd__SetSerialPortConfigurationResponse*) deserialize from a stream
/// - int soap_write__tmd__SetSerialPortConfigurationResponse(soap, _tmd__SetSerialPortConfigurationResponse*) serialize to a stream
class _tmd__SetSerialPortConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions
/// @brief Gets the configuration options that relates to serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions is a complexType.
/// class _tmd__GetSerialPortConfigurationOptions operations:
/// - soap_new__tmd__GetSerialPortConfigurationOptions(soap*) allocate
/// - soap_new__tmd__GetSerialPortConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__tmd__GetSerialPortConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetSerialPortConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetSerialPortConfigurationOptions(soap*, _tmd__GetSerialPortConfigurationOptions*) deserialize from a stream
/// - int soap_write__tmd__GetSerialPortConfigurationOptions(soap, _tmd__GetSerialPortConfigurationOptions*) serialize to a stream
class _tmd__GetSerialPortConfigurationOptions
{ public:
/// Element SerialPortToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse
/// @brief Requested serial port configuration options.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse is a complexType.
/// class _tmd__GetSerialPortConfigurationOptionsResponse operations:
/// - soap_new__tmd__GetSerialPortConfigurationOptionsResponse(soap*) allocate
/// - soap_new__tmd__GetSerialPortConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__GetSerialPortConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__GetSerialPortConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__GetSerialPortConfigurationOptionsResponse(soap*, _tmd__GetSerialPortConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tmd__GetSerialPortConfigurationOptionsResponse(soap, _tmd__GetSerialPortConfigurationOptionsResponse*) serialize to a stream
class _tmd__GetSerialPortConfigurationOptionsResponse
{ public:
/// Element SerialPortOptions of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions.
    tmd__SerialPortConfigurationOptions*  SerialPortOptions              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand
/// @brief Transmitting arbitrary data to the connected serial device and then receiving its response data.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand is a complexType.
/// class _tmd__SendReceiveSerialCommand operations:
/// - soap_new__tmd__SendReceiveSerialCommand(soap*) allocate
/// - soap_new__tmd__SendReceiveSerialCommand(soap*, int num) allocate array
/// - soap_new_req__tmd__SendReceiveSerialCommand(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SendReceiveSerialCommand(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SendReceiveSerialCommand(soap*, _tmd__SendReceiveSerialCommand*) deserialize from a stream
/// - int soap_write__tmd__SendReceiveSerialCommand(soap, _tmd__SendReceiveSerialCommand*) serialize to a stream
class _tmd__SendReceiveSerialCommand
{ public:
/// @brief The physical serial port reference to be used when this request is invoked.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Token                          0;	///< Optional element.
/// @brief The serial port data.
/// Element SerialData of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    tmd__SerialData*                     SerialData                     0;	///< Optional element.
/// @brief Indicates that the command should be responded back within the specified period of time.
/// Element TimeOut of type xs:duration.
    xsd__duration*                       TimeOut                        0;	///< Optional element.
/// @brief This element may be put in the case that data length returned from the connected serial device is already determined as some fixed bytes length. It indicates the length of received data which can be regarded as available.
/// Element DataLength of type xs:integer.
    xsd__integer*                        DataLength                     0;	///< Optional element.
/// @brief This element may be put in the case that the delimiter codes returned from the connected serial device is already known. It indicates the termination data sequence of the responded data. In case the string has more than one character a device shall interpret the whole string as a single delimiter. Furthermore a device shall return the delimiter character(s) to the client.
/// Element Delimiter of type xs:string.
    std::string*                         Delimiter                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse
/// @brief Receiving the response data.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse is a complexType.
/// class _tmd__SendReceiveSerialCommandResponse operations:
/// - soap_new__tmd__SendReceiveSerialCommandResponse(soap*) allocate
/// - soap_new__tmd__SendReceiveSerialCommandResponse(soap*, int num) allocate array
/// - soap_new_req__tmd__SendReceiveSerialCommandResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tmd__SendReceiveSerialCommandResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tmd__SendReceiveSerialCommandResponse(soap*, _tmd__SendReceiveSerialCommandResponse*) deserialize from a stream
/// - int soap_write__tmd__SendReceiveSerialCommandResponse(soap, _tmd__SendReceiveSerialCommandResponse*) serialize to a stream
class _tmd__SendReceiveSerialCommandResponse
{ public:
/// Element SerialData of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    tmd__SerialData*                     SerialData                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
/// class tev__Capabilities operations:
/// - soap_new_tev__Capabilities(soap*) allocate
/// - soap_new_tev__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tev__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tev__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tev__Capabilities(soap*, tev__Capabilities*) deserialize from a stream
/// - int soap_write_tev__Capabilities(soap, tev__Capabilities*) serialize to a stream
class tev__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicates that the WS Subscription policy is supported.
/// Attribute WSSubscriptionPolicySupport of type xs:boolean.
   @bool*                                WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// @brief Indicates that the WS Pull Point is supported.
/// Attribute WSPullPointSupport of type xs:boolean.
   @bool*                                WSPullPointSupport             0;	///< Optional attribute.
/// @brief Indicates that the WS Pausable Subscription Manager Interface is supported.
/// Attribute WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
   @bool*                                WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// @brief Maximum number of supported notification producers as defined by WS-BaseNotification.
/// Attribute MaxNotificationProducers of type xs:int.
   @int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// @brief Maximum supported number of notification pull points.
/// Attribute MaxPullPoints of type xs:int.
   @int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// @brief Indication if the device supports persistent notification storage.
/// Attribute PersistentNotificationStorage of type xs:boolean.
   @bool*                                PersistentNotificationStorage  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
/// class _tev__GetServiceCapabilities operations:
/// - soap_new__tev__GetServiceCapabilities(soap*) allocate
/// - soap_new__tev__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tev__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetServiceCapabilities(soap*, _tev__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tev__GetServiceCapabilities(soap, _tev__GetServiceCapabilities*) serialize to a stream
class _tev__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _tev__GetServiceCapabilitiesResponse operations:
/// - soap_new__tev__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tev__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tev__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetServiceCapabilitiesResponse(soap*, _tev__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tev__GetServiceCapabilitiesResponse(soap, _tev__GetServiceCapabilitiesResponse*) serialize to a stream
class _tev__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the event service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    tev__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription

/// "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
/// class _tev__CreatePullPointSubscription operations:
/// - soap_new__tev__CreatePullPointSubscription(soap*) allocate
/// - soap_new__tev__CreatePullPointSubscription(soap*, int num) allocate array
/// - soap_new_req__tev__CreatePullPointSubscription(soap*, ...) allocate, set required members
/// - soap_new_set__tev__CreatePullPointSubscription(soap*, ...) allocate, set all public members
/// - int soap_read__tev__CreatePullPointSubscription(soap*, _tev__CreatePullPointSubscription*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscription(soap, _tev__CreatePullPointSubscription*) serialize to a stream
class _tev__CreatePullPointSubscription
{ public:
/// @brief Optional XPATH expression to select specific topics.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// @brief Initial termination time.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Nillable pointer.
/// @brief Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// class _tev__CreatePullPointSubscription_SubscriptionPolicy operations:
/// - soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*) allocate
/// - soap_new__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, int num) allocate array
/// - soap_new_req__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tev__CreatePullPointSubscription_SubscriptionPolicy(soap*, _tev__CreatePullPointSubscription_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscription_SubscriptionPolicy(soap, _tev__CreatePullPointSubscription_SubscriptionPolicy*) serialize to a stream
    class _tev__CreatePullPointSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse

/// "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
/// class _tev__CreatePullPointSubscriptionResponse operations:
/// - soap_new__tev__CreatePullPointSubscriptionResponse(soap*) allocate
/// - soap_new__tev__CreatePullPointSubscriptionResponse(soap*, int num) allocate array
/// - soap_new_req__tev__CreatePullPointSubscriptionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__CreatePullPointSubscriptionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__CreatePullPointSubscriptionResponse(soap*, _tev__CreatePullPointSubscriptionResponse*) deserialize from a stream
/// - int soap_write__tev__CreatePullPointSubscriptionResponse(soap, _tev__CreatePullPointSubscriptionResponse*) serialize to a stream
class _tev__CreatePullPointSubscriptionResponse
{ public:
/// @brief Endpoint reference of the subscription to be used for pulling the messages.
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// @brief Current time of the server for synchronization purposes.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t                               wsnt__CurrentTime              1;	///< Required element.
/// @brief Date time when the PullPoint will be shut down without further pull requests.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               wsnt__TerminationTime          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages

/// "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
/// class _tev__PullMessages operations:
/// - soap_new__tev__PullMessages(soap*) allocate
/// - soap_new__tev__PullMessages(soap*, int num) allocate array
/// - soap_new_req__tev__PullMessages(soap*, ...) allocate, set required members
/// - soap_new_set__tev__PullMessages(soap*, ...) allocate, set all public members
/// - int soap_read__tev__PullMessages(soap*, _tev__PullMessages*) deserialize from a stream
/// - int soap_write__tev__PullMessages(soap, _tev__PullMessages*) serialize to a stream
class _tev__PullMessages
{ public:
/// @brief Maximum time to block until this method returns.
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// @brief Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// Element MessageLimit of type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse

/// "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
/// class _tev__PullMessagesResponse operations:
/// - soap_new__tev__PullMessagesResponse(soap*) allocate
/// - soap_new__tev__PullMessagesResponse(soap*, int num) allocate array
/// - soap_new_req__tev__PullMessagesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__PullMessagesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__PullMessagesResponse(soap*, _tev__PullMessagesResponse*) deserialize from a stream
/// - int soap_write__tev__PullMessagesResponse(soap, _tev__PullMessagesResponse*) serialize to a stream
class _tev__PullMessagesResponse
{ public:
/// @brief The date and time when the messages have been delivered by the web server to the client.
/// Element CurrentTime of type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// @brief Date time when the PullPoint will be shut down without further pull requests.
/// Element TerminationTime of type xs:dateTime.
    time_t                               TerminationTime                1;	///< Required element.
/// @brief List of messages. This list shall be empty in case of a timeout.
/// Vector of wsnt__NotificationMessageHolderType* element refs with length 0..unbounded
    std::vector<wsnt__NotificationMessageHolderType*> wsnt__NotificationMessage      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse

/// "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
/// class _tev__PullMessagesFaultResponse operations:
/// - soap_new__tev__PullMessagesFaultResponse(soap*) allocate
/// - soap_new__tev__PullMessagesFaultResponse(soap*, int num) allocate array
/// - soap_new_req__tev__PullMessagesFaultResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__PullMessagesFaultResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__PullMessagesFaultResponse(soap*, _tev__PullMessagesFaultResponse*) deserialize from a stream
/// - int soap_write__tev__PullMessagesFaultResponse(soap, _tev__PullMessagesFaultResponse*) serialize to a stream
class _tev__PullMessagesFaultResponse
{ public:
/// @brief Maximum timeout supported by the device.
/// Element MaxTimeout of type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// @brief Maximum message limit supported by the device.
/// Element MaxMessageLimit of type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek

/// "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
/// class _tev__Seek operations:
/// - soap_new__tev__Seek(soap*) allocate
/// - soap_new__tev__Seek(soap*, int num) allocate array
/// - soap_new_req__tev__Seek(soap*, ...) allocate, set required members
/// - soap_new_set__tev__Seek(soap*, ...) allocate, set all public members
/// - int soap_read__tev__Seek(soap*, _tev__Seek*) deserialize from a stream
/// - int soap_write__tev__Seek(soap, _tev__Seek*) serialize to a stream
class _tev__Seek
{ public:
/// @brief The date and time to match against stored messages.
/// Element UtcTime of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// @brief Reverse the pull direction of PullMessages.
/// Element Reverse of type xs:boolean.
    bool*                                Reverse                        0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse

/// "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
/// class _tev__SeekResponse operations:
/// - soap_new__tev__SeekResponse(soap*) allocate
/// - soap_new__tev__SeekResponse(soap*, int num) allocate array
/// - soap_new_req__tev__SeekResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__SeekResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__SeekResponse(soap*, _tev__SeekResponse*) deserialize from a stream
/// - int soap_write__tev__SeekResponse(soap, _tev__SeekResponse*) serialize to a stream
class _tev__SeekResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint

/// "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
/// class _tev__SetSynchronizationPoint operations:
/// - soap_new__tev__SetSynchronizationPoint(soap*) allocate
/// - soap_new__tev__SetSynchronizationPoint(soap*, int num) allocate array
/// - soap_new_req__tev__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - soap_new_set__tev__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - int soap_read__tev__SetSynchronizationPoint(soap*, _tev__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__tev__SetSynchronizationPoint(soap, _tev__SetSynchronizationPoint*) serialize to a stream
class _tev__SetSynchronizationPoint
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse

/// "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
/// class _tev__SetSynchronizationPointResponse operations:
/// - soap_new__tev__SetSynchronizationPointResponse(soap*) allocate
/// - soap_new__tev__SetSynchronizationPointResponse(soap*, int num) allocate array
/// - soap_new_req__tev__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__SetSynchronizationPointResponse(soap*, _tev__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__tev__SetSynchronizationPointResponse(soap, _tev__SetSynchronizationPointResponse*) serialize to a stream
class _tev__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties

/// "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
/// class _tev__GetEventProperties operations:
/// - soap_new__tev__GetEventProperties(soap*) allocate
/// - soap_new__tev__GetEventProperties(soap*, int num) allocate array
/// - soap_new_req__tev__GetEventProperties(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetEventProperties(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetEventProperties(soap*, _tev__GetEventProperties*) deserialize from a stream
/// - int soap_write__tev__GetEventProperties(soap, _tev__GetEventProperties*) serialize to a stream
class _tev__GetEventProperties
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse

/// "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
/// class _tev__GetEventPropertiesResponse operations:
/// - soap_new__tev__GetEventPropertiesResponse(soap*) allocate
/// - soap_new__tev__GetEventPropertiesResponse(soap*, int num) allocate array
/// - soap_new_req__tev__GetEventPropertiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tev__GetEventPropertiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tev__GetEventPropertiesResponse(soap*, _tev__GetEventPropertiesResponse*) deserialize from a stream
/// - int soap_write__tev__GetEventPropertiesResponse(soap, _tev__GetEventPropertiesResponse*) serialize to a stream
class _tev__GetEventPropertiesResponse
{ public:
/// @brief List of topic namespaces supported.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > TopicNamespaceLocation         1;
/// @brief True when topicset is fixed for all times.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool                                 wsnt__FixedTopicSet            1;	///< Required element.
/// @brief Set of topics supported.
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                1;	///< Required element.
/// @brief Defines the XPath expression syntax supported for matching topic expressions. <br/> The following TopicExpressionDialects are mandatory for an ONVIF compliant device : <ul type="disc"> <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li> <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li> </ul>
/// Vector of xsd__anyURI element refs with length 1..unbounded
    std::vector<xsd__anyURI            > wsnt__TopicExpressionDialect   1;
/// @brief Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects should be returned if a device supports the message content filtering: <ul type="disc"> <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li> </ul> A device that does not support any MessageContentFilterDialect returns a single empty url.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > MessageContentFilterDialect    1;
/// @brief Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > ProducerPropertiesFilterDialect 0;
/// @brief The Message Content Description Language allows referencing of vendor-specific types. In order to ease the integration of such types into a client application, the GetEventPropertiesResponse shall list all URI locations to schema files whose types are used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > MessageContentSchemaLocation   1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/receiver/wsdl":Capabilities is a complexType.
/// class trv__Capabilities operations:
/// - soap_new_trv__Capabilities(soap*) allocate
/// - soap_new_trv__Capabilities(soap*, int num) allocate array
/// - soap_new_req_trv__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trv__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trv__Capabilities(soap*, trv__Capabilities*) deserialize from a stream
/// - int soap_write_trv__Capabilities(soap, trv__Capabilities*) serialize to a stream
class trv__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicates that the device can receive RTP multicast streams.
/// Attribute RTP_Multicast of type xs:boolean.
   @bool*                                RTP_USCOREMulticast            0;	///< Optional attribute.
/// @brief Indicates that the device can receive RTP/TCP streams
/// Attribute RTP_TCP of type xs:boolean.
   @bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// @brief Indicates that the device can receive RTP/RTSP/TCP streams.
/// Attribute RTP_RTSP_TCP of type xs:boolean.
   @bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// @brief The maximum number of receivers supported by the device.
/// Attribute SupportedReceivers of type xs:int.
   @int                                  SupportedReceivers             1;	///< Required attribute.
/// @brief The maximum allowed length for RTSP URIs (Minimum and default value is 128 octet).
/// Attribute MaximumRTSPURILength of type xs:int.
   @int*                                 MaximumRTSPURILength           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities is a complexType.
/// class _trv__GetServiceCapabilities operations:
/// - soap_new__trv__GetServiceCapabilities(soap*) allocate
/// - soap_new__trv__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__trv__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetServiceCapabilities(soap*, _trv__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__trv__GetServiceCapabilities(soap, _trv__GetServiceCapabilities*) serialize to a stream
class _trv__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _trv__GetServiceCapabilitiesResponse operations:
/// - soap_new__trv__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__trv__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__trv__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetServiceCapabilitiesResponse(soap*, _trv__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__trv__GetServiceCapabilitiesResponse(soap, _trv__GetServiceCapabilitiesResponse*) serialize to a stream
class _trv__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the receiver service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
    trv__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers

/// "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers is a complexType.
/// class _trv__GetReceivers operations:
/// - soap_new__trv__GetReceivers(soap*) allocate
/// - soap_new__trv__GetReceivers(soap*, int num) allocate array
/// - soap_new_req__trv__GetReceivers(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetReceivers(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetReceivers(soap*, _trv__GetReceivers*) deserialize from a stream
/// - int soap_write__trv__GetReceivers(soap, _trv__GetReceivers*) serialize to a stream
class _trv__GetReceivers
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse is a complexType.
/// class _trv__GetReceiversResponse operations:
/// - soap_new__trv__GetReceiversResponse(soap*) allocate
/// - soap_new__trv__GetReceiversResponse(soap*, int num) allocate array
/// - soap_new_req__trv__GetReceiversResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetReceiversResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetReceiversResponse(soap*, _trv__GetReceiversResponse*) deserialize from a stream
/// - int soap_write__trv__GetReceiversResponse(soap, _trv__GetReceiversResponse*) serialize to a stream
class _trv__GetReceiversResponse
{ public:
/// @brief A list of all receivers that currently exist on the device.
/// Vector of tt__Receiver* with length 0..unbounded
    std::vector<tt__Receiver*          > Receivers                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver

/// "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver is a complexType.
/// class _trv__GetReceiver operations:
/// - soap_new__trv__GetReceiver(soap*) allocate
/// - soap_new__trv__GetReceiver(soap*, int num) allocate array
/// - soap_new_req__trv__GetReceiver(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetReceiver(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetReceiver(soap*, _trv__GetReceiver*) deserialize from a stream
/// - int soap_write__trv__GetReceiver(soap, _trv__GetReceiver*) serialize to a stream
class _trv__GetReceiver
{ public:
/// @brief The token of the receiver to be retrieved.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse is a complexType.
/// class _trv__GetReceiverResponse operations:
/// - soap_new__trv__GetReceiverResponse(soap*) allocate
/// - soap_new__trv__GetReceiverResponse(soap*, int num) allocate array
/// - soap_new_req__trv__GetReceiverResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetReceiverResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetReceiverResponse(soap*, _trv__GetReceiverResponse*) deserialize from a stream
/// - int soap_write__trv__GetReceiverResponse(soap, _trv__GetReceiverResponse*) serialize to a stream
class _trv__GetReceiverResponse
{ public:
/// @brief The details of the receiver.
/// Element Receiver of type "http://www.onvif.org/ver10/schema":Receiver.
    tt__Receiver*                        Receiver                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver

/// "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver is a complexType.
/// class _trv__CreateReceiver operations:
/// - soap_new__trv__CreateReceiver(soap*) allocate
/// - soap_new__trv__CreateReceiver(soap*, int num) allocate array
/// - soap_new_req__trv__CreateReceiver(soap*, ...) allocate, set required members
/// - soap_new_set__trv__CreateReceiver(soap*, ...) allocate, set all public members
/// - int soap_read__trv__CreateReceiver(soap*, _trv__CreateReceiver*) deserialize from a stream
/// - int soap_write__trv__CreateReceiver(soap, _trv__CreateReceiver*) serialize to a stream
class _trv__CreateReceiver
{ public:
/// @brief The initial configuration for the new receiver.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse is a complexType.
/// class _trv__CreateReceiverResponse operations:
/// - soap_new__trv__CreateReceiverResponse(soap*) allocate
/// - soap_new__trv__CreateReceiverResponse(soap*, int num) allocate array
/// - soap_new_req__trv__CreateReceiverResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__CreateReceiverResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__CreateReceiverResponse(soap*, _trv__CreateReceiverResponse*) deserialize from a stream
/// - int soap_write__trv__CreateReceiverResponse(soap, _trv__CreateReceiverResponse*) serialize to a stream
class _trv__CreateReceiverResponse
{ public:
/// @brief The details of the receiver that was created.
/// Element Receiver of type "http://www.onvif.org/ver10/schema":Receiver.
    tt__Receiver*                        Receiver                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver

/// "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver is a complexType.
/// class _trv__DeleteReceiver operations:
/// - soap_new__trv__DeleteReceiver(soap*) allocate
/// - soap_new__trv__DeleteReceiver(soap*, int num) allocate array
/// - soap_new_req__trv__DeleteReceiver(soap*, ...) allocate, set required members
/// - soap_new_set__trv__DeleteReceiver(soap*, ...) allocate, set all public members
/// - int soap_read__trv__DeleteReceiver(soap*, _trv__DeleteReceiver*) deserialize from a stream
/// - int soap_write__trv__DeleteReceiver(soap, _trv__DeleteReceiver*) serialize to a stream
class _trv__DeleteReceiver
{ public:
/// @brief The token of the receiver to be deleted.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse is a complexType.
/// class _trv__DeleteReceiverResponse operations:
/// - soap_new__trv__DeleteReceiverResponse(soap*) allocate
/// - soap_new__trv__DeleteReceiverResponse(soap*, int num) allocate array
/// - soap_new_req__trv__DeleteReceiverResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__DeleteReceiverResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__DeleteReceiverResponse(soap*, _trv__DeleteReceiverResponse*) deserialize from a stream
/// - int soap_write__trv__DeleteReceiverResponse(soap, _trv__DeleteReceiverResponse*) serialize to a stream
class _trv__DeleteReceiverResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver

/// "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver is a complexType.
/// class _trv__ConfigureReceiver operations:
/// - soap_new__trv__ConfigureReceiver(soap*) allocate
/// - soap_new__trv__ConfigureReceiver(soap*, int num) allocate array
/// - soap_new_req__trv__ConfigureReceiver(soap*, ...) allocate, set required members
/// - soap_new_set__trv__ConfigureReceiver(soap*, ...) allocate, set all public members
/// - int soap_read__trv__ConfigureReceiver(soap*, _trv__ConfigureReceiver*) deserialize from a stream
/// - int soap_write__trv__ConfigureReceiver(soap, _trv__ConfigureReceiver*) serialize to a stream
class _trv__ConfigureReceiver
{ public:
/// @brief The token of the receiver to be configured.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// @brief The new configuration for the receiver.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse is a complexType.
/// class _trv__ConfigureReceiverResponse operations:
/// - soap_new__trv__ConfigureReceiverResponse(soap*) allocate
/// - soap_new__trv__ConfigureReceiverResponse(soap*, int num) allocate array
/// - soap_new_req__trv__ConfigureReceiverResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__ConfigureReceiverResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__ConfigureReceiverResponse(soap*, _trv__ConfigureReceiverResponse*) deserialize from a stream
/// - int soap_write__trv__ConfigureReceiverResponse(soap, _trv__ConfigureReceiverResponse*) serialize to a stream
class _trv__ConfigureReceiverResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode

/// "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode is a complexType.
/// class _trv__SetReceiverMode operations:
/// - soap_new__trv__SetReceiverMode(soap*) allocate
/// - soap_new__trv__SetReceiverMode(soap*, int num) allocate array
/// - soap_new_req__trv__SetReceiverMode(soap*, ...) allocate, set required members
/// - soap_new_set__trv__SetReceiverMode(soap*, ...) allocate, set all public members
/// - int soap_read__trv__SetReceiverMode(soap*, _trv__SetReceiverMode*) deserialize from a stream
/// - int soap_write__trv__SetReceiverMode(soap, _trv__SetReceiverMode*) serialize to a stream
class _trv__SetReceiverMode
{ public:
/// @brief The token of the receiver to be changed.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// @brief The new receiver mode. Options available are:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse is a complexType.
/// class _trv__SetReceiverModeResponse operations:
/// - soap_new__trv__SetReceiverModeResponse(soap*) allocate
/// - soap_new__trv__SetReceiverModeResponse(soap*, int num) allocate array
/// - soap_new_req__trv__SetReceiverModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__SetReceiverModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__SetReceiverModeResponse(soap*, _trv__SetReceiverModeResponse*) deserialize from a stream
/// - int soap_write__trv__SetReceiverModeResponse(soap, _trv__SetReceiverModeResponse*) serialize to a stream
class _trv__SetReceiverModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState

/// "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState is a complexType.
/// class _trv__GetReceiverState operations:
/// - soap_new__trv__GetReceiverState(soap*) allocate
/// - soap_new__trv__GetReceiverState(soap*, int num) allocate array
/// - soap_new_req__trv__GetReceiverState(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetReceiverState(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetReceiverState(soap*, _trv__GetReceiverState*) deserialize from a stream
/// - int soap_write__trv__GetReceiverState(soap, _trv__GetReceiverState*) serialize to a stream
class _trv__GetReceiverState
{ public:
/// @brief The token of the receiver to be queried.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse

/// "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse is a complexType.
/// class _trv__GetReceiverStateResponse operations:
/// - soap_new__trv__GetReceiverStateResponse(soap*) allocate
/// - soap_new__trv__GetReceiverStateResponse(soap*, int num) allocate array
/// - soap_new_req__trv__GetReceiverStateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trv__GetReceiverStateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trv__GetReceiverStateResponse(soap*, _trv__GetReceiverStateResponse*) deserialize from a stream
/// - int soap_write__trv__GetReceiverStateResponse(soap, _trv__GetReceiverStateResponse*) serialize to a stream
class _trv__GetReceiverStateResponse
{ public:
/// @brief Description of the current receiver state.
/// Element ReceiverState of type "http://www.onvif.org/ver10/schema":ReceiverStateInformation.
    tt__ReceiverStateInformation*        ReceiverState                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
/// class trt__Capabilities operations:
/// - soap_new_trt__Capabilities(soap*) allocate
/// - soap_new_trt__Capabilities(soap*, int num) allocate array
/// - soap_new_req_trt__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trt__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trt__Capabilities(soap*, trt__Capabilities*) deserialize from a stream
/// - int soap_write_trt__Capabilities(soap, trt__Capabilities*) serialize to a stream
class trt__Capabilities
{ public:
/// @brief Media profile capabilities.
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    trt__ProfileCapabilities*            ProfileCapabilities            1;	///< Required element.
/// @brief Streaming capabilities.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    trt__StreamingCapabilities*          StreamingCapabilities          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicates if GetSnapshotUri is supported.
/// Attribute SnapshotUri of type xs:boolean.
   @bool*                                SnapshotUri                    0;	///< Optional attribute.
/// @brief Indicates whether or not Rotation feature is supported.
/// Attribute Rotation of type xs:boolean.
   @bool*                                Rotation                       0;	///< Optional attribute.
/// @brief Indicates the support for changing video source mode.
/// Attribute VideoSourceMode of type xs:boolean.
   @bool*                                VideoSourceMode                0;	///< Optional attribute.
/// @brief Indicates if OSD is supported.
/// Attribute OSD of type xs:boolean.
   @bool*                                OSD                            0;	///< Optional attribute.
/// @brief Indicates the support for the Efficient XML Interchange (EXI) binary XML format.
/// Attribute EXICompression of type xs:boolean.
   @bool*                                EXICompression                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
/// class trt__ProfileCapabilities operations:
/// - soap_new_trt__ProfileCapabilities(soap*) allocate
/// - soap_new_trt__ProfileCapabilities(soap*, int num) allocate array
/// - soap_new_req_trt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_trt__ProfileCapabilities(soap, trt__ProfileCapabilities*) serialize to a stream
class trt__ProfileCapabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Maximum number of profiles supported.
/// Attribute MaximumNumberOfProfiles of type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
/// class trt__StreamingCapabilities operations:
/// - soap_new_trt__StreamingCapabilities(soap*) allocate
/// - soap_new_trt__StreamingCapabilities(soap*, int num) allocate array
/// - soap_new_req_trt__StreamingCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_trt__StreamingCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) deserialize from a stream
/// - int soap_write_trt__StreamingCapabilities(soap, trt__StreamingCapabilities*) serialize to a stream
class trt__StreamingCapabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicates support for RTP multicast.
/// Attribute RTPMulticast of type xs:boolean.
   @bool*                                RTPMulticast                   0;	///< Optional attribute.
/// @brief Indicates support for RTP over TCP.
/// Attribute RTP_TCP of type xs:boolean.
   @bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// @brief Indicates support for RTP/RTSP/TCP.
/// Attribute RTP_RTSP_TCP of type xs:boolean.
   @bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// @brief Indicates support for non aggregate RTSP control.
/// Attribute NonAggregateControl of type xs:boolean.
   @bool*                                NonAggregateControl            0;	///< Optional attribute.
/// @brief Indicates the device does not support live media streaming via RTSP.
/// Attribute NoRTSPStreaming of type xs:boolean.
   @bool*                                NoRTSPStreaming                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/media/wsdl":VideoSourceMode is a complexType.
/// class trt__VideoSourceMode operations:
/// - soap_new_trt__VideoSourceMode(soap*) allocate
/// - soap_new_trt__VideoSourceMode(soap*, int num) allocate array
/// - soap_new_req_trt__VideoSourceMode(soap*, ...) allocate, set required members
/// - soap_new_set_trt__VideoSourceMode(soap*, ...) allocate, set all public members
/// - int soap_read_trt__VideoSourceMode(soap*, trt__VideoSourceMode*) deserialize from a stream
/// - int soap_write_trt__VideoSourceMode(soap, trt__VideoSourceMode*) serialize to a stream
class trt__VideoSourceMode
{ public:
/// @brief Max frame rate in frames per second for this video source mode.
/// Element MaxFramerate of type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// @brief Max horizontal and vertical resolution for this video source mode.
/// Element MaxResolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 MaxResolution                  1;	///< Required element.
/// @brief Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// Element Encodings of type "http://www.onvif.org/ver10/media/wsdl":EncodingTypes.
    trt__EncodingTypes                   Encodings                      1;	///< Required element.
/// @brief After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// Element Reboot of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// @brief Informative description of this video source mode. This field should be described in English.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description*                     Description                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension.
    trt__VideoSourceModeExtension*       Extension                      0;	///< Optional element.
/// @brief Indicate token for video source mode.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// @brief Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// Attribute Enabled of type xs:boolean.
   @bool*                                Enabled                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension is a complexType.
/// class trt__VideoSourceModeExtension operations:
/// - soap_new_trt__VideoSourceModeExtension(soap*) allocate
/// - soap_new_trt__VideoSourceModeExtension(soap*, int num) allocate array
/// - soap_new_req_trt__VideoSourceModeExtension(soap*, ...) allocate, set required members
/// - soap_new_set_trt__VideoSourceModeExtension(soap*, ...) allocate, set all public members
/// - int soap_read_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension*) deserialize from a stream
/// - int soap_write_trt__VideoSourceModeExtension(soap, trt__VideoSourceModeExtension*) serialize to a stream
class trt__VideoSourceModeExtension
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
/// class _trt__GetServiceCapabilities operations:
/// - soap_new__trt__GetServiceCapabilities(soap*) allocate
/// - soap_new__trt__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__trt__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__trt__GetServiceCapabilities(soap, _trt__GetServiceCapabilities*) serialize to a stream
class _trt__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _trt__GetServiceCapabilitiesResponse operations:
/// - soap_new__trt__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__trt__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__trt__GetServiceCapabilitiesResponse(soap, _trt__GetServiceCapabilitiesResponse*) serialize to a stream
class _trt__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the media service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    trt__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
/// class _trt__GetVideoSources operations:
/// - soap_new__trt__GetVideoSources(soap*) allocate
/// - soap_new__trt__GetVideoSources(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSources(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSources(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSources(soap*, _trt__GetVideoSources*) deserialize from a stream
/// - int soap_write__trt__GetVideoSources(soap, _trt__GetVideoSources*) serialize to a stream
class _trt__GetVideoSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
/// class _trt__GetVideoSourcesResponse operations:
/// - soap_new__trt__GetVideoSourcesResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourcesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourcesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourcesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourcesResponse(soap, _trt__GetVideoSourcesResponse*) serialize to a stream
class _trt__GetVideoSourcesResponse
{ public:
/// @brief List of existing Video Sources
/// Vector of tt__VideoSource* with length 0..unbounded
    std::vector<tt__VideoSource*       > VideoSources                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
/// class _trt__GetAudioSources operations:
/// - soap_new__trt__GetAudioSources(soap*) allocate
/// - soap_new__trt__GetAudioSources(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSources(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSources(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSources(soap*, _trt__GetAudioSources*) deserialize from a stream
/// - int soap_write__trt__GetAudioSources(soap, _trt__GetAudioSources*) serialize to a stream
class _trt__GetAudioSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
/// class _trt__GetAudioSourcesResponse operations:
/// - soap_new__trt__GetAudioSourcesResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourcesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourcesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourcesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourcesResponse(soap, _trt__GetAudioSourcesResponse*) serialize to a stream
class _trt__GetAudioSourcesResponse
{ public:
/// @brief List of existing Audio Sources
/// Vector of tt__AudioSource* with length 0..unbounded
    std::vector<tt__AudioSource*       > AudioSources                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
/// class _trt__GetAudioOutputs operations:
/// - soap_new__trt__GetAudioOutputs(soap*) allocate
/// - soap_new__trt__GetAudioOutputs(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputs(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputs(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputs(soap, _trt__GetAudioOutputs*) serialize to a stream
class _trt__GetAudioOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
/// class _trt__GetAudioOutputsResponse operations:
/// - soap_new__trt__GetAudioOutputsResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputsResponse(soap, _trt__GetAudioOutputsResponse*) serialize to a stream
class _trt__GetAudioOutputsResponse
{ public:
/// @brief List of existing Audio Outputs
/// Vector of tt__AudioOutput* with length 0..unbounded
    std::vector<tt__AudioOutput*       > AudioOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile

/// "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
/// class _trt__CreateProfile operations:
/// - soap_new__trt__CreateProfile(soap*) allocate
/// - soap_new__trt__CreateProfile(soap*, int num) allocate array
/// - soap_new_req__trt__CreateProfile(soap*, ...) allocate, set required members
/// - soap_new_set__trt__CreateProfile(soap*, ...) allocate, set all public members
/// - int soap_read__trt__CreateProfile(soap*, _trt__CreateProfile*) deserialize from a stream
/// - int soap_write__trt__CreateProfile(soap, _trt__CreateProfile*) serialize to a stream
class _trt__CreateProfile
{ public:
/// @brief friendly name of the profile to be created
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Token                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
/// class _trt__CreateProfileResponse operations:
/// - soap_new__trt__CreateProfileResponse(soap*) allocate
/// - soap_new__trt__CreateProfileResponse(soap*, int num) allocate array
/// - soap_new_req__trt__CreateProfileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__CreateProfileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) deserialize from a stream
/// - int soap_write__trt__CreateProfileResponse(soap, _trt__CreateProfileResponse*) serialize to a stream
class _trt__CreateProfileResponse
{ public:
/// @brief returns the new created profile
/// Element Profile of type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile

/// "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
/// class _trt__GetProfile operations:
/// - soap_new__trt__GetProfile(soap*) allocate
/// - soap_new__trt__GetProfile(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfile(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfile(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfile(soap*, _trt__GetProfile*) deserialize from a stream
/// - int soap_write__trt__GetProfile(soap, _trt__GetProfile*) serialize to a stream
class _trt__GetProfile
{ public:
/// @brief this command requests a specific profile
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
/// class _trt__GetProfileResponse operations:
/// - soap_new__trt__GetProfileResponse(soap*) allocate
/// - soap_new__trt__GetProfileResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) deserialize from a stream
/// - int soap_write__trt__GetProfileResponse(soap, _trt__GetProfileResponse*) serialize to a stream
class _trt__GetProfileResponse
{ public:
/// @brief returns the requested media profile
/// Element Profile of type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles

/// "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
/// class _trt__GetProfiles operations:
/// - soap_new__trt__GetProfiles(soap*) allocate
/// - soap_new__trt__GetProfiles(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfiles(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfiles(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfiles(soap*, _trt__GetProfiles*) deserialize from a stream
/// - int soap_write__trt__GetProfiles(soap, _trt__GetProfiles*) serialize to a stream
class _trt__GetProfiles
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
/// class _trt__GetProfilesResponse operations:
/// - soap_new__trt__GetProfilesResponse(soap*) allocate
/// - soap_new__trt__GetProfilesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetProfilesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetProfilesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) deserialize from a stream
/// - int soap_write__trt__GetProfilesResponse(soap, _trt__GetProfilesResponse*) serialize to a stream
class _trt__GetProfilesResponse
{ public:
/// @brief lists all profiles that exist in the media service
/// Vector of tt__Profile* with length 0..unbounded
    std::vector<tt__Profile*           > Profiles                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
/// class _trt__AddVideoEncoderConfiguration operations:
/// - soap_new__trt__AddVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__AddVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoEncoderConfiguration(soap, _trt__AddVideoEncoderConfiguration*) serialize to a stream
class _trt__AddVideoEncoderConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the VideoEncoderConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
/// class _trt__AddVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__AddVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoEncoderConfigurationResponse(soap, _trt__AddVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__AddVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
/// class _trt__RemoveVideoEncoderConfiguration operations:
/// - soap_new__trt__RemoveVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__RemoveVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoEncoderConfiguration(soap, _trt__RemoveVideoEncoderConfiguration*) serialize to a stream
class _trt__RemoveVideoEncoderConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the VideoEncoderConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
/// class _trt__RemoveVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__RemoveVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoEncoderConfigurationResponse(soap, _trt__RemoveVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__RemoveVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
/// class _trt__AddVideoSourceConfiguration operations:
/// - soap_new__trt__AddVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__AddVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoSourceConfiguration(soap, _trt__AddVideoSourceConfiguration*) serialize to a stream
class _trt__AddVideoSourceConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the VideoSourceConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
/// class _trt__AddVideoSourceConfigurationResponse operations:
/// - soap_new__trt__AddVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoSourceConfigurationResponse(soap, _trt__AddVideoSourceConfigurationResponse*) serialize to a stream
class _trt__AddVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
/// class _trt__RemoveVideoSourceConfiguration operations:
/// - soap_new__trt__RemoveVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__RemoveVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoSourceConfiguration(soap, _trt__RemoveVideoSourceConfiguration*) serialize to a stream
class _trt__RemoveVideoSourceConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the VideoSourceConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
/// class _trt__RemoveVideoSourceConfigurationResponse operations:
/// - soap_new__trt__RemoveVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoSourceConfigurationResponse(soap, _trt__RemoveVideoSourceConfigurationResponse*) serialize to a stream
class _trt__RemoveVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
/// class _trt__AddAudioEncoderConfiguration operations:
/// - soap_new__trt__AddAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioEncoderConfiguration(soap, _trt__AddAudioEncoderConfiguration*) serialize to a stream
class _trt__AddAudioEncoderConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the AudioEncoderConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
/// class _trt__AddAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__AddAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioEncoderConfigurationResponse(soap, _trt__AddAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__AddAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
/// class _trt__RemoveAudioEncoderConfiguration operations:
/// - soap_new__trt__RemoveAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioEncoderConfiguration(soap, _trt__RemoveAudioEncoderConfiguration*) serialize to a stream
class _trt__RemoveAudioEncoderConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the AudioEncoderConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
/// class _trt__RemoveAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioEncoderConfigurationResponse(soap, _trt__RemoveAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
/// class _trt__AddAudioSourceConfiguration operations:
/// - soap_new__trt__AddAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioSourceConfiguration(soap, _trt__AddAudioSourceConfiguration*) serialize to a stream
class _trt__AddAudioSourceConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the AudioSourceConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
/// class _trt__AddAudioSourceConfigurationResponse operations:
/// - soap_new__trt__AddAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioSourceConfigurationResponse(soap, _trt__AddAudioSourceConfigurationResponse*) serialize to a stream
class _trt__AddAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
/// class _trt__RemoveAudioSourceConfiguration operations:
/// - soap_new__trt__RemoveAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioSourceConfiguration(soap, _trt__RemoveAudioSourceConfiguration*) serialize to a stream
class _trt__RemoveAudioSourceConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the AudioSourceConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
/// class _trt__RemoveAudioSourceConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioSourceConfigurationResponse(soap, _trt__RemoveAudioSourceConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
/// class _trt__AddPTZConfiguration operations:
/// - soap_new__trt__AddPTZConfiguration(soap*) allocate
/// - soap_new__trt__AddPTZConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddPTZConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddPTZConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddPTZConfiguration(soap, _trt__AddPTZConfiguration*) serialize to a stream
class _trt__AddPTZConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the PTZConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
/// class _trt__AddPTZConfigurationResponse operations:
/// - soap_new__trt__AddPTZConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddPTZConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddPTZConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddPTZConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddPTZConfigurationResponse(soap, _trt__AddPTZConfigurationResponse*) serialize to a stream
class _trt__AddPTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
/// class _trt__RemovePTZConfiguration operations:
/// - soap_new__trt__RemovePTZConfiguration(soap*) allocate
/// - soap_new__trt__RemovePTZConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemovePTZConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemovePTZConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemovePTZConfiguration(soap, _trt__RemovePTZConfiguration*) serialize to a stream
class _trt__RemovePTZConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the PTZConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
/// class _trt__RemovePTZConfigurationResponse operations:
/// - soap_new__trt__RemovePTZConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemovePTZConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemovePTZConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemovePTZConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemovePTZConfigurationResponse(soap, _trt__RemovePTZConfigurationResponse*) serialize to a stream
class _trt__RemovePTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
/// class _trt__AddVideoAnalyticsConfiguration operations:
/// - soap_new__trt__AddVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__AddVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoAnalyticsConfiguration(soap, _trt__AddVideoAnalyticsConfiguration*) serialize to a stream
class _trt__AddVideoAnalyticsConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the VideoAnalyticsConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
/// class _trt__AddVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__AddVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoAnalyticsConfigurationResponse(soap, _trt__AddVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__AddVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
/// class _trt__RemoveVideoAnalyticsConfiguration operations:
/// - soap_new__trt__RemoveVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__RemoveVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoAnalyticsConfiguration(soap, _trt__RemoveVideoAnalyticsConfiguration*) serialize to a stream
class _trt__RemoveVideoAnalyticsConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the VideoAnalyticsConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
/// class _trt__RemoveVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(soap, _trt__RemoveVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__RemoveVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
/// class _trt__AddMetadataConfiguration operations:
/// - soap_new__trt__AddMetadataConfiguration(soap*) allocate
/// - soap_new__trt__AddMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddMetadataConfiguration(soap, _trt__AddMetadataConfiguration*) serialize to a stream
class _trt__AddMetadataConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the MetadataConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
/// class _trt__AddMetadataConfigurationResponse operations:
/// - soap_new__trt__AddMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddMetadataConfigurationResponse(soap, _trt__AddMetadataConfigurationResponse*) serialize to a stream
class _trt__AddMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
/// class _trt__RemoveMetadataConfiguration operations:
/// - soap_new__trt__RemoveMetadataConfiguration(soap*) allocate
/// - soap_new__trt__RemoveMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveMetadataConfiguration(soap, _trt__RemoveMetadataConfiguration*) serialize to a stream
class _trt__RemoveMetadataConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the MetadataConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
/// class _trt__RemoveMetadataConfigurationResponse operations:
/// - soap_new__trt__RemoveMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveMetadataConfigurationResponse(soap, _trt__RemoveMetadataConfigurationResponse*) serialize to a stream
class _trt__RemoveMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
/// class _trt__AddAudioOutputConfiguration operations:
/// - soap_new__trt__AddAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioOutputConfiguration(soap, _trt__AddAudioOutputConfiguration*) serialize to a stream
class _trt__AddAudioOutputConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the AudioOutputConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
/// class _trt__AddAudioOutputConfigurationResponse operations:
/// - soap_new__trt__AddAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioOutputConfigurationResponse(soap, _trt__AddAudioOutputConfigurationResponse*) serialize to a stream
class _trt__AddAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
/// class _trt__RemoveAudioOutputConfiguration operations:
/// - soap_new__trt__RemoveAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioOutputConfiguration(soap, _trt__RemoveAudioOutputConfiguration*) serialize to a stream
class _trt__RemoveAudioOutputConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the AudioOutputConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
/// class _trt__RemoveAudioOutputConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioOutputConfigurationResponse(soap, _trt__RemoveAudioOutputConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
/// class _trt__AddAudioDecoderConfiguration operations:
/// - soap_new__trt__AddAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__AddAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioDecoderConfiguration(soap, _trt__AddAudioDecoderConfiguration*) serialize to a stream
class _trt__AddAudioDecoderConfiguration
{ public:
/// @brief This element contains a reference to the profile where the configuration should be added.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// @brief This element contains a reference to the AudioDecoderConfiguration to add.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
/// class _trt__AddAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__AddAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__AddAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__AddAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__AddAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioDecoderConfigurationResponse(soap, _trt__AddAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__AddAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
/// class _trt__RemoveAudioDecoderConfiguration operations:
/// - soap_new__trt__RemoveAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__RemoveAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioDecoderConfiguration(soap, _trt__RemoveAudioDecoderConfiguration*) serialize to a stream
class _trt__RemoveAudioDecoderConfiguration
{ public:
/// @brief This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
/// class _trt__RemoveAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__RemoveAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__RemoveAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__RemoveAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__RemoveAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioDecoderConfigurationResponse(soap, _trt__RemoveAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__RemoveAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile

/// "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
/// class _trt__DeleteProfile operations:
/// - soap_new__trt__DeleteProfile(soap*) allocate
/// - soap_new__trt__DeleteProfile(soap*, int num) allocate array
/// - soap_new_req__trt__DeleteProfile(soap*, ...) allocate, set required members
/// - soap_new_set__trt__DeleteProfile(soap*, ...) allocate, set all public members
/// - int soap_read__trt__DeleteProfile(soap*, _trt__DeleteProfile*) deserialize from a stream
/// - int soap_write__trt__DeleteProfile(soap, _trt__DeleteProfile*) serialize to a stream
class _trt__DeleteProfile
{ public:
/// @brief This element contains a reference to the profile that should be deleted.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
/// class _trt__DeleteProfileResponse operations:
/// - soap_new__trt__DeleteProfileResponse(soap*) allocate
/// - soap_new__trt__DeleteProfileResponse(soap*, int num) allocate array
/// - soap_new_req__trt__DeleteProfileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__DeleteProfileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) deserialize from a stream
/// - int soap_write__trt__DeleteProfileResponse(soap, _trt__DeleteProfileResponse*) serialize to a stream
class _trt__DeleteProfileResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
/// class _trt__GetVideoEncoderConfigurations operations:
/// - soap_new__trt__GetVideoEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurations(soap, _trt__GetVideoEncoderConfigurations*) serialize to a stream
class _trt__GetVideoEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
/// class _trt__GetVideoEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetVideoEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationsResponse(soap, _trt__GetVideoEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetVideoEncoderConfigurationsResponse
{ public:
/// @brief This element contains a list of video encoder configurations.
/// Vector of tt__VideoEncoderConfiguration* with length 0..unbounded
    std::vector<tt__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
/// class _trt__GetVideoSourceConfigurations operations:
/// - soap_new__trt__GetVideoSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurations(soap, _trt__GetVideoSourceConfigurations*) serialize to a stream
class _trt__GetVideoSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
/// class _trt__GetVideoSourceConfigurationsResponse operations:
/// - soap_new__trt__GetVideoSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationsResponse(soap, _trt__GetVideoSourceConfigurationsResponse*) serialize to a stream
class _trt__GetVideoSourceConfigurationsResponse
{ public:
/// @brief This element contains a list of video source configurations.
/// Vector of tt__VideoSourceConfiguration* with length 0..unbounded
    std::vector<tt__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
/// class _trt__GetAudioEncoderConfigurations operations:
/// - soap_new__trt__GetAudioEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurations(soap, _trt__GetAudioEncoderConfigurations*) serialize to a stream
class _trt__GetAudioEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
/// class _trt__GetAudioEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetAudioEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationsResponse(soap, _trt__GetAudioEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetAudioEncoderConfigurationsResponse
{ public:
/// @brief This element contains a list of audio encoder configurations.
/// Vector of tt__AudioEncoderConfiguration* with length 0..unbounded
    std::vector<tt__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
/// class _trt__GetAudioSourceConfigurations operations:
/// - soap_new__trt__GetAudioSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurations(soap, _trt__GetAudioSourceConfigurations*) serialize to a stream
class _trt__GetAudioSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
/// class _trt__GetAudioSourceConfigurationsResponse operations:
/// - soap_new__trt__GetAudioSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationsResponse(soap, _trt__GetAudioSourceConfigurationsResponse*) serialize to a stream
class _trt__GetAudioSourceConfigurationsResponse
{ public:
/// @brief This element contains a list of audio source configurations.
/// Vector of tt__AudioSourceConfiguration* with length 0..unbounded
    std::vector<tt__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
/// class _trt__GetVideoAnalyticsConfigurations operations:
/// - soap_new__trt__GetVideoAnalyticsConfigurations(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurations(soap, _trt__GetVideoAnalyticsConfigurations*) serialize to a stream
class _trt__GetVideoAnalyticsConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
/// class _trt__GetVideoAnalyticsConfigurationsResponse operations:
/// - soap_new__trt__GetVideoAnalyticsConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurationsResponse(soap, _trt__GetVideoAnalyticsConfigurationsResponse*) serialize to a stream
class _trt__GetVideoAnalyticsConfigurationsResponse
{ public:
/// @brief This element contains a list of VideoAnalytics configurations.
/// Vector of tt__VideoAnalyticsConfiguration* with length 0..unbounded
    std::vector<tt__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
/// class _trt__GetMetadataConfigurations operations:
/// - soap_new__trt__GetMetadataConfigurations(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurations(soap, _trt__GetMetadataConfigurations*) serialize to a stream
class _trt__GetMetadataConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
/// class _trt__GetMetadataConfigurationsResponse operations:
/// - soap_new__trt__GetMetadataConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationsResponse(soap, _trt__GetMetadataConfigurationsResponse*) serialize to a stream
class _trt__GetMetadataConfigurationsResponse
{ public:
/// @brief This element contains a list of metadata configurations
/// Vector of tt__MetadataConfiguration* with length 0..unbounded
    std::vector<tt__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
/// class _trt__GetAudioOutputConfigurations operations:
/// - soap_new__trt__GetAudioOutputConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurations(soap, _trt__GetAudioOutputConfigurations*) serialize to a stream
class _trt__GetAudioOutputConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
/// class _trt__GetAudioOutputConfigurationsResponse operations:
/// - soap_new__trt__GetAudioOutputConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationsResponse(soap, _trt__GetAudioOutputConfigurationsResponse*) serialize to a stream
class _trt__GetAudioOutputConfigurationsResponse
{ public:
/// @brief This element contains a list of audio output configurations
/// Vector of tt__AudioOutputConfiguration* with length 0..unbounded
    std::vector<tt__AudioOutputConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
/// class _trt__GetAudioDecoderConfigurations operations:
/// - soap_new__trt__GetAudioDecoderConfigurations(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurations(soap, _trt__GetAudioDecoderConfigurations*) serialize to a stream
class _trt__GetAudioDecoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
/// class _trt__GetAudioDecoderConfigurationsResponse operations:
/// - soap_new__trt__GetAudioDecoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationsResponse(soap, _trt__GetAudioDecoderConfigurationsResponse*) serialize to a stream
class _trt__GetAudioDecoderConfigurationsResponse
{ public:
/// @brief This element contains a list of audio decoder configurations
/// Vector of tt__AudioDecoderConfiguration* with length 0..unbounded
    std::vector<tt__AudioDecoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
/// class _trt__GetVideoSourceConfiguration operations:
/// - soap_new__trt__GetVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfiguration(soap, _trt__GetVideoSourceConfiguration*) serialize to a stream
class _trt__GetVideoSourceConfiguration
{ public:
/// @brief Token of the requested video source configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
/// class _trt__GetVideoSourceConfigurationResponse operations:
/// - soap_new__trt__GetVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationResponse(soap, _trt__GetVideoSourceConfigurationResponse*) serialize to a stream
class _trt__GetVideoSourceConfigurationResponse
{ public:
/// @brief The requested video source configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
/// class _trt__GetVideoEncoderConfiguration operations:
/// - soap_new__trt__GetVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfiguration(soap, _trt__GetVideoEncoderConfiguration*) serialize to a stream
class _trt__GetVideoEncoderConfiguration
{ public:
/// @brief Token of the requested video encoder configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
/// class _trt__GetVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__GetVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationResponse(soap, _trt__GetVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__GetVideoEncoderConfigurationResponse
{ public:
/// @brief The requested video encoder configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
/// class _trt__GetAudioSourceConfiguration operations:
/// - soap_new__trt__GetAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfiguration(soap, _trt__GetAudioSourceConfiguration*) serialize to a stream
class _trt__GetAudioSourceConfiguration
{ public:
/// @brief Token of the requested audio source configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
/// class _trt__GetAudioSourceConfigurationResponse operations:
/// - soap_new__trt__GetAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationResponse(soap, _trt__GetAudioSourceConfigurationResponse*) serialize to a stream
class _trt__GetAudioSourceConfigurationResponse
{ public:
/// @brief The requested audio source configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
/// class _trt__GetAudioEncoderConfiguration operations:
/// - soap_new__trt__GetAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfiguration(soap, _trt__GetAudioEncoderConfiguration*) serialize to a stream
class _trt__GetAudioEncoderConfiguration
{ public:
/// @brief Token of the requested audio encoder configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
/// class _trt__GetAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__GetAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationResponse(soap, _trt__GetAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__GetAudioEncoderConfigurationResponse
{ public:
/// @brief The requested audio encoder configuration
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
/// class _trt__GetVideoAnalyticsConfiguration operations:
/// - soap_new__trt__GetVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfiguration(soap, _trt__GetVideoAnalyticsConfiguration*) serialize to a stream
class _trt__GetVideoAnalyticsConfiguration
{ public:
/// @brief Token of the requested video analytics configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
/// class _trt__GetVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__GetVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurationResponse(soap, _trt__GetVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__GetVideoAnalyticsConfigurationResponse
{ public:
/// @brief The requested video analytics configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
/// class _trt__GetMetadataConfiguration operations:
/// - soap_new__trt__GetMetadataConfiguration(soap*) allocate
/// - soap_new__trt__GetMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfiguration(soap, _trt__GetMetadataConfiguration*) serialize to a stream
class _trt__GetMetadataConfiguration
{ public:
/// @brief Token of the requested metadata configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
/// class _trt__GetMetadataConfigurationResponse operations:
/// - soap_new__trt__GetMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationResponse(soap, _trt__GetMetadataConfigurationResponse*) serialize to a stream
class _trt__GetMetadataConfigurationResponse
{ public:
/// @brief The requested metadata configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
/// class _trt__GetAudioOutputConfiguration operations:
/// - soap_new__trt__GetAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfiguration(soap, _trt__GetAudioOutputConfiguration*) serialize to a stream
class _trt__GetAudioOutputConfiguration
{ public:
/// @brief Token of the requested audio output configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
/// class _trt__GetAudioOutputConfigurationResponse operations:
/// - soap_new__trt__GetAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationResponse(soap, _trt__GetAudioOutputConfigurationResponse*) serialize to a stream
class _trt__GetAudioOutputConfigurationResponse
{ public:
/// @brief The requested audio output configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
/// class _trt__GetAudioDecoderConfiguration operations:
/// - soap_new__trt__GetAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfiguration(soap, _trt__GetAudioDecoderConfiguration*) serialize to a stream
class _trt__GetAudioDecoderConfiguration
{ public:
/// @brief Token of the requested audio decoder configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
/// class _trt__GetAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__GetAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationResponse(soap, _trt__GetAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__GetAudioDecoderConfigurationResponse
{ public:
/// @brief The requested audio decoder configuration
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
/// class _trt__GetCompatibleVideoEncoderConfigurations operations:
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurations(soap, _trt__GetCompatibleVideoEncoderConfigurations*) serialize to a stream
class _trt__GetCompatibleVideoEncoderConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleVideoEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleVideoEncoderConfigurationsResponse
{ public:
/// @brief Contains a list of video encoder configurations that are compatible with the specified media profile.
/// Vector of tt__VideoEncoderConfiguration* with length 0..unbounded
    std::vector<tt__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
/// class _trt__GetCompatibleVideoSourceConfigurations operations:
/// - soap_new__trt__GetCompatibleVideoSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurations(soap, _trt__GetCompatibleVideoSourceConfigurations*) serialize to a stream
class _trt__GetCompatibleVideoSourceConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleVideoSourceConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(soap, _trt__GetCompatibleVideoSourceConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleVideoSourceConfigurationsResponse
{ public:
/// @brief Contains a list of video source configurations that are compatible with the specified media profile.
/// Vector of tt__VideoSourceConfiguration* with length 0..unbounded
    std::vector<tt__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
/// class _trt__GetCompatibleAudioEncoderConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioEncoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioEncoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurations(soap, _trt__GetCompatibleAudioEncoderConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioEncoderConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleAudioEncoderConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioEncoderConfigurationsResponse
{ public:
/// @brief Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// Vector of tt__AudioEncoderConfiguration* with length 0..unbounded
    std::vector<tt__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
/// class _trt__GetCompatibleAudioSourceConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioSourceConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioSourceConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioSourceConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioSourceConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurations(soap, _trt__GetCompatibleAudioSourceConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioSourceConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleAudioSourceConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(soap, _trt__GetCompatibleAudioSourceConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioSourceConfigurationsResponse
{ public:
/// @brief Contains a list of audio source configurations that are compatible with the specified media profile.
/// Vector of tt__AudioSourceConfiguration* with length 0..unbounded
    std::vector<tt__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
/// class _trt__GetCompatibleVideoAnalyticsConfigurations operations:
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(soap, _trt__GetCompatibleVideoAnalyticsConfigurations*) serialize to a stream
class _trt__GetCompatibleVideoAnalyticsConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{ public:
/// @brief Contains a list of video analytics configurations that are compatible with the specified media profile.
/// Vector of tt__VideoAnalyticsConfiguration* with length 0..unbounded
    std::vector<tt__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
/// class _trt__GetCompatibleMetadataConfigurations operations:
/// - soap_new__trt__GetCompatibleMetadataConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleMetadataConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleMetadataConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleMetadataConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleMetadataConfigurations(soap, _trt__GetCompatibleMetadataConfigurations*) serialize to a stream
class _trt__GetCompatibleMetadataConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleMetadataConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleMetadataConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleMetadataConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleMetadataConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleMetadataConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleMetadataConfigurationsResponse(soap, _trt__GetCompatibleMetadataConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleMetadataConfigurationsResponse
{ public:
/// @brief Contains a list of metadata configurations that are compatible with the specified media profile.
/// Vector of tt__MetadataConfiguration* with length 0..unbounded
    std::vector<tt__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
/// class _trt__GetCompatibleAudioOutputConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioOutputConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioOutputConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioOutputConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioOutputConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurations(soap, _trt__GetCompatibleAudioOutputConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioOutputConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleAudioOutputConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(soap, _trt__GetCompatibleAudioOutputConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioOutputConfigurationsResponse
{ public:
/// @brief Contains a list of audio output configurations that are compatible with the specified media profile.
/// Vector of tt__AudioOutputConfiguration* with length 0..unbounded
    std::vector<tt__AudioOutputConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
/// class _trt__GetCompatibleAudioDecoderConfigurations operations:
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurations(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurations(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioDecoderConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioDecoderConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurations(soap, _trt__GetCompatibleAudioDecoderConfigurations*) serialize to a stream
class _trt__GetCompatibleAudioDecoderConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
/// class _trt__GetCompatibleAudioDecoderConfigurationsResponse operations:
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*) allocate
/// - soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) serialize to a stream
class _trt__GetCompatibleAudioDecoderConfigurationsResponse
{ public:
/// @brief Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// Vector of tt__AudioDecoderConfiguration* with length 0..unbounded
    std::vector<tt__AudioDecoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
/// class _trt__SetVideoEncoderConfiguration operations:
/// - soap_new__trt__SetVideoEncoderConfiguration(soap*) allocate
/// - soap_new__trt__SetVideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoEncoderConfiguration(soap, _trt__SetVideoEncoderConfiguration*) serialize to a stream
class _trt__SetVideoEncoderConfiguration
{ public:
/// @brief Contains the modified video encoder configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
/// class _trt__SetVideoEncoderConfigurationResponse operations:
/// - soap_new__trt__SetVideoEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetVideoEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoEncoderConfigurationResponse(soap, _trt__SetVideoEncoderConfigurationResponse*) serialize to a stream
class _trt__SetVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
/// class _trt__SetVideoSourceConfiguration operations:
/// - soap_new__trt__SetVideoSourceConfiguration(soap*) allocate
/// - soap_new__trt__SetVideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceConfiguration(soap, _trt__SetVideoSourceConfiguration*) serialize to a stream
class _trt__SetVideoSourceConfiguration
{ public:
/// @brief Contains the modified video source configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
/// class _trt__SetVideoSourceConfigurationResponse operations:
/// - soap_new__trt__SetVideoSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetVideoSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceConfigurationResponse(soap, _trt__SetVideoSourceConfigurationResponse*) serialize to a stream
class _trt__SetVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
/// class _trt__SetAudioEncoderConfiguration operations:
/// - soap_new__trt__SetAudioEncoderConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioEncoderConfiguration(soap, _trt__SetAudioEncoderConfiguration*) serialize to a stream
class _trt__SetAudioEncoderConfiguration
{ public:
/// @brief Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
/// class _trt__SetAudioEncoderConfigurationResponse operations:
/// - soap_new__trt__SetAudioEncoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioEncoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioEncoderConfigurationResponse(soap, _trt__SetAudioEncoderConfigurationResponse*) serialize to a stream
class _trt__SetAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
/// class _trt__SetAudioSourceConfiguration operations:
/// - soap_new__trt__SetAudioSourceConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioSourceConfiguration(soap, _trt__SetAudioSourceConfiguration*) serialize to a stream
class _trt__SetAudioSourceConfiguration
{ public:
/// @brief Contains the modified audio source configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
/// class _trt__SetAudioSourceConfigurationResponse operations:
/// - soap_new__trt__SetAudioSourceConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioSourceConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioSourceConfigurationResponse(soap, _trt__SetAudioSourceConfigurationResponse*) serialize to a stream
class _trt__SetAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
/// class _trt__SetVideoAnalyticsConfiguration operations:
/// - soap_new__trt__SetVideoAnalyticsConfiguration(soap*) allocate
/// - soap_new__trt__SetVideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoAnalyticsConfiguration(soap, _trt__SetVideoAnalyticsConfiguration*) serialize to a stream
class _trt__SetVideoAnalyticsConfiguration
{ public:
/// @brief Contains the modified video analytics configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
/// class _trt__SetVideoAnalyticsConfigurationResponse operations:
/// - soap_new__trt__SetVideoAnalyticsConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetVideoAnalyticsConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoAnalyticsConfigurationResponse(soap, _trt__SetVideoAnalyticsConfigurationResponse*) serialize to a stream
class _trt__SetVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
/// class _trt__SetMetadataConfiguration operations:
/// - soap_new__trt__SetMetadataConfiguration(soap*) allocate
/// - soap_new__trt__SetMetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetMetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetMetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetMetadataConfiguration(soap, _trt__SetMetadataConfiguration*) serialize to a stream
class _trt__SetMetadataConfiguration
{ public:
/// @brief Contains the modified metadata configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
/// class _trt__SetMetadataConfigurationResponse operations:
/// - soap_new__trt__SetMetadataConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetMetadataConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetMetadataConfigurationResponse(soap, _trt__SetMetadataConfigurationResponse*) serialize to a stream
class _trt__SetMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
/// class _trt__SetAudioOutputConfiguration operations:
/// - soap_new__trt__SetAudioOutputConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioOutputConfiguration(soap, _trt__SetAudioOutputConfiguration*) serialize to a stream
class _trt__SetAudioOutputConfiguration
{ public:
/// @brief Contains the modified audio output configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
/// class _trt__SetAudioOutputConfigurationResponse operations:
/// - soap_new__trt__SetAudioOutputConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioOutputConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioOutputConfigurationResponse(soap, _trt__SetAudioOutputConfigurationResponse*) serialize to a stream
class _trt__SetAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
/// class _trt__SetAudioDecoderConfiguration operations:
/// - soap_new__trt__SetAudioDecoderConfiguration(soap*) allocate
/// - soap_new__trt__SetAudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioDecoderConfiguration(soap, _trt__SetAudioDecoderConfiguration*) serialize to a stream
class _trt__SetAudioDecoderConfiguration
{ public:
/// @brief Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element is obsolete and should always be assumed to be true.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
/// class _trt__SetAudioDecoderConfigurationResponse operations:
/// - soap_new__trt__SetAudioDecoderConfigurationResponse(soap*) allocate
/// - soap_new__trt__SetAudioDecoderConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioDecoderConfigurationResponse(soap, _trt__SetAudioDecoderConfigurationResponse*) serialize to a stream
class _trt__SetAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
/// class _trt__GetVideoSourceConfigurationOptions operations:
/// - soap_new__trt__GetVideoSourceConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationOptions(soap, _trt__GetVideoSourceConfigurationOptions*) serialize to a stream
class _trt__GetVideoSourceConfigurationOptions
{ public:
/// @brief Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
/// class _trt__GetVideoSourceConfigurationOptionsResponse operations:
/// - soap_new__trt__GetVideoSourceConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationOptionsResponse(soap, _trt__GetVideoSourceConfigurationOptionsResponse*) serialize to a stream
class _trt__GetVideoSourceConfigurationOptionsResponse
{ public:
/// @brief This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
/// class _trt__GetVideoEncoderConfigurationOptions operations:
/// - soap_new__trt__GetVideoEncoderConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationOptions(soap, _trt__GetVideoEncoderConfigurationOptions*) serialize to a stream
class _trt__GetVideoEncoderConfigurationOptions
{ public:
/// @brief Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
/// class _trt__GetVideoEncoderConfigurationOptionsResponse operations:
/// - soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(soap, _trt__GetVideoEncoderConfigurationOptionsResponse*) serialize to a stream
class _trt__GetVideoEncoderConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
/// class _trt__GetAudioSourceConfigurationOptions operations:
/// - soap_new__trt__GetAudioSourceConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationOptions(soap, _trt__GetAudioSourceConfigurationOptions*) serialize to a stream
class _trt__GetAudioSourceConfigurationOptions
{ public:
/// @brief Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
/// class _trt__GetAudioSourceConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioSourceConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioSourceConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationOptionsResponse(soap, _trt__GetAudioSourceConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioSourceConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
/// class _trt__GetAudioEncoderConfigurationOptions operations:
/// - soap_new__trt__GetAudioEncoderConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationOptions(soap, _trt__GetAudioEncoderConfigurationOptions*) serialize to a stream
class _trt__GetAudioEncoderConfigurationOptions
{ public:
/// @brief Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
/// class _trt__GetAudioEncoderConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(soap, _trt__GetAudioEncoderConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioEncoderConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
/// class _trt__GetMetadataConfigurationOptions operations:
/// - soap_new__trt__GetMetadataConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptions(soap, _trt__GetMetadataConfigurationOptions*) serialize to a stream
class _trt__GetMetadataConfigurationOptions
{ public:
/// @brief Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
/// class _trt__GetMetadataConfigurationOptionsResponse operations:
/// - soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptionsResponse(soap, _trt__GetMetadataConfigurationOptionsResponse*) serialize to a stream
class _trt__GetMetadataConfigurationOptionsResponse
{ public:
/// @brief This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    tt__MetadataConfigurationOptions*    Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
/// class _trt__GetAudioOutputConfigurationOptions operations:
/// - soap_new__trt__GetAudioOutputConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptions(soap, _trt__GetAudioOutputConfigurationOptions*) serialize to a stream
class _trt__GetAudioOutputConfigurationOptions
{ public:
/// @brief Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
/// class _trt__GetAudioOutputConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptionsResponse(soap, _trt__GetAudioOutputConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioOutputConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
/// class _trt__GetAudioDecoderConfigurationOptions operations:
/// - soap_new__trt__GetAudioDecoderConfigurationOptions(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptions(soap, _trt__GetAudioDecoderConfigurationOptions*) serialize to a stream
class _trt__GetAudioDecoderConfigurationOptions
{ public:
/// @brief Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
/// class _trt__GetAudioDecoderConfigurationOptionsResponse operations:
/// - soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*) allocate
/// - soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(soap, _trt__GetAudioDecoderConfigurationOptionsResponse*) serialize to a stream
class _trt__GetAudioDecoderConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances

/// "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
/// class _trt__GetGuaranteedNumberOfVideoEncoderInstances operations:
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*) allocate
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, int num) allocate array
/// - soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) serialize to a stream
class _trt__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// @brief Token of the video source configuration
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
/// class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse operations:
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*) allocate
/// - soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) serialize to a stream
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// @brief The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// Element TotalNumber of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// @brief If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// Element JPEG of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// @brief If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// Element H264 of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// @brief If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// Element MPEG4 of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri

/// "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
/// class _trt__GetStreamUri operations:
/// - soap_new__trt__GetStreamUri(soap*) allocate
/// - soap_new__trt__GetStreamUri(soap*, int num) allocate array
/// - soap_new_req__trt__GetStreamUri(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetStreamUri(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetStreamUri(soap*, _trt__GetStreamUri*) deserialize from a stream
/// - int soap_write__trt__GetStreamUri(soap, _trt__GetStreamUri*) serialize to a stream
class _trt__GetStreamUri
{ public:
/// @brief Stream Setup that should be used with the uri
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// @brief The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
/// class _trt__GetStreamUriResponse operations:
/// - soap_new__trt__GetStreamUriResponse(soap*) allocate
/// - soap_new__trt__GetStreamUriResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetStreamUriResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetStreamUriResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetStreamUriResponse(soap, _trt__GetStreamUriResponse*) serialize to a stream
class _trt__GetStreamUriResponse
{ public:
/// @brief
/// Element MediaUri of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming

/// "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
/// class _trt__StartMulticastStreaming operations:
/// - soap_new__trt__StartMulticastStreaming(soap*) allocate
/// - soap_new__trt__StartMulticastStreaming(soap*, int num) allocate array
/// - soap_new_req__trt__StartMulticastStreaming(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StartMulticastStreaming(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreaming(soap, _trt__StartMulticastStreaming*) serialize to a stream
class _trt__StartMulticastStreaming
{ public:
/// @brief Contains the token of the Profile that is used to define the multicast stream.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse

/// "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
/// class _trt__StartMulticastStreamingResponse operations:
/// - soap_new__trt__StartMulticastStreamingResponse(soap*) allocate
/// - soap_new__trt__StartMulticastStreamingResponse(soap*, int num) allocate array
/// - soap_new_req__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreamingResponse(soap, _trt__StartMulticastStreamingResponse*) serialize to a stream
class _trt__StartMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming

/// "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
/// class _trt__StopMulticastStreaming operations:
/// - soap_new__trt__StopMulticastStreaming(soap*) allocate
/// - soap_new__trt__StopMulticastStreaming(soap*, int num) allocate array
/// - soap_new_req__trt__StopMulticastStreaming(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StopMulticastStreaming(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreaming(soap, _trt__StopMulticastStreaming*) serialize to a stream
class _trt__StopMulticastStreaming
{ public:
/// @brief Contains the token of the Profile that is used to define the multicast stream.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse

/// "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
/// class _trt__StopMulticastStreamingResponse operations:
/// - soap_new__trt__StopMulticastStreamingResponse(soap*) allocate
/// - soap_new__trt__StopMulticastStreamingResponse(soap*, int num) allocate array
/// - soap_new_req__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreamingResponse(soap, _trt__StopMulticastStreamingResponse*) serialize to a stream
class _trt__StopMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint

/// "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
/// class _trt__SetSynchronizationPoint operations:
/// - soap_new__trt__SetSynchronizationPoint(soap*) allocate
/// - soap_new__trt__SetSynchronizationPoint(soap*, int num) allocate array
/// - soap_new_req__trt__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPoint(soap, _trt__SetSynchronizationPoint*) serialize to a stream
class _trt__SetSynchronizationPoint
{ public:
/// @brief Contains a Profile reference for which a Synchronization Point is requested.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
/// class _trt__SetSynchronizationPointResponse operations:
/// - soap_new__trt__SetSynchronizationPointResponse(soap*) allocate
/// - soap_new__trt__SetSynchronizationPointResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPointResponse(soap, _trt__SetSynchronizationPointResponse*) serialize to a stream
class _trt__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri

/// "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
/// class _trt__GetSnapshotUri operations:
/// - soap_new__trt__GetSnapshotUri(soap*) allocate
/// - soap_new__trt__GetSnapshotUri(soap*, int num) allocate array
/// - soap_new_req__trt__GetSnapshotUri(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetSnapshotUri(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUri(soap, _trt__GetSnapshotUri*) serialize to a stream
class _trt__GetSnapshotUri
{ public:
/// @brief The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
/// class _trt__GetSnapshotUriResponse operations:
/// - soap_new__trt__GetSnapshotUriResponse(soap*) allocate
/// - soap_new__trt__GetSnapshotUriResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetSnapshotUriResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetSnapshotUriResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUriResponse(soap, _trt__GetSnapshotUriResponse*) serialize to a stream
class _trt__GetSnapshotUriResponse
{ public:
/// @brief
/// Element MediaUri of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
/// class _trt__GetVideoSourceModes operations:
/// - soap_new__trt__GetVideoSourceModes(soap*) allocate
/// - soap_new__trt__GetVideoSourceModes(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceModes(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceModes(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceModes(soap, _trt__GetVideoSourceModes*) serialize to a stream
class _trt__GetVideoSourceModes
{ public:
/// @brief Contains a video source reference for which a video source mode is requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
/// class _trt__GetVideoSourceModesResponse operations:
/// - soap_new__trt__GetVideoSourceModesResponse(soap*) allocate
/// - soap_new__trt__GetVideoSourceModesResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetVideoSourceModesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetVideoSourceModesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceModesResponse(soap, _trt__GetVideoSourceModesResponse*) serialize to a stream
class _trt__GetVideoSourceModesResponse
{ public:
/// @brief Return the information for specified video source mode.
/// Vector of trt__VideoSourceMode* with length 1..unbounded
    std::vector<trt__VideoSourceMode*  > VideoSourceModes               1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
/// class _trt__SetVideoSourceMode operations:
/// - soap_new__trt__SetVideoSourceMode(soap*) allocate
/// - soap_new__trt__SetVideoSourceMode(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoSourceMode(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoSourceMode(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceMode(soap, _trt__SetVideoSourceMode*) serialize to a stream
class _trt__SetVideoSourceMode
{ public:
/// @brief Contains a video source reference for which a video source mode is requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// @brief Indicate video source mode.
/// Element VideoSourceModeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
/// class _trt__SetVideoSourceModeResponse operations:
/// - soap_new__trt__SetVideoSourceModeResponse(soap*) allocate
/// - soap_new__trt__SetVideoSourceModeResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetVideoSourceModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetVideoSourceModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceModeResponse(soap, _trt__SetVideoSourceModeResponse*) serialize to a stream
class _trt__SetVideoSourceModeResponse
{ public:
/// @brief The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// Element Reboot of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs

/// "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
/// class _trt__GetOSDs operations:
/// - soap_new__trt__GetOSDs(soap*) allocate
/// - soap_new__trt__GetOSDs(soap*, int num) allocate array
/// - soap_new_req__trt__GetOSDs(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetOSDs(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetOSDs(soap*, _trt__GetOSDs*) deserialize from a stream
/// - int soap_write__trt__GetOSDs(soap, _trt__GetOSDs*) serialize to a stream
class _trt__GetOSDs
{ public:
/// @brief Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
/// class _trt__GetOSDsResponse operations:
/// - soap_new__trt__GetOSDsResponse(soap*) allocate
/// - soap_new__trt__GetOSDsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetOSDsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetOSDsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDsResponse(soap, _trt__GetOSDsResponse*) serialize to a stream
class _trt__GetOSDsResponse
{ public:
/// @brief This element contains a list of requested OSDs.
/// Vector of tt__OSDConfiguration* with length 0..unbounded
    std::vector<tt__OSDConfiguration*  > OSDs                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD

/// "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
/// class _trt__GetOSD operations:
/// - soap_new__trt__GetOSD(soap*) allocate
/// - soap_new__trt__GetOSD(soap*, int num) allocate array
/// - soap_new_req__trt__GetOSD(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetOSD(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetOSD(soap*, _trt__GetOSD*) deserialize from a stream
/// - int soap_write__trt__GetOSD(soap, _trt__GetOSD*) serialize to a stream
class _trt__GetOSD
{ public:
/// @brief The GetOSD command fetches the OSD configuration if the OSD token is known.
/// Element OSDToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
/// class _trt__GetOSDResponse operations:
/// - soap_new__trt__GetOSDResponse(soap*) allocate
/// - soap_new__trt__GetOSDResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetOSDResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetOSDResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDResponse(soap, _trt__GetOSDResponse*) serialize to a stream
class _trt__GetOSDResponse
{ public:
/// @brief The requested OSD configuration.
/// Element OSD of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD

/// "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
/// class _trt__SetOSD operations:
/// - soap_new__trt__SetOSD(soap*) allocate
/// - soap_new__trt__SetOSD(soap*, int num) allocate array
/// - soap_new_req__trt__SetOSD(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetOSD(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetOSD(soap*, _trt__SetOSD*) deserialize from a stream
/// - int soap_write__trt__SetOSD(soap, _trt__SetOSD*) serialize to a stream
class _trt__SetOSD
{ public:
/// @brief Contains the modified OSD configuration.
/// Element OSD of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
/// class _trt__SetOSDResponse operations:
/// - soap_new__trt__SetOSDResponse(soap*) allocate
/// - soap_new__trt__SetOSDResponse(soap*, int num) allocate array
/// - soap_new_req__trt__SetOSDResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__SetOSDResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) deserialize from a stream
/// - int soap_write__trt__SetOSDResponse(soap, _trt__SetOSDResponse*) serialize to a stream
class _trt__SetOSDResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
/// class _trt__GetOSDOptions operations:
/// - soap_new__trt__GetOSDOptions(soap*) allocate
/// - soap_new__trt__GetOSDOptions(soap*, int num) allocate array
/// - soap_new_req__trt__GetOSDOptions(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetOSDOptions(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) deserialize from a stream
/// - int soap_write__trt__GetOSDOptions(soap, _trt__GetOSDOptions*) serialize to a stream
class _trt__GetOSDOptions
{ public:
/// @brief Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
/// class _trt__GetOSDOptionsResponse operations:
/// - soap_new__trt__GetOSDOptionsResponse(soap*) allocate
/// - soap_new__trt__GetOSDOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__trt__GetOSDOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__GetOSDOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDOptionsResponse(soap, _trt__GetOSDOptionsResponse*) serialize to a stream
class _trt__GetOSDOptionsResponse
{ public:
/// @brief
/// Element OSDOptions of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    tt__OSDConfigurationOptions*         OSDOptions                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD

/// "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
/// class _trt__CreateOSD operations:
/// - soap_new__trt__CreateOSD(soap*) allocate
/// - soap_new__trt__CreateOSD(soap*, int num) allocate array
/// - soap_new_req__trt__CreateOSD(soap*, ...) allocate, set required members
/// - soap_new_set__trt__CreateOSD(soap*, ...) allocate, set all public members
/// - int soap_read__trt__CreateOSD(soap*, _trt__CreateOSD*) deserialize from a stream
/// - int soap_write__trt__CreateOSD(soap, _trt__CreateOSD*) serialize to a stream
class _trt__CreateOSD
{ public:
/// @brief Contain the initial OSD configuration for create.
/// Element OSD of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse

/// "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
/// class _trt__CreateOSDResponse operations:
/// - soap_new__trt__CreateOSDResponse(soap*) allocate
/// - soap_new__trt__CreateOSDResponse(soap*, int num) allocate array
/// - soap_new_req__trt__CreateOSDResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__CreateOSDResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) deserialize from a stream
/// - int soap_write__trt__CreateOSDResponse(soap, _trt__CreateOSDResponse*) serialize to a stream
class _trt__CreateOSDResponse
{ public:
/// @brief Returns Token of the newly created OSD
/// Element OSDToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD

/// "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
/// class _trt__DeleteOSD operations:
/// - soap_new__trt__DeleteOSD(soap*) allocate
/// - soap_new__trt__DeleteOSD(soap*, int num) allocate array
/// - soap_new_req__trt__DeleteOSD(soap*, ...) allocate, set required members
/// - soap_new_set__trt__DeleteOSD(soap*, ...) allocate, set all public members
/// - int soap_read__trt__DeleteOSD(soap*, _trt__DeleteOSD*) deserialize from a stream
/// - int soap_write__trt__DeleteOSD(soap, _trt__DeleteOSD*) serialize to a stream
class _trt__DeleteOSD
{ public:
/// @brief This element contains a reference to the OSD configuration that should be deleted.
/// Element OSDToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse

/// "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
/// class _trt__DeleteOSDResponse operations:
/// - soap_new__trt__DeleteOSDResponse(soap*) allocate
/// - soap_new__trt__DeleteOSDResponse(soap*, int num) allocate array
/// - soap_new_req__trt__DeleteOSDResponse(soap*, ...) allocate, set required members
/// - soap_new_set__trt__DeleteOSDResponse(soap*, ...) allocate, set all public members
/// - int soap_read__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) deserialize from a stream
/// - int soap_write__trt__DeleteOSDResponse(soap, _trt__DeleteOSDResponse*) serialize to a stream
class _trt__DeleteOSDResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/search/wsdl":Capabilities is a complexType.
/// class tse__Capabilities operations:
/// - soap_new_tse__Capabilities(soap*) allocate
/// - soap_new_tse__Capabilities(soap*, int num) allocate array
/// - soap_new_req_tse__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tse__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tse__Capabilities(soap*, tse__Capabilities*) deserialize from a stream
/// - int soap_write_tse__Capabilities(soap, tse__Capabilities*) serialize to a stream
class tse__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute MetadataSearch of type xs:boolean.
   @bool*                                MetadataSearch                 0;	///< Optional attribute.
/// @brief Indicates support for general virtual property events in the FindEvents method.
/// Attribute GeneralStartEvents of type xs:boolean.
   @bool*                                GeneralStartEvents             0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilities is a complexType.
/// class _tse__GetServiceCapabilities operations:
/// - soap_new__tse__GetServiceCapabilities(soap*) allocate
/// - soap_new__tse__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tse__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetServiceCapabilities(soap*, _tse__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tse__GetServiceCapabilities(soap, _tse__GetServiceCapabilities*) serialize to a stream
class _tse__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _tse__GetServiceCapabilitiesResponse operations:
/// - soap_new__tse__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tse__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetServiceCapabilitiesResponse(soap*, _tse__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tse__GetServiceCapabilitiesResponse(soap, _tse__GetServiceCapabilitiesResponse*) serialize to a stream
class _tse__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the search service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/search/wsdl":Capabilities.
    tse__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummary

/// "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummary is a complexType.
/// class _tse__GetRecordingSummary operations:
/// - soap_new__tse__GetRecordingSummary(soap*) allocate
/// - soap_new__tse__GetRecordingSummary(soap*, int num) allocate array
/// - soap_new_req__tse__GetRecordingSummary(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetRecordingSummary(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetRecordingSummary(soap*, _tse__GetRecordingSummary*) deserialize from a stream
/// - int soap_write__tse__GetRecordingSummary(soap, _tse__GetRecordingSummary*) serialize to a stream
class _tse__GetRecordingSummary
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummaryResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummaryResponse is a complexType.
/// class _tse__GetRecordingSummaryResponse operations:
/// - soap_new__tse__GetRecordingSummaryResponse(soap*) allocate
/// - soap_new__tse__GetRecordingSummaryResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetRecordingSummaryResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetRecordingSummaryResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetRecordingSummaryResponse(soap*, _tse__GetRecordingSummaryResponse*) deserialize from a stream
/// - int soap_write__tse__GetRecordingSummaryResponse(soap, _tse__GetRecordingSummaryResponse*) serialize to a stream
class _tse__GetRecordingSummaryResponse
{ public:
/// Element Summary of type "http://www.onvif.org/ver10/schema":RecordingSummary.
    tt__RecordingSummary*                Summary                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformation

/// "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformation is a complexType.
/// class _tse__GetRecordingInformation operations:
/// - soap_new__tse__GetRecordingInformation(soap*) allocate
/// - soap_new__tse__GetRecordingInformation(soap*, int num) allocate array
/// - soap_new_req__tse__GetRecordingInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetRecordingInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetRecordingInformation(soap*, _tse__GetRecordingInformation*) deserialize from a stream
/// - int soap_write__tse__GetRecordingInformation(soap, _tse__GetRecordingInformation*) serialize to a stream
class _tse__GetRecordingInformation
{ public:
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformationResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformationResponse is a complexType.
/// class _tse__GetRecordingInformationResponse operations:
/// - soap_new__tse__GetRecordingInformationResponse(soap*) allocate
/// - soap_new__tse__GetRecordingInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetRecordingInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetRecordingInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetRecordingInformationResponse(soap*, _tse__GetRecordingInformationResponse*) deserialize from a stream
/// - int soap_write__tse__GetRecordingInformationResponse(soap, _tse__GetRecordingInformationResponse*) serialize to a stream
class _tse__GetRecordingInformationResponse
{ public:
/// Element RecordingInformation of type "http://www.onvif.org/ver10/schema":RecordingInformation.
    tt__RecordingInformation*            RecordingInformation           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributes

/// "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributes is a complexType.
/// class _tse__GetMediaAttributes operations:
/// - soap_new__tse__GetMediaAttributes(soap*) allocate
/// - soap_new__tse__GetMediaAttributes(soap*, int num) allocate array
/// - soap_new_req__tse__GetMediaAttributes(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetMediaAttributes(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetMediaAttributes(soap*, _tse__GetMediaAttributes*) deserialize from a stream
/// - int soap_write__tse__GetMediaAttributes(soap, _tse__GetMediaAttributes*) serialize to a stream
class _tse__GetMediaAttributes
{ public:
/// Vector of tt__RecordingReference with length 0..unbounded
    std::vector<tt__RecordingReference > RecordingTokens                0;
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributesResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributesResponse is a complexType.
/// class _tse__GetMediaAttributesResponse operations:
/// - soap_new__tse__GetMediaAttributesResponse(soap*) allocate
/// - soap_new__tse__GetMediaAttributesResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetMediaAttributesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetMediaAttributesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetMediaAttributesResponse(soap*, _tse__GetMediaAttributesResponse*) deserialize from a stream
/// - int soap_write__tse__GetMediaAttributesResponse(soap, _tse__GetMediaAttributesResponse*) serialize to a stream
class _tse__GetMediaAttributesResponse
{ public:
/// Vector of tt__MediaAttributes* with length 0..unbounded
    std::vector<tt__MediaAttributes*   > MediaAttributes                0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindRecordings

/// "http://www.onvif.org/ver10/search/wsdl":FindRecordings is a complexType.
/// class _tse__FindRecordings operations:
/// - soap_new__tse__FindRecordings(soap*) allocate
/// - soap_new__tse__FindRecordings(soap*, int num) allocate array
/// - soap_new_req__tse__FindRecordings(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindRecordings(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindRecordings(soap*, _tse__FindRecordings*) deserialize from a stream
/// - int soap_write__tse__FindRecordings(soap, _tse__FindRecordings*) serialize to a stream
class _tse__FindRecordings
{ public:
/// @brief Scope defines the dataset to consider for this search.
/// Element Scope of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// @brief The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// Element MaxMatches of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// @brief The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// Element KeepAliveTime of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindRecordingsResponse

/// "http://www.onvif.org/ver10/search/wsdl":FindRecordingsResponse is a complexType.
/// class _tse__FindRecordingsResponse operations:
/// - soap_new__tse__FindRecordingsResponse(soap*) allocate
/// - soap_new__tse__FindRecordingsResponse(soap*, int num) allocate array
/// - soap_new_req__tse__FindRecordingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindRecordingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindRecordingsResponse(soap*, _tse__FindRecordingsResponse*) deserialize from a stream
/// - int soap_write__tse__FindRecordingsResponse(soap, _tse__FindRecordingsResponse*) serialize to a stream
class _tse__FindRecordingsResponse
{ public:
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResults
/// @brief Gets results from a particular recording listingession.

/// "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResults is a complexType.
/// class _tse__GetRecordingSearchResults operations:
/// - soap_new__tse__GetRecordingSearchResults(soap*) allocate
/// - soap_new__tse__GetRecordingSearchResults(soap*, int num) allocate array
/// - soap_new_req__tse__GetRecordingSearchResults(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetRecordingSearchResults(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetRecordingSearchResults(soap*, _tse__GetRecordingSearchResults*) deserialize from a stream
/// - int soap_write__tse__GetRecordingSearchResults(soap, _tse__GetRecordingSearchResults*) serialize to a stream
class _tse__GetRecordingSearchResults
{ public:
/// @brief The search session to get results from.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// @brief The minimum number of results to return in one response.
/// Element MinResults of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// @brief The maximum number of results to return in one response.
/// Element MaxResults of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// @brief The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// Element WaitTime of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResultsResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResultsResponse is a complexType.
/// class _tse__GetRecordingSearchResultsResponse operations:
/// - soap_new__tse__GetRecordingSearchResultsResponse(soap*) allocate
/// - soap_new__tse__GetRecordingSearchResultsResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetRecordingSearchResultsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetRecordingSearchResultsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetRecordingSearchResultsResponse(soap*, _tse__GetRecordingSearchResultsResponse*) deserialize from a stream
/// - int soap_write__tse__GetRecordingSearchResultsResponse(soap, _tse__GetRecordingSearchResultsResponse*) serialize to a stream
class _tse__GetRecordingSearchResultsResponse
{ public:
/// Element ResultList of type "http://www.onvif.org/ver10/schema":FindRecordingResultList.
    tt__FindRecordingResultList*         ResultList                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindEvents
/// @brief Starts a search session and specifies the search parameters.

/// "http://www.onvif.org/ver10/search/wsdl":FindEvents is a complexType.
/// class _tse__FindEvents operations:
/// - soap_new__tse__FindEvents(soap*) allocate
/// - soap_new__tse__FindEvents(soap*, int num) allocate array
/// - soap_new_req__tse__FindEvents(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindEvents(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindEvents(soap*, _tse__FindEvents*) deserialize from a stream
/// - int soap_write__tse__FindEvents(soap, _tse__FindEvents*) serialize to a stream
class _tse__FindEvents
{ public:
/// @brief The point of time where the search will start.
/// Element StartPoint of type xs:dateTime.
    time_t                               StartPoint                     1;	///< Required element.
/// @brief The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// Element EndPoint of type xs:dateTime.
    time_t*                              EndPoint                       0;	///< Optional element.
/// Element Scope of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// Element SearchFilter of type "http://www.onvif.org/ver10/schema":EventFilter.
    tt__EventFilter*                     SearchFilter                   1;	///< Required element.
/// @brief Setting IncludeStartState to true means that the server should return virtual events representing the start state for any recording included in the scope. Start state events are limited to the topics defined in the SearchFilter that have the IsProperty flag set to true.
/// Element IncludeStartState of type xs:boolean.
    bool                                 IncludeStartState              1;	///< Required element.
/// @brief The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// Element MaxMatches of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// @brief The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// Element KeepAliveTime of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindEventsResponse

/// "http://www.onvif.org/ver10/search/wsdl":FindEventsResponse is a complexType.
/// class _tse__FindEventsResponse operations:
/// - soap_new__tse__FindEventsResponse(soap*) allocate
/// - soap_new__tse__FindEventsResponse(soap*, int num) allocate array
/// - soap_new_req__tse__FindEventsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindEventsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindEventsResponse(soap*, _tse__FindEventsResponse*) deserialize from a stream
/// - int soap_write__tse__FindEventsResponse(soap, _tse__FindEventsResponse*) serialize to a stream
class _tse__FindEventsResponse
{ public:
/// @brief A unique reference to the search session created by this request.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResults
/// @brief Gets results from a particular search session.

/// "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResults is a complexType.
/// class _tse__GetEventSearchResults operations:
/// - soap_new__tse__GetEventSearchResults(soap*) allocate
/// - soap_new__tse__GetEventSearchResults(soap*, int num) allocate array
/// - soap_new_req__tse__GetEventSearchResults(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetEventSearchResults(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetEventSearchResults(soap*, _tse__GetEventSearchResults*) deserialize from a stream
/// - int soap_write__tse__GetEventSearchResults(soap, _tse__GetEventSearchResults*) serialize to a stream
class _tse__GetEventSearchResults
{ public:
/// @brief The search session to get results from.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// @brief The minimum number of results to return in one response.
/// Element MinResults of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// @brief The maximum number of results to return in one response.
/// Element MaxResults of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// @brief The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// Element WaitTime of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResultsResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResultsResponse is a complexType.
/// class _tse__GetEventSearchResultsResponse operations:
/// - soap_new__tse__GetEventSearchResultsResponse(soap*) allocate
/// - soap_new__tse__GetEventSearchResultsResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetEventSearchResultsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetEventSearchResultsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetEventSearchResultsResponse(soap*, _tse__GetEventSearchResultsResponse*) deserialize from a stream
/// - int soap_write__tse__GetEventSearchResultsResponse(soap, _tse__GetEventSearchResultsResponse*) serialize to a stream
class _tse__GetEventSearchResultsResponse
{ public:
/// Element ResultList of type "http://www.onvif.org/ver10/schema":FindEventResultList.
    tt__FindEventResultList*             ResultList                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindPTZPosition
/// @brief Starts a search session and specifies the search parameters.

/// "http://www.onvif.org/ver10/search/wsdl":FindPTZPosition is a complexType.
/// class _tse__FindPTZPosition operations:
/// - soap_new__tse__FindPTZPosition(soap*) allocate
/// - soap_new__tse__FindPTZPosition(soap*, int num) allocate array
/// - soap_new_req__tse__FindPTZPosition(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindPTZPosition(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindPTZPosition(soap*, _tse__FindPTZPosition*) deserialize from a stream
/// - int soap_write__tse__FindPTZPosition(soap, _tse__FindPTZPosition*) serialize to a stream
class _tse__FindPTZPosition
{ public:
/// @brief The point of time where the search will start.
/// Element StartPoint of type xs:dateTime.
    time_t                               StartPoint                     1;	///< Required element.
/// @brief The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// Element EndPoint of type xs:dateTime.
    time_t*                              EndPoint                       0;	///< Optional element.
/// Element Scope of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// Element SearchFilter of type "http://www.onvif.org/ver10/schema":PTZPositionFilter.
    tt__PTZPositionFilter*               SearchFilter                   1;	///< Required element.
/// @brief The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// Element MaxMatches of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// @brief The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// Element KeepAliveTime of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindPTZPositionResponse

/// "http://www.onvif.org/ver10/search/wsdl":FindPTZPositionResponse is a complexType.
/// class _tse__FindPTZPositionResponse operations:
/// - soap_new__tse__FindPTZPositionResponse(soap*) allocate
/// - soap_new__tse__FindPTZPositionResponse(soap*, int num) allocate array
/// - soap_new_req__tse__FindPTZPositionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindPTZPositionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindPTZPositionResponse(soap*, _tse__FindPTZPositionResponse*) deserialize from a stream
/// - int soap_write__tse__FindPTZPositionResponse(soap, _tse__FindPTZPositionResponse*) serialize to a stream
class _tse__FindPTZPositionResponse
{ public:
/// @brief A unique reference to the search session created by this request.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResults
/// @brief Gets results from a particular search session.

/// "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResults is a complexType.
/// class _tse__GetPTZPositionSearchResults operations:
/// - soap_new__tse__GetPTZPositionSearchResults(soap*) allocate
/// - soap_new__tse__GetPTZPositionSearchResults(soap*, int num) allocate array
/// - soap_new_req__tse__GetPTZPositionSearchResults(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetPTZPositionSearchResults(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetPTZPositionSearchResults(soap*, _tse__GetPTZPositionSearchResults*) deserialize from a stream
/// - int soap_write__tse__GetPTZPositionSearchResults(soap, _tse__GetPTZPositionSearchResults*) serialize to a stream
class _tse__GetPTZPositionSearchResults
{ public:
/// @brief The search session to get results from.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// @brief The minimum number of results to return in one response.
/// Element MinResults of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// @brief The maximum number of results to return in one response.
/// Element MaxResults of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// @brief The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// Element WaitTime of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResultsResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResultsResponse is a complexType.
/// class _tse__GetPTZPositionSearchResultsResponse operations:
/// - soap_new__tse__GetPTZPositionSearchResultsResponse(soap*) allocate
/// - soap_new__tse__GetPTZPositionSearchResultsResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetPTZPositionSearchResultsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetPTZPositionSearchResultsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetPTZPositionSearchResultsResponse(soap*, _tse__GetPTZPositionSearchResultsResponse*) deserialize from a stream
/// - int soap_write__tse__GetPTZPositionSearchResultsResponse(soap, _tse__GetPTZPositionSearchResultsResponse*) serialize to a stream
class _tse__GetPTZPositionSearchResultsResponse
{ public:
/// Element ResultList of type "http://www.onvif.org/ver10/schema":FindPTZPositionResultList.
    tt__FindPTZPositionResultList*       ResultList                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindMetadata
/// @brief Starts a search session and specifies the search parameters.

/// "http://www.onvif.org/ver10/search/wsdl":FindMetadata is a complexType.
/// class _tse__FindMetadata operations:
/// - soap_new__tse__FindMetadata(soap*) allocate
/// - soap_new__tse__FindMetadata(soap*, int num) allocate array
/// - soap_new_req__tse__FindMetadata(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindMetadata(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindMetadata(soap*, _tse__FindMetadata*) deserialize from a stream
/// - int soap_write__tse__FindMetadata(soap, _tse__FindMetadata*) serialize to a stream
class _tse__FindMetadata
{ public:
/// @brief The point of time where the search will start.
/// Element StartPoint of type xs:dateTime.
    time_t                               StartPoint                     1;	///< Required element.
/// @brief The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// Element EndPoint of type xs:dateTime.
    time_t*                              EndPoint                       0;	///< Optional element.
/// Element Scope of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// Element MetadataFilter of type "http://www.onvif.org/ver10/schema":MetadataFilter.
    tt__MetadataFilter*                  MetadataFilter                 1;	///< Required element.
/// @brief The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// Element MaxMatches of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// @brief The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// Element KeepAliveTime of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindMetadataResponse

/// "http://www.onvif.org/ver10/search/wsdl":FindMetadataResponse is a complexType.
/// class _tse__FindMetadataResponse operations:
/// - soap_new__tse__FindMetadataResponse(soap*) allocate
/// - soap_new__tse__FindMetadataResponse(soap*, int num) allocate array
/// - soap_new_req__tse__FindMetadataResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__FindMetadataResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__FindMetadataResponse(soap*, _tse__FindMetadataResponse*) deserialize from a stream
/// - int soap_write__tse__FindMetadataResponse(soap, _tse__FindMetadataResponse*) serialize to a stream
class _tse__FindMetadataResponse
{ public:
/// @brief A unique reference to the search session created by this request.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResults
/// @brief Gets results from a particular search session.

/// "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResults is a complexType.
/// class _tse__GetMetadataSearchResults operations:
/// - soap_new__tse__GetMetadataSearchResults(soap*) allocate
/// - soap_new__tse__GetMetadataSearchResults(soap*, int num) allocate array
/// - soap_new_req__tse__GetMetadataSearchResults(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetMetadataSearchResults(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetMetadataSearchResults(soap*, _tse__GetMetadataSearchResults*) deserialize from a stream
/// - int soap_write__tse__GetMetadataSearchResults(soap, _tse__GetMetadataSearchResults*) serialize to a stream
class _tse__GetMetadataSearchResults
{ public:
/// @brief The search session to get results from.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// @brief The minimum number of results to return in one response.
/// Element MinResults of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// @brief The maximum number of results to return in one response.
/// Element MaxResults of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// @brief The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// Element WaitTime of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResultsResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResultsResponse is a complexType.
/// class _tse__GetMetadataSearchResultsResponse operations:
/// - soap_new__tse__GetMetadataSearchResultsResponse(soap*) allocate
/// - soap_new__tse__GetMetadataSearchResultsResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetMetadataSearchResultsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetMetadataSearchResultsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetMetadataSearchResultsResponse(soap*, _tse__GetMetadataSearchResultsResponse*) deserialize from a stream
/// - int soap_write__tse__GetMetadataSearchResultsResponse(soap, _tse__GetMetadataSearchResultsResponse*) serialize to a stream
class _tse__GetMetadataSearchResultsResponse
{ public:
/// Element ResultList of type "http://www.onvif.org/ver10/schema":FindMetadataResultList.
    tt__FindMetadataResultList*          ResultList                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetSearchState
/// @brief Returns the state of an ongoing search session.

/// "http://www.onvif.org/ver10/search/wsdl":GetSearchState is a complexType.
/// class _tse__GetSearchState operations:
/// - soap_new__tse__GetSearchState(soap*) allocate
/// - soap_new__tse__GetSearchState(soap*, int num) allocate array
/// - soap_new_req__tse__GetSearchState(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetSearchState(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetSearchState(soap*, _tse__GetSearchState*) deserialize from a stream
/// - int soap_write__tse__GetSearchState(soap, _tse__GetSearchState*) serialize to a stream
class _tse__GetSearchState
{ public:
/// @brief The search session to get the state from.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetSearchStateResponse

/// "http://www.onvif.org/ver10/search/wsdl":GetSearchStateResponse is a complexType.
/// class _tse__GetSearchStateResponse operations:
/// - soap_new__tse__GetSearchStateResponse(soap*) allocate
/// - soap_new__tse__GetSearchStateResponse(soap*, int num) allocate array
/// - soap_new_req__tse__GetSearchStateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__GetSearchStateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__GetSearchStateResponse(soap*, _tse__GetSearchStateResponse*) deserialize from a stream
/// - int soap_write__tse__GetSearchStateResponse(soap, _tse__GetSearchStateResponse*) serialize to a stream
class _tse__GetSearchStateResponse
{ public:
/// Element State of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 State                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":EndSearch
/// @brief Ends an ongoing search session, freeing any resources.

/// "http://www.onvif.org/ver10/search/wsdl":EndSearch is a complexType.
/// class _tse__EndSearch operations:
/// - soap_new__tse__EndSearch(soap*) allocate
/// - soap_new__tse__EndSearch(soap*, int num) allocate array
/// - soap_new_req__tse__EndSearch(soap*, ...) allocate, set required members
/// - soap_new_set__tse__EndSearch(soap*, ...) allocate, set all public members
/// - int soap_read__tse__EndSearch(soap*, _tse__EndSearch*) deserialize from a stream
/// - int soap_write__tse__EndSearch(soap, _tse__EndSearch*) serialize to a stream
class _tse__EndSearch
{ public:
/// @brief The search session to end.
/// Element SearchToken of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":EndSearchResponse

/// "http://www.onvif.org/ver10/search/wsdl":EndSearchResponse is a complexType.
/// class _tse__EndSearchResponse operations:
/// - soap_new__tse__EndSearchResponse(soap*) allocate
/// - soap_new__tse__EndSearchResponse(soap*, int num) allocate array
/// - soap_new_req__tse__EndSearchResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tse__EndSearchResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tse__EndSearchResponse(soap*, _tse__EndSearchResponse*) deserialize from a stream
/// - int soap_write__tse__EndSearchResponse(soap, _tse__EndSearchResponse*) serialize to a stream
class _tse__EndSearchResponse
{ public:
/// @brief The point of time the search had reached when it was ended. It is equal to the EndPoint specified in Find-operation if the search was completed.
/// Element Endpoint of type xs:dateTime.
    time_t                               Endpoint                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
/// class tds__Service operations:
/// - soap_new_tds__Service(soap*) allocate
/// - soap_new_tds__Service(soap*, int num) allocate array
/// - soap_new_req_tds__Service(soap*, ...) allocate, set required members
/// - soap_new_set_tds__Service(soap*, ...) allocate, set all public members
/// - int soap_read_tds__Service(soap*, tds__Service*) deserialize from a stream
/// - int soap_write_tds__Service(soap, tds__Service*) serialize to a stream
class tds__Service
{ public:
/// @brief Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// Element Namespace of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// @brief The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// class _tds__Service_Capabilities operations:
/// - soap_new__tds__Service_Capabilities(soap*) allocate
/// - soap_new__tds__Service_Capabilities(soap*, int num) allocate array
/// - soap_new_req__tds__Service_Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__Service_Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__Service_Capabilities(soap*, _tds__Service_Capabilities*) deserialize from a stream
/// - int soap_write__tds__Service_Capabilities(soap, _tds__Service_Capabilities*) serialize to a stream
    class _tds__Service_Capabilities
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *Capabilities                   0;	///< Optional element.
/// @brief The version of the service (not the ONVIF core spec version).
/// Element Version of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    tt__OnvifVersion*                    Version                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
/// class tds__DeviceServiceCapabilities operations:
/// - soap_new_tds__DeviceServiceCapabilities(soap*) allocate
/// - soap_new_tds__DeviceServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__DeviceServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__DeviceServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__DeviceServiceCapabilities(soap*, tds__DeviceServiceCapabilities*) deserialize from a stream
/// - int soap_write_tds__DeviceServiceCapabilities(soap, tds__DeviceServiceCapabilities*) serialize to a stream
class tds__DeviceServiceCapabilities
{ public:
/// @brief Network capabilities.
/// Element Network of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    tds__NetworkCapabilities*            Network                        1;	///< Required element.
/// @brief Security capabilities.
/// Element Security of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    tds__SecurityCapabilities*           Security                       1;	///< Required element.
/// @brief System capabilities.
/// Element System of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    tds__SystemCapabilities*             System                         1;	///< Required element.
/// @brief Capabilities that do not fit in any of the other categories.
/// Element Misc of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    tds__MiscCapabilities*               Misc                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
/// class tds__NetworkCapabilities operations:
/// - soap_new_tds__NetworkCapabilities(soap*) allocate
/// - soap_new_tds__NetworkCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__NetworkCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__NetworkCapabilities(soap*, tds__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tds__NetworkCapabilities(soap, tds__NetworkCapabilities*) serialize to a stream
class tds__NetworkCapabilities
{ public:
/// @brief Indicates support for IP filtering.
/// Attribute IPFilter of type xs:boolean.
   @bool*                                IPFilter                       0;	///< Optional attribute.
/// @brief Indicates support for zeroconf.
/// Attribute ZeroConfiguration of type xs:boolean.
   @bool*                                ZeroConfiguration              0;	///< Optional attribute.
/// @brief Indicates support for IPv6.
/// Attribute IPVersion6 of type xs:boolean.
   @bool*                                IPVersion6                     0;	///< Optional attribute.
/// @brief Indicates support for dynamic DNS configuration.
/// Attribute DynDNS of type xs:boolean.
   @bool*                                DynDNS                         0;	///< Optional attribute.
/// @brief Indicates support for IEEE 802.11 configuration.
/// Attribute Dot11Configuration of type xs:boolean.
   @bool*                                Dot11Configuration             0;	///< Optional attribute.
/// @brief Indicates the maximum number of Dot1X configurations supported by the device
/// Attribute Dot1XConfigurations of type xs:int.
   @int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// @brief Indicates support for retrieval of hostname from DHCP.
/// Attribute HostnameFromDHCP of type xs:boolean.
   @bool*                                HostnameFromDHCP               0;	///< Optional attribute.
/// @brief Maximum number of NTP servers supported by the devices SetNTP command.
/// Attribute NTP of type xs:int.
   @int*                                 NTP                            0;	///< Optional attribute.
/// @brief Indicates support for Stateful IPv6 DHCP.
/// Attribute DHCPv6 of type xs:boolean.
   @bool*                                DHCPv6                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
/// class tds__SecurityCapabilities operations:
/// - soap_new_tds__SecurityCapabilities(soap*) allocate
/// - soap_new_tds__SecurityCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__SecurityCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__SecurityCapabilities(soap*, tds__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tds__SecurityCapabilities(soap, tds__SecurityCapabilities*) serialize to a stream
class tds__SecurityCapabilities
{ public:
/// @brief Indicates support for TLS 1.0.
/// Attribute TLS1.0 of type xs:boolean.
   @bool*                                TLS1_x002e0                    0;	///< Optional attribute.
/// @brief Indicates support for TLS 1.1.
/// Attribute TLS1.1 of type xs:boolean.
   @bool*                                TLS1_x002e1                    0;	///< Optional attribute.
/// @brief Indicates support for TLS 1.2.
/// Attribute TLS1.2 of type xs:boolean.
   @bool*                                TLS1_x002e2                    0;	///< Optional attribute.
/// @brief Indicates support for onboard key generation.
/// Attribute OnboardKeyGeneration of type xs:boolean.
   @bool*                                OnboardKeyGeneration           0;	///< Optional attribute.
/// @brief Indicates support for access policy configuration.
/// Attribute AccessPolicyConfig of type xs:boolean.
   @bool*                                AccessPolicyConfig             0;	///< Optional attribute.
/// @brief Indicates support for the ONVIF default access policy.
/// Attribute DefaultAccessPolicy of type xs:boolean.
   @bool*                                DefaultAccessPolicy            0;	///< Optional attribute.
/// @brief Indicates support for IEEE 802.1X configuration.
/// Attribute Dot1X of type xs:boolean.
   @bool*                                Dot1X                          0;	///< Optional attribute.
/// @brief Indicates support for remote user configuration. Used when accessing another device.
/// Attribute RemoteUserHandling of type xs:boolean.
   @bool*                                RemoteUserHandling             0;	///< Optional attribute.
/// @brief Indicates support for WS-Security X.509 token.
/// Attribute X.509Token of type xs:boolean.
   @bool*                                X_x002e509Token                0;	///< Optional attribute.
/// @brief Indicates support for WS-Security SAML token.
/// Attribute SAMLToken of type xs:boolean.
   @bool*                                SAMLToken                      0;	///< Optional attribute.
/// @brief Indicates support for WS-Security Kerberos token.
/// Attribute KerberosToken of type xs:boolean.
   @bool*                                KerberosToken                  0;	///< Optional attribute.
/// @brief Indicates support for WS-Security Username token.
/// Attribute UsernameToken of type xs:boolean.
   @bool*                                UsernameToken                  0;	///< Optional attribute.
/// @brief Indicates support for WS over HTTP digest authenticated communication layer.
/// Attribute HttpDigest of type xs:boolean.
   @bool*                                HttpDigest                     0;	///< Optional attribute.
/// @brief Indicates support for WS-Security REL token.
/// Attribute RELToken of type xs:boolean.
   @bool*                                RELToken                       0;	///< Optional attribute.
/// @brief EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Attribute SupportedEAPMethods of type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
   @tds__EAPMethodTypes*                 SupportedEAPMethods            0;	///< Optional attribute.
/// @brief The maximum number of users that the device supports.
/// Attribute MaxUsers of type xs:int.
   @int*                                 MaxUsers                       0;	///< Optional attribute.
/// @brief Maximum number of characters supported for the username by CreateUsers.
/// Attribute MaxUserNameLength of type xs:int.
   @int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// @brief Maximum number of characters supported for the password by CreateUsers and SetUser.
/// Attribute MaxPasswordLength of type xs:int.
   @int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
/// class tds__SystemCapabilities operations:
/// - soap_new_tds__SystemCapabilities(soap*) allocate
/// - soap_new_tds__SystemCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__SystemCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__SystemCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__SystemCapabilities(soap*, tds__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tds__SystemCapabilities(soap, tds__SystemCapabilities*) serialize to a stream
class tds__SystemCapabilities
{ public:
/// @brief Indicates support for WS Discovery resolve requests.
/// Attribute DiscoveryResolve of type xs:boolean.
   @bool*                                DiscoveryResolve               0;	///< Optional attribute.
/// @brief Indicates support for WS-Discovery Bye.
/// Attribute DiscoveryBye of type xs:boolean.
   @bool*                                DiscoveryBye                   0;	///< Optional attribute.
/// @brief Indicates support for remote discovery.
/// Attribute RemoteDiscovery of type xs:boolean.
   @bool*                                RemoteDiscovery                0;	///< Optional attribute.
/// @brief Indicates support for system backup through MTOM.
/// Attribute SystemBackup of type xs:boolean.
   @bool*                                SystemBackup                   0;	///< Optional attribute.
/// @brief Indicates support for retrieval of system logging through MTOM.
/// Attribute SystemLogging of type xs:boolean.
   @bool*                                SystemLogging                  0;	///< Optional attribute.
/// @brief Indicates support for firmware upgrade through MTOM.
/// Attribute FirmwareUpgrade of type xs:boolean.
   @bool*                                FirmwareUpgrade                0;	///< Optional attribute.
/// @brief Indicates support for firmware upgrade through HTTP.
/// Attribute HttpFirmwareUpgrade of type xs:boolean.
   @bool*                                HttpFirmwareUpgrade            0;	///< Optional attribute.
/// @brief Indicates support for system backup through HTTP.
/// Attribute HttpSystemBackup of type xs:boolean.
   @bool*                                HttpSystemBackup               0;	///< Optional attribute.
/// @brief Indicates support for retrieval of system logging through HTTP.
/// Attribute HttpSystemLogging of type xs:boolean.
   @bool*                                HttpSystemLogging              0;	///< Optional attribute.
/// @brief Indicates support for retrieving support information through HTTP.
/// Attribute HttpSupportInformation of type xs:boolean.
   @bool*                                HttpSupportInformation         0;	///< Optional attribute.
/// @brief Indicates support for storage configuration interfaces.
/// Attribute StorageConfiguration of type xs:boolean.
   @bool*                                StorageConfiguration           0;	///< Optional attribute.
/// @brief Indicates maximum number of storage configurations supported.
/// Attribute MaxStorageConfigurations of type xs:int.
   @int*                                 MaxStorageConfigurations       0;	///< Optional attribute.
/// @brief If present signals support for geo location. The value signals the supported number of entries.
/// Attribute GeoLocationEntries of type xs:int.
   @int*                                 GeoLocationEntries             0;	///< Optional attribute.
/// @brief Signals support for automatic retrieval of geo location.
/// Attribute AutoGeo of type xs:string.
   @std::string*                         AutoGeo                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
/// class tds__MiscCapabilities operations:
/// - soap_new_tds__MiscCapabilities(soap*) allocate
/// - soap_new_tds__MiscCapabilities(soap*, int num) allocate array
/// - soap_new_req_tds__MiscCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set_tds__MiscCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read_tds__MiscCapabilities(soap*, tds__MiscCapabilities*) deserialize from a stream
/// - int soap_write_tds__MiscCapabilities(soap, tds__MiscCapabilities*) serialize to a stream
class tds__MiscCapabilities
{ public:
/// @brief Lists of commands supported by SendAuxiliaryCommand.
/// Attribute AuxiliaryCommands of type "http://www.onvif.org/ver10/schema":StringAttrList.
   @tt__StringAttrList*                  AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
/// class tds__UserCredential operations:
/// - soap_new_tds__UserCredential(soap*) allocate
/// - soap_new_tds__UserCredential(soap*, int num) allocate array
/// - soap_new_req_tds__UserCredential(soap*, ...) allocate, set required members
/// - soap_new_set_tds__UserCredential(soap*, ...) allocate, set all public members
/// - int soap_read_tds__UserCredential(soap*, tds__UserCredential*) deserialize from a stream
/// - int soap_write_tds__UserCredential(soap, tds__UserCredential*) serialize to a stream
class tds__UserCredential
{ public:
/// @brief User name
/// Element UserName of type xs:string.
    std::string                          UserName                       1;	///< Required element.
/// @brief optional password
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// class _tds__UserCredential_Extension operations:
/// - soap_new__tds__UserCredential_Extension(soap*) allocate
/// - soap_new__tds__UserCredential_Extension(soap*, int num) allocate array
/// - soap_new_req__tds__UserCredential_Extension(soap*, ...) allocate, set required members
/// - soap_new_set__tds__UserCredential_Extension(soap*, ...) allocate, set all public members
/// - int soap_read__tds__UserCredential_Extension(soap*, _tds__UserCredential_Extension*) deserialize from a stream
/// - int soap_write__tds__UserCredential_Extension(soap, _tds__UserCredential_Extension*) serialize to a stream
    class _tds__UserCredential_Extension
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }                                   *Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
/// class tds__StorageConfigurationData operations:
/// - soap_new_tds__StorageConfigurationData(soap*) allocate
/// - soap_new_tds__StorageConfigurationData(soap*, int num) allocate array
/// - soap_new_req_tds__StorageConfigurationData(soap*, ...) allocate, set required members
/// - soap_new_set_tds__StorageConfigurationData(soap*, ...) allocate, set all public members
/// - int soap_read_tds__StorageConfigurationData(soap*, tds__StorageConfigurationData*) deserialize from a stream
/// - int soap_write_tds__StorageConfigurationData(soap, tds__StorageConfigurationData*) serialize to a stream
class tds__StorageConfigurationData
{ public:
/// @brief local path
/// Element LocalPath of type xs:anyURI.
    xsd__anyURI*                         LocalPath                      0;	///< Optional element.
/// @brief Storage server address
/// Element StorageUri of type xs:anyURI.
    xsd__anyURI*                         StorageUri                     0;	///< Optional element.
/// @brief User credential for the storage server
/// Element User of type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    tds__UserCredential*                 User                           0;	///< Optional element.
/// class _tds__StorageConfigurationData_Extension operations:
/// - soap_new__tds__StorageConfigurationData_Extension(soap*) allocate
/// - soap_new__tds__StorageConfigurationData_Extension(soap*, int num) allocate array
/// - soap_new_req__tds__StorageConfigurationData_Extension(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StorageConfigurationData_Extension(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StorageConfigurationData_Extension(soap*, _tds__StorageConfigurationData_Extension*) deserialize from a stream
/// - int soap_write__tds__StorageConfigurationData_Extension(soap, _tds__StorageConfigurationData_Extension*) serialize to a stream
    class _tds__StorageConfigurationData_Extension
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }                                   *Extension                      0;	///< Optional element.
/// @brief StorageType lists the acceptable values for type attribute
/// Attribute type of type xs:string.
   @std::string                          type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices

/// "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
/// class _tds__GetServices operations:
/// - soap_new__tds__GetServices(soap*) allocate
/// - soap_new__tds__GetServices(soap*, int num) allocate array
/// - soap_new_req__tds__GetServices(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServices(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServices(soap*, _tds__GetServices*) deserialize from a stream
/// - int soap_write__tds__GetServices(soap, _tds__GetServices*) serialize to a stream
class _tds__GetServices
{ public:
/// @brief Indicates if the service capabilities (untyped) should be included in the response.
/// Element IncludeCapability of type xs:boolean.
    bool                                 IncludeCapability              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
/// class _tds__GetServicesResponse operations:
/// - soap_new__tds__GetServicesResponse(soap*) allocate
/// - soap_new__tds__GetServicesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetServicesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServicesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServicesResponse(soap*, _tds__GetServicesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServicesResponse(soap, _tds__GetServicesResponse*) serialize to a stream
class _tds__GetServicesResponse
{ public:
/// @brief Each Service element contains information about one service.
/// Vector of tds__Service* with length 1..unbounded
    std::vector<tds__Service*          > Service                        1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
/// class _tds__GetServiceCapabilities operations:
/// - soap_new__tds__GetServiceCapabilities(soap*) allocate
/// - soap_new__tds__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__tds__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServiceCapabilities(soap*, _tds__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilities(soap, _tds__GetServiceCapabilities*) serialize to a stream
class _tds__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _tds__GetServiceCapabilitiesResponse operations:
/// - soap_new__tds__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__tds__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilitiesResponse(soap, _tds__GetServiceCapabilitiesResponse*) serialize to a stream
class _tds__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the device service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    tds__DeviceServiceCapabilities*      Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
/// class _tds__GetDeviceInformation operations:
/// - soap_new__tds__GetDeviceInformation(soap*) allocate
/// - soap_new__tds__GetDeviceInformation(soap*, int num) allocate array
/// - soap_new_req__tds__GetDeviceInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDeviceInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDeviceInformation(soap*, _tds__GetDeviceInformation*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformation(soap, _tds__GetDeviceInformation*) serialize to a stream
class _tds__GetDeviceInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
/// class _tds__GetDeviceInformationResponse operations:
/// - soap_new__tds__GetDeviceInformationResponse(soap*) allocate
/// - soap_new__tds__GetDeviceInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDeviceInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDeviceInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDeviceInformationResponse(soap*, _tds__GetDeviceInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformationResponse(soap, _tds__GetDeviceInformationResponse*) serialize to a stream
class _tds__GetDeviceInformationResponse
{ public:
/// @brief The manufactor of the device.
/// Element Manufacturer of type xs:string.
    std::string                          Manufacturer                   1;	///< Required element.
/// @brief The device model.
/// Element Model of type xs:string.
    std::string                          Model                          1;	///< Required element.
/// @brief The firmware version in the device.
/// Element FirmwareVersion of type xs:string.
    std::string                          FirmwareVersion                1;	///< Required element.
/// @brief The serial number of the device.
/// Element SerialNumber of type xs:string.
    std::string                          SerialNumber                   1;	///< Required element.
/// @brief The hardware ID of the device.
/// Element HardwareId of type xs:string.
    std::string                          HardwareId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
/// class _tds__SetSystemDateAndTime operations:
/// - soap_new__tds__SetSystemDateAndTime(soap*) allocate
/// - soap_new__tds__SetSystemDateAndTime(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemDateAndTime(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemDateAndTime(soap*, _tds__SetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTime(soap, _tds__SetSystemDateAndTime*) serialize to a stream
class _tds__SetSystemDateAndTime
{ public:
/// @brief Defines if the date and time is set via NTP or manually.
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// @brief Automatically adjust Daylight savings if defined in TimeZone.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// @brief The time zone in POSIX 1003.1 format
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// @brief Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
/// class _tds__SetSystemDateAndTimeResponse operations:
/// - soap_new__tds__SetSystemDateAndTimeResponse(soap*) allocate
/// - soap_new__tds__SetSystemDateAndTimeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTimeResponse(soap, _tds__SetSystemDateAndTimeResponse*) serialize to a stream
class _tds__SetSystemDateAndTimeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
/// class _tds__GetSystemDateAndTime operations:
/// - soap_new__tds__GetSystemDateAndTime(soap*) allocate
/// - soap_new__tds__GetSystemDateAndTime(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemDateAndTime(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTime(soap, _tds__GetSystemDateAndTime*) serialize to a stream
class _tds__GetSystemDateAndTime
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
/// class _tds__GetSystemDateAndTimeResponse operations:
/// - soap_new__tds__GetSystemDateAndTimeResponse(soap*) allocate
/// - soap_new__tds__GetSystemDateAndTimeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTimeResponse(soap, _tds__GetSystemDateAndTimeResponse*) serialize to a stream
class _tds__GetSystemDateAndTimeResponse
{ public:
/// @brief Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// Element SystemDateAndTime of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    tt__SystemDateTime*                  SystemDateAndTime              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
/// class _tds__SetSystemFactoryDefault operations:
/// - soap_new__tds__SetSystemFactoryDefault(soap*) allocate
/// - soap_new__tds__SetSystemFactoryDefault(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemFactoryDefault(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemFactoryDefault(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefault(soap, _tds__SetSystemFactoryDefault*) serialize to a stream
class _tds__SetSystemFactoryDefault
{ public:
/// @brief Specifies the factory default action type.
/// Element FactoryDefault of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
/// class _tds__SetSystemFactoryDefaultResponse operations:
/// - soap_new__tds__SetSystemFactoryDefaultResponse(soap*) allocate
/// - soap_new__tds__SetSystemFactoryDefaultResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(soap, _tds__SetSystemFactoryDefaultResponse*) serialize to a stream
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware

/// "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
/// class _tds__UpgradeSystemFirmware operations:
/// - soap_new__tds__UpgradeSystemFirmware(soap*) allocate
/// - soap_new__tds__UpgradeSystemFirmware(soap*, int num) allocate array
/// - soap_new_req__tds__UpgradeSystemFirmware(soap*, ...) allocate, set required members
/// - soap_new_set__tds__UpgradeSystemFirmware(soap*, ...) allocate, set all public members
/// - int soap_read__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmware(soap, _tds__UpgradeSystemFirmware*) serialize to a stream
class _tds__UpgradeSystemFirmware
{ public:
/// Element Firmware of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Firmware                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse

/// "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
/// class _tds__UpgradeSystemFirmwareResponse operations:
/// - soap_new__tds__UpgradeSystemFirmwareResponse(soap*) allocate
/// - soap_new__tds__UpgradeSystemFirmwareResponse(soap*, int num) allocate array
/// - soap_new_req__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(soap, _tds__UpgradeSystemFirmwareResponse*) serialize to a stream
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element Message of type xs:string.
    std::string*                         Message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot

/// "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
/// class _tds__SystemReboot operations:
/// - soap_new__tds__SystemReboot(soap*) allocate
/// - soap_new__tds__SystemReboot(soap*, int num) allocate array
/// - soap_new_req__tds__SystemReboot(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SystemReboot(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SystemReboot(soap*, _tds__SystemReboot*) deserialize from a stream
/// - int soap_write__tds__SystemReboot(soap, _tds__SystemReboot*) serialize to a stream
class _tds__SystemReboot
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse

/// "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
/// class _tds__SystemRebootResponse operations:
/// - soap_new__tds__SystemRebootResponse(soap*) allocate
/// - soap_new__tds__SystemRebootResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SystemRebootResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SystemRebootResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) deserialize from a stream
/// - int soap_write__tds__SystemRebootResponse(soap, _tds__SystemRebootResponse*) serialize to a stream
class _tds__SystemRebootResponse
{ public:
/// @brief Contains the reboot message sent by the device.
/// Element Message of type xs:string.
    std::string                          Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem

/// "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
/// class _tds__RestoreSystem operations:
/// - soap_new__tds__RestoreSystem(soap*) allocate
/// - soap_new__tds__RestoreSystem(soap*, int num) allocate array
/// - soap_new_req__tds__RestoreSystem(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RestoreSystem(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RestoreSystem(soap*, _tds__RestoreSystem*) deserialize from a stream
/// - int soap_write__tds__RestoreSystem(soap, _tds__RestoreSystem*) serialize to a stream
class _tds__RestoreSystem
{ public:
/// Vector of tt__BackupFile* with length 1..unbounded
    std::vector<tt__BackupFile*        > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse

/// "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
/// class _tds__RestoreSystemResponse operations:
/// - soap_new__tds__RestoreSystemResponse(soap*) allocate
/// - soap_new__tds__RestoreSystemResponse(soap*, int num) allocate array
/// - soap_new_req__tds__RestoreSystemResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RestoreSystemResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) deserialize from a stream
/// - int soap_write__tds__RestoreSystemResponse(soap, _tds__RestoreSystemResponse*) serialize to a stream
class _tds__RestoreSystemResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
/// class _tds__GetSystemBackup operations:
/// - soap_new__tds__GetSystemBackup(soap*) allocate
/// - soap_new__tds__GetSystemBackup(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemBackup(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemBackup(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackup(soap, _tds__GetSystemBackup*) serialize to a stream
class _tds__GetSystemBackup
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
/// class _tds__GetSystemBackupResponse operations:
/// - soap_new__tds__GetSystemBackupResponse(soap*) allocate
/// - soap_new__tds__GetSystemBackupResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemBackupResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemBackupResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackupResponse(soap, _tds__GetSystemBackupResponse*) serialize to a stream
class _tds__GetSystemBackupResponse
{ public:
/// Vector of tt__BackupFile* with length 1..unbounded
    std::vector<tt__BackupFile*        > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
/// class _tds__GetSystemSupportInformation operations:
/// - soap_new__tds__GetSystemSupportInformation(soap*) allocate
/// - soap_new__tds__GetSystemSupportInformation(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemSupportInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemSupportInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformation(soap, _tds__GetSystemSupportInformation*) serialize to a stream
class _tds__GetSystemSupportInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
/// class _tds__GetSystemSupportInformationResponse operations:
/// - soap_new__tds__GetSystemSupportInformationResponse(soap*) allocate
/// - soap_new__tds__GetSystemSupportInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformationResponse(soap, _tds__GetSystemSupportInformationResponse*) serialize to a stream
class _tds__GetSystemSupportInformationResponse
{ public:
/// @brief Contains the arbitary device diagnostics information.
/// Element SupportInformation of type "http://www.onvif.org/ver10/schema":SupportInformation.
    tt__SupportInformation*              SupportInformation             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
/// class _tds__GetSystemLog operations:
/// - soap_new__tds__GetSystemLog(soap*) allocate
/// - soap_new__tds__GetSystemLog(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemLog(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemLog(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemLog(soap*, _tds__GetSystemLog*) deserialize from a stream
/// - int soap_write__tds__GetSystemLog(soap, _tds__GetSystemLog*) serialize to a stream
class _tds__GetSystemLog
{ public:
/// @brief Specifies the type of system log to get.
/// Element LogType of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
/// class _tds__GetSystemLogResponse operations:
/// - soap_new__tds__GetSystemLogResponse(soap*) allocate
/// - soap_new__tds__GetSystemLogResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemLogResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemLogResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemLogResponse(soap, _tds__GetSystemLogResponse*) serialize to a stream
class _tds__GetSystemLogResponse
{ public:
/// @brief Contains the system log information.
/// Element SystemLog of type "http://www.onvif.org/ver10/schema":SystemLog.
    tt__SystemLog*                       SystemLog                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes

/// "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
/// class _tds__GetScopes operations:
/// - soap_new__tds__GetScopes(soap*) allocate
/// - soap_new__tds__GetScopes(soap*, int num) allocate array
/// - soap_new_req__tds__GetScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetScopes(soap*, _tds__GetScopes*) deserialize from a stream
/// - int soap_write__tds__GetScopes(soap, _tds__GetScopes*) serialize to a stream
class _tds__GetScopes
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
/// class _tds__GetScopesResponse operations:
/// - soap_new__tds__GetScopesResponse(soap*) allocate
/// - soap_new__tds__GetScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__GetScopesResponse(soap, _tds__GetScopesResponse*) serialize to a stream
class _tds__GetScopesResponse
{ public:
/// @brief Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// Vector of tt__Scope* with length 1..unbounded
    std::vector<tt__Scope*             > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes

/// "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
/// class _tds__SetScopes operations:
/// - soap_new__tds__SetScopes(soap*) allocate
/// - soap_new__tds__SetScopes(soap*, int num) allocate array
/// - soap_new_req__tds__SetScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetScopes(soap*, _tds__SetScopes*) deserialize from a stream
/// - int soap_write__tds__SetScopes(soap, _tds__SetScopes*) serialize to a stream
class _tds__SetScopes
{ public:
/// @brief Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
/// class _tds__SetScopesResponse operations:
/// - soap_new__tds__SetScopesResponse(soap*) allocate
/// - soap_new__tds__SetScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__SetScopesResponse(soap, _tds__SetScopesResponse*) serialize to a stream
class _tds__SetScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes

/// "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
/// class _tds__AddScopes operations:
/// - soap_new__tds__AddScopes(soap*) allocate
/// - soap_new__tds__AddScopes(soap*, int num) allocate array
/// - soap_new_req__tds__AddScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddScopes(soap*, _tds__AddScopes*) deserialize from a stream
/// - int soap_write__tds__AddScopes(soap, _tds__AddScopes*) serialize to a stream
class _tds__AddScopes
{ public:
/// @brief Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
/// class _tds__AddScopesResponse operations:
/// - soap_new__tds__AddScopesResponse(soap*) allocate
/// - soap_new__tds__AddScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__AddScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) deserialize from a stream
/// - int soap_write__tds__AddScopesResponse(soap, _tds__AddScopesResponse*) serialize to a stream
class _tds__AddScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes

/// "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
/// class _tds__RemoveScopes operations:
/// - soap_new__tds__RemoveScopes(soap*) allocate
/// - soap_new__tds__RemoveScopes(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveScopes(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveScopes(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveScopes(soap*, _tds__RemoveScopes*) deserialize from a stream
/// - int soap_write__tds__RemoveScopes(soap, _tds__RemoveScopes*) serialize to a stream
class _tds__RemoveScopes
{ public:
/// @brief Contains a list of URIs that should be removed from the device scope.<br/> Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
/// class _tds__RemoveScopesResponse operations:
/// - soap_new__tds__RemoveScopesResponse(soap*) allocate
/// - soap_new__tds__RemoveScopesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveScopesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveScopesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveScopesResponse(soap, _tds__RemoveScopesResponse*) serialize to a stream
class _tds__RemoveScopesResponse
{ public:
/// @brief Contains a list of URIs that has been removed from the device scope
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
/// class _tds__GetDiscoveryMode operations:
/// - soap_new__tds__GetDiscoveryMode(soap*) allocate
/// - soap_new__tds__GetDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__GetDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryMode(soap, _tds__GetDiscoveryMode*) serialize to a stream
class _tds__GetDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
/// class _tds__GetDiscoveryModeResponse operations:
/// - soap_new__tds__GetDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__GetDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryModeResponse(soap, _tds__GetDiscoveryModeResponse*) serialize to a stream
class _tds__GetDiscoveryModeResponse
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element DiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
/// class _tds__SetDiscoveryMode operations:
/// - soap_new__tds__SetDiscoveryMode(soap*) allocate
/// - soap_new__tds__SetDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__SetDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryMode(soap, _tds__SetDiscoveryMode*) serialize to a stream
class _tds__SetDiscoveryMode
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element DiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
/// class _tds__SetDiscoveryModeResponse operations:
/// - soap_new__tds__SetDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__SetDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryModeResponse(soap, _tds__SetDiscoveryModeResponse*) serialize to a stream
class _tds__SetDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
/// class _tds__GetRemoteDiscoveryMode operations:
/// - soap_new__tds__GetRemoteDiscoveryMode(soap*) allocate
/// - soap_new__tds__GetRemoteDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryMode(soap, _tds__GetRemoteDiscoveryMode*) serialize to a stream
class _tds__GetRemoteDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
/// class _tds__GetRemoteDiscoveryModeResponse operations:
/// - soap_new__tds__GetRemoteDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__GetRemoteDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(soap, _tds__GetRemoteDiscoveryModeResponse*) serialize to a stream
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element RemoteDiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
/// class _tds__SetRemoteDiscoveryMode operations:
/// - soap_new__tds__SetRemoteDiscoveryMode(soap*) allocate
/// - soap_new__tds__SetRemoteDiscoveryMode(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryMode(soap, _tds__SetRemoteDiscoveryMode*) serialize to a stream
class _tds__SetRemoteDiscoveryMode
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element RemoteDiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
/// class _tds__SetRemoteDiscoveryModeResponse operations:
/// - soap_new__tds__SetRemoteDiscoveryModeResponse(soap*) allocate
/// - soap_new__tds__SetRemoteDiscoveryModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(soap, _tds__SetRemoteDiscoveryModeResponse*) serialize to a stream
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses

/// "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
/// class _tds__GetDPAddresses operations:
/// - soap_new__tds__GetDPAddresses(soap*) allocate
/// - soap_new__tds__GetDPAddresses(soap*, int num) allocate array
/// - soap_new_req__tds__GetDPAddresses(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDPAddresses(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__GetDPAddresses(soap, _tds__GetDPAddresses*) serialize to a stream
class _tds__GetDPAddresses
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
/// class _tds__GetDPAddressesResponse operations:
/// - soap_new__tds__GetDPAddressesResponse(soap*) allocate
/// - soap_new__tds__GetDPAddressesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDPAddressesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDPAddressesResponse(soap, _tds__GetDPAddressesResponse*) serialize to a stream
class _tds__GetDPAddressesResponse
{ public:
/// Vector of tt__NetworkHost* with length 0..unbounded
    std::vector<tt__NetworkHost*       > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses

/// "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
/// class _tds__SetDPAddresses operations:
/// - soap_new__tds__SetDPAddresses(soap*) allocate
/// - soap_new__tds__SetDPAddresses(soap*, int num) allocate array
/// - soap_new_req__tds__SetDPAddresses(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDPAddresses(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__SetDPAddresses(soap, _tds__SetDPAddresses*) serialize to a stream
class _tds__SetDPAddresses
{ public:
/// Vector of tt__NetworkHost* with length 0..unbounded
    std::vector<tt__NetworkHost*       > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
/// class _tds__SetDPAddressesResponse operations:
/// - soap_new__tds__SetDPAddressesResponse(soap*) allocate
/// - soap_new__tds__SetDPAddressesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDPAddressesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__SetDPAddressesResponse(soap, _tds__SetDPAddressesResponse*) serialize to a stream
class _tds__SetDPAddressesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference

/// "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
/// class _tds__GetEndpointReference operations:
/// - soap_new__tds__GetEndpointReference(soap*) allocate
/// - soap_new__tds__GetEndpointReference(soap*, int num) allocate array
/// - soap_new_req__tds__GetEndpointReference(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetEndpointReference(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReference(soap, _tds__GetEndpointReference*) serialize to a stream
class _tds__GetEndpointReference
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
/// class _tds__GetEndpointReferenceResponse operations:
/// - soap_new__tds__GetEndpointReferenceResponse(soap*) allocate
/// - soap_new__tds__GetEndpointReferenceResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReferenceResponse(soap, _tds__GetEndpointReferenceResponse*) serialize to a stream
class _tds__GetEndpointReferenceResponse
{ public:
/// Element GUID of type xs:string.
    std::string                          GUID                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
/// class _tds__GetRemoteUser operations:
/// - soap_new__tds__GetRemoteUser(soap*) allocate
/// - soap_new__tds__GetRemoteUser(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteUser(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteUser(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUser(soap, _tds__GetRemoteUser*) serialize to a stream
class _tds__GetRemoteUser
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
/// class _tds__GetRemoteUserResponse operations:
/// - soap_new__tds__GetRemoteUserResponse(soap*) allocate
/// - soap_new__tds__GetRemoteUserResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetRemoteUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUserResponse(soap, _tds__GetRemoteUserResponse*) serialize to a stream
class _tds__GetRemoteUserResponse
{ public:
/// Element RemoteUser of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
/// class _tds__SetRemoteUser operations:
/// - soap_new__tds__SetRemoteUser(soap*) allocate
/// - soap_new__tds__SetRemoteUser(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteUser(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteUser(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUser(soap, _tds__SetRemoteUser*) serialize to a stream
class _tds__SetRemoteUser
{ public:
/// Element RemoteUser of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
/// class _tds__SetRemoteUserResponse operations:
/// - soap_new__tds__SetRemoteUserResponse(soap*) allocate
/// - soap_new__tds__SetRemoteUserResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRemoteUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUserResponse(soap, _tds__SetRemoteUserResponse*) serialize to a stream
class _tds__SetRemoteUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers

/// "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
/// class _tds__GetUsers operations:
/// - soap_new__tds__GetUsers(soap*) allocate
/// - soap_new__tds__GetUsers(soap*, int num) allocate array
/// - soap_new_req__tds__GetUsers(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetUsers(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetUsers(soap*, _tds__GetUsers*) deserialize from a stream
/// - int soap_write__tds__GetUsers(soap, _tds__GetUsers*) serialize to a stream
class _tds__GetUsers
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
/// class _tds__GetUsersResponse operations:
/// - soap_new__tds__GetUsersResponse(soap*) allocate
/// - soap_new__tds__GetUsersResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetUsersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetUsersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) deserialize from a stream
/// - int soap_write__tds__GetUsersResponse(soap, _tds__GetUsersResponse*) serialize to a stream
class _tds__GetUsersResponse
{ public:
/// @brief Contains a list of the onvif users and following information is included in each entry: username and user level.
/// Vector of tt__User* with length 0..unbounded
    std::vector<tt__User*              > User                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers

/// "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
/// class _tds__CreateUsers operations:
/// - soap_new__tds__CreateUsers(soap*) allocate
/// - soap_new__tds__CreateUsers(soap*, int num) allocate array
/// - soap_new_req__tds__CreateUsers(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateUsers(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateUsers(soap*, _tds__CreateUsers*) deserialize from a stream
/// - int soap_write__tds__CreateUsers(soap, _tds__CreateUsers*) serialize to a stream
class _tds__CreateUsers
{ public:
/// @brief Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// Vector of tt__User* with length 1..unbounded
    std::vector<tt__User*              > User                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
/// class _tds__CreateUsersResponse operations:
/// - soap_new__tds__CreateUsersResponse(soap*) allocate
/// - soap_new__tds__CreateUsersResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateUsersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateUsersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) deserialize from a stream
/// - int soap_write__tds__CreateUsersResponse(soap, _tds__CreateUsersResponse*) serialize to a stream
class _tds__CreateUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers

/// "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
/// class _tds__DeleteUsers operations:
/// - soap_new__tds__DeleteUsers(soap*) allocate
/// - soap_new__tds__DeleteUsers(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteUsers(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteUsers(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteUsers(soap*, _tds__DeleteUsers*) deserialize from a stream
/// - int soap_write__tds__DeleteUsers(soap, _tds__DeleteUsers*) serialize to a stream
class _tds__DeleteUsers
{ public:
/// @brief Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Username                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
/// class _tds__DeleteUsersResponse operations:
/// - soap_new__tds__DeleteUsersResponse(soap*) allocate
/// - soap_new__tds__DeleteUsersResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteUsersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteUsersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteUsersResponse(soap, _tds__DeleteUsersResponse*) serialize to a stream
class _tds__DeleteUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser

/// "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
/// class _tds__SetUser operations:
/// - soap_new__tds__SetUser(soap*) allocate
/// - soap_new__tds__SetUser(soap*, int num) allocate array
/// - soap_new_req__tds__SetUser(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetUser(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetUser(soap*, _tds__SetUser*) deserialize from a stream
/// - int soap_write__tds__SetUser(soap, _tds__SetUser*) serialize to a stream
class _tds__SetUser
{ public:
/// @brief Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// Vector of tt__User* with length 1..unbounded
    std::vector<tt__User*              > User                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
/// class _tds__SetUserResponse operations:
/// - soap_new__tds__SetUserResponse(soap*) allocate
/// - soap_new__tds__SetUserResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetUserResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetUserResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetUserResponse(soap*, _tds__SetUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetUserResponse(soap, _tds__SetUserResponse*) serialize to a stream
class _tds__SetUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl

/// "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
/// class _tds__GetWsdlUrl operations:
/// - soap_new__tds__GetWsdlUrl(soap*) allocate
/// - soap_new__tds__GetWsdlUrl(soap*, int num) allocate array
/// - soap_new_req__tds__GetWsdlUrl(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetWsdlUrl(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrl(soap, _tds__GetWsdlUrl*) serialize to a stream
class _tds__GetWsdlUrl
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
/// class _tds__GetWsdlUrlResponse operations:
/// - soap_new__tds__GetWsdlUrlResponse(soap*) allocate
/// - soap_new__tds__GetWsdlUrlResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetWsdlUrlResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetWsdlUrlResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrlResponse(soap, _tds__GetWsdlUrlResponse*) serialize to a stream
class _tds__GetWsdlUrlResponse
{ public:
/// Element WsdlUrl of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
/// class _tds__GetCapabilities operations:
/// - soap_new__tds__GetCapabilities(soap*) allocate
/// - soap_new__tds__GetCapabilities(soap*, int num) allocate array
/// - soap_new_req__tds__GetCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCapabilities(soap*, _tds__GetCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetCapabilities(soap, _tds__GetCapabilities*) serialize to a stream
class _tds__GetCapabilities
{ public:
/// @brief List of categories to retrieve capability information on.
/// Vector of enum tt__CapabilityCategory with length 0..unbounded
    std::vector<enum tt__CapabilityCategory> Category                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
/// class _tds__GetCapabilitiesResponse operations:
/// - soap_new__tds__GetCapabilitiesResponse(soap*) allocate
/// - soap_new__tds__GetCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCapabilitiesResponse(soap, _tds__GetCapabilitiesResponse*) serialize to a stream
class _tds__GetCapabilitiesResponse
{ public:
/// @brief Capability information.
/// Element Capabilities of type "http://www.onvif.org/ver10/schema":Capabilities.
    tt__Capabilities*                    Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname

/// "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
/// class _tds__GetHostname operations:
/// - soap_new__tds__GetHostname(soap*) allocate
/// - soap_new__tds__GetHostname(soap*, int num) allocate array
/// - soap_new_req__tds__GetHostname(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetHostname(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetHostname(soap*, _tds__GetHostname*) deserialize from a stream
/// - int soap_write__tds__GetHostname(soap, _tds__GetHostname*) serialize to a stream
class _tds__GetHostname
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
/// class _tds__GetHostnameResponse operations:
/// - soap_new__tds__GetHostnameResponse(soap*) allocate
/// - soap_new__tds__GetHostnameResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetHostnameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetHostnameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__GetHostnameResponse(soap, _tds__GetHostnameResponse*) serialize to a stream
class _tds__GetHostnameResponse
{ public:
/// @brief Contains the hostname information.
/// Element HostnameInformation of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    tt__HostnameInformation*             HostnameInformation            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname

/// "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
/// class _tds__SetHostname operations:
/// - soap_new__tds__SetHostname(soap*) allocate
/// - soap_new__tds__SetHostname(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostname(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostname(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostname(soap*, _tds__SetHostname*) deserialize from a stream
/// - int soap_write__tds__SetHostname(soap, _tds__SetHostname*) serialize to a stream
class _tds__SetHostname
{ public:
/// @brief The hostname to set.
/// Element Name of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
/// class _tds__SetHostnameResponse operations:
/// - soap_new__tds__SetHostnameResponse(soap*) allocate
/// - soap_new__tds__SetHostnameResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostnameResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostnameResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameResponse(soap, _tds__SetHostnameResponse*) serialize to a stream
class _tds__SetHostnameResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
/// class _tds__SetHostnameFromDHCP operations:
/// - soap_new__tds__SetHostnameFromDHCP(soap*) allocate
/// - soap_new__tds__SetHostnameFromDHCP(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostnameFromDHCP(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostnameFromDHCP(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCP(soap, _tds__SetHostnameFromDHCP*) serialize to a stream
class _tds__SetHostnameFromDHCP
{ public:
/// @brief True if the hostname shall be obtained via DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
/// class _tds__SetHostnameFromDHCPResponse operations:
/// - soap_new__tds__SetHostnameFromDHCPResponse(soap*) allocate
/// - soap_new__tds__SetHostnameFromDHCPResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCPResponse(soap, _tds__SetHostnameFromDHCPResponse*) serialize to a stream
class _tds__SetHostnameFromDHCPResponse
{ public:
/// @brief Indicates whether or not a reboot is required after configuration updates.
/// Element RebootNeeded of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS

/// "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
/// class _tds__GetDNS operations:
/// - soap_new__tds__GetDNS(soap*) allocate
/// - soap_new__tds__GetDNS(soap*, int num) allocate array
/// - soap_new_req__tds__GetDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDNS(soap*, _tds__GetDNS*) deserialize from a stream
/// - int soap_write__tds__GetDNS(soap, _tds__GetDNS*) serialize to a stream
class _tds__GetDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
/// class _tds__GetDNSResponse operations:
/// - soap_new__tds__GetDNSResponse(soap*) allocate
/// - soap_new__tds__GetDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDNSResponse(soap, _tds__GetDNSResponse*) serialize to a stream
class _tds__GetDNSResponse
{ public:
/// @brief DNS information.
/// Element DNSInformation of type "http://www.onvif.org/ver10/schema":DNSInformation.
    tt__DNSInformation*                  DNSInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS

/// "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
/// class _tds__SetDNS operations:
/// - soap_new__tds__SetDNS(soap*) allocate
/// - soap_new__tds__SetDNS(soap*, int num) allocate array
/// - soap_new_req__tds__SetDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDNS(soap*, _tds__SetDNS*) deserialize from a stream
/// - int soap_write__tds__SetDNS(soap, _tds__SetDNS*) serialize to a stream
class _tds__SetDNS
{ public:
/// @brief Indicate if the DNS address is to be retrieved using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief DNS search domain.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// @brief DNS address(es) set manually.
/// Vector of tt__IPAddress* with length 0..unbounded
    std::vector<tt__IPAddress*         > DNSManual                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
/// class _tds__SetDNSResponse operations:
/// - soap_new__tds__SetDNSResponse(soap*) allocate
/// - soap_new__tds__SetDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDNSResponse(soap, _tds__SetDNSResponse*) serialize to a stream
class _tds__SetDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP

/// "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
/// class _tds__GetNTP operations:
/// - soap_new__tds__GetNTP(soap*) allocate
/// - soap_new__tds__GetNTP(soap*, int num) allocate array
/// - soap_new_req__tds__GetNTP(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNTP(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNTP(soap*, _tds__GetNTP*) deserialize from a stream
/// - int soap_write__tds__GetNTP(soap, _tds__GetNTP*) serialize to a stream
class _tds__GetNTP
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
/// class _tds__GetNTPResponse operations:
/// - soap_new__tds__GetNTPResponse(soap*) allocate
/// - soap_new__tds__GetNTPResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNTPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNTPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__GetNTPResponse(soap, _tds__GetNTPResponse*) serialize to a stream
class _tds__GetNTPResponse
{ public:
/// @brief NTP information.
/// Element NTPInformation of type "http://www.onvif.org/ver10/schema":NTPInformation.
    tt__NTPInformation*                  NTPInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP

/// "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
/// class _tds__SetNTP operations:
/// - soap_new__tds__SetNTP(soap*) allocate
/// - soap_new__tds__SetNTP(soap*, int num) allocate array
/// - soap_new_req__tds__SetNTP(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNTP(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNTP(soap*, _tds__SetNTP*) deserialize from a stream
/// - int soap_write__tds__SetNTP(soap, _tds__SetNTP*) serialize to a stream
class _tds__SetNTP
{ public:
/// @brief Indicate if NTP address information is to be retrieved using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Manual NTP settings.
/// Vector of tt__NetworkHost* with length 0..unbounded
    std::vector<tt__NetworkHost*       > NTPManual                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
/// class _tds__SetNTPResponse operations:
/// - soap_new__tds__SetNTPResponse(soap*) allocate
/// - soap_new__tds__SetNTPResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNTPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNTPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__SetNTPResponse(soap, _tds__SetNTPResponse*) serialize to a stream
class _tds__SetNTPResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS

/// "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
/// class _tds__GetDynamicDNS operations:
/// - soap_new__tds__GetDynamicDNS(soap*) allocate
/// - soap_new__tds__GetDynamicDNS(soap*, int num) allocate array
/// - soap_new_req__tds__GetDynamicDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDynamicDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNS(soap, _tds__GetDynamicDNS*) serialize to a stream
class _tds__GetDynamicDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
/// class _tds__GetDynamicDNSResponse operations:
/// - soap_new__tds__GetDynamicDNSResponse(soap*) allocate
/// - soap_new__tds__GetDynamicDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNSResponse(soap, _tds__GetDynamicDNSResponse*) serialize to a stream
class _tds__GetDynamicDNSResponse
{ public:
/// @brief Dynamic DNS information.
/// Element DynamicDNSInformation of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    tt__DynamicDNSInformation*           DynamicDNSInformation          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS

/// "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
/// class _tds__SetDynamicDNS operations:
/// - soap_new__tds__SetDynamicDNS(soap*) allocate
/// - soap_new__tds__SetDynamicDNS(soap*, int num) allocate array
/// - soap_new_req__tds__SetDynamicDNS(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDynamicDNS(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNS(soap, _tds__SetDynamicDNS*) serialize to a stream
class _tds__SetDynamicDNS
{ public:
/// @brief Dynamic DNS type.
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// @brief DNS name.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// @brief DNS record time to live.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
/// class _tds__SetDynamicDNSResponse operations:
/// - soap_new__tds__SetDynamicDNSResponse(soap*) allocate
/// - soap_new__tds__SetDynamicDNSResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNSResponse(soap, _tds__SetDynamicDNSResponse*) serialize to a stream
class _tds__SetDynamicDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
/// class _tds__GetNetworkInterfaces operations:
/// - soap_new__tds__GetNetworkInterfaces(soap*) allocate
/// - soap_new__tds__GetNetworkInterfaces(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkInterfaces(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfaces(soap, _tds__GetNetworkInterfaces*) serialize to a stream
class _tds__GetNetworkInterfaces
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
/// class _tds__GetNetworkInterfacesResponse operations:
/// - soap_new__tds__GetNetworkInterfacesResponse(soap*) allocate
/// - soap_new__tds__GetNetworkInterfacesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfacesResponse(soap, _tds__GetNetworkInterfacesResponse*) serialize to a stream
class _tds__GetNetworkInterfacesResponse
{ public:
/// @brief List of network interfaces.
/// Vector of tt__NetworkInterface* with length 1..unbounded
    std::vector<tt__NetworkInterface*  > NetworkInterfaces              1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
/// class _tds__SetNetworkInterfaces operations:
/// - soap_new__tds__SetNetworkInterfaces(soap*) allocate
/// - soap_new__tds__SetNetworkInterfaces(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkInterfaces(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfaces(soap, _tds__SetNetworkInterfaces*) serialize to a stream
class _tds__SetNetworkInterfaces
{ public:
/// @brief Symbolic network interface name.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// @brief Network interface name.
/// Element NetworkInterface of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
/// class _tds__SetNetworkInterfacesResponse operations:
/// - soap_new__tds__SetNetworkInterfacesResponse(soap*) allocate
/// - soap_new__tds__SetNetworkInterfacesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfacesResponse(soap, _tds__SetNetworkInterfacesResponse*) serialize to a stream
class _tds__SetNetworkInterfacesResponse
{ public:
/// @brief Indicates whether or not a reboot is required after configuration updates. If a device responds with RebootNeeded set to false, the device can be reached via the new IP address without further action. A client should be aware that a device may not be responsive for a short period of time until it signals availability at the new address via the discovery Hello messages. If a device responds with RebootNeeded set to true, it will be further available under its previous IP address. The settings will only be activated when the device is rebooted via the SystemReboot command.
/// Element RebootNeeded of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
/// class _tds__GetNetworkProtocols operations:
/// - soap_new__tds__GetNetworkProtocols(soap*) allocate
/// - soap_new__tds__GetNetworkProtocols(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkProtocols(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkProtocols(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocols(soap, _tds__GetNetworkProtocols*) serialize to a stream
class _tds__GetNetworkProtocols
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
/// class _tds__GetNetworkProtocolsResponse operations:
/// - soap_new__tds__GetNetworkProtocolsResponse(soap*) allocate
/// - soap_new__tds__GetNetworkProtocolsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocolsResponse(soap, _tds__GetNetworkProtocolsResponse*) serialize to a stream
class _tds__GetNetworkProtocolsResponse
{ public:
/// @brief Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// Vector of tt__NetworkProtocol* with length 0..unbounded
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
/// class _tds__SetNetworkProtocols operations:
/// - soap_new__tds__SetNetworkProtocols(soap*) allocate
/// - soap_new__tds__SetNetworkProtocols(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkProtocols(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkProtocols(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocols(soap, _tds__SetNetworkProtocols*) serialize to a stream
class _tds__SetNetworkProtocols
{ public:
/// @brief Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// Vector of tt__NetworkProtocol* with length 1..unbounded
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
/// class _tds__SetNetworkProtocolsResponse operations:
/// - soap_new__tds__SetNetworkProtocolsResponse(soap*) allocate
/// - soap_new__tds__SetNetworkProtocolsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocolsResponse(soap, _tds__SetNetworkProtocolsResponse*) serialize to a stream
class _tds__SetNetworkProtocolsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
/// class _tds__GetNetworkDefaultGateway operations:
/// - soap_new__tds__GetNetworkDefaultGateway(soap*) allocate
/// - soap_new__tds__GetNetworkDefaultGateway(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGateway(soap, _tds__GetNetworkDefaultGateway*) serialize to a stream
class _tds__GetNetworkDefaultGateway
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
/// class _tds__GetNetworkDefaultGatewayResponse operations:
/// - soap_new__tds__GetNetworkDefaultGatewayResponse(soap*) allocate
/// - soap_new__tds__GetNetworkDefaultGatewayResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(soap, _tds__GetNetworkDefaultGatewayResponse*) serialize to a stream
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// @brief Gets the default IPv4 and IPv6 gateway settings from the device.
/// Element NetworkGateway of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    tt__NetworkGateway*                  NetworkGateway                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
/// class _tds__SetNetworkDefaultGateway operations:
/// - soap_new__tds__SetNetworkDefaultGateway(soap*) allocate
/// - soap_new__tds__SetNetworkDefaultGateway(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGateway(soap, _tds__SetNetworkDefaultGateway*) serialize to a stream
class _tds__SetNetworkDefaultGateway
{ public:
/// @brief Sets IPv4 gateway address used as default setting.
/// Vector of tt__IPv4Address with length 0..unbounded
    std::vector<tt__IPv4Address        > IPv4Address                    0;
/// @brief Sets IPv6 gateway address used as default setting.
/// Vector of tt__IPv6Address with length 0..unbounded
    std::vector<tt__IPv6Address        > IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
/// class _tds__SetNetworkDefaultGatewayResponse operations:
/// - soap_new__tds__SetNetworkDefaultGatewayResponse(soap*) allocate
/// - soap_new__tds__SetNetworkDefaultGatewayResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(soap, _tds__SetNetworkDefaultGatewayResponse*) serialize to a stream
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
/// class _tds__GetZeroConfiguration operations:
/// - soap_new__tds__GetZeroConfiguration(soap*) allocate
/// - soap_new__tds__GetZeroConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__GetZeroConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetZeroConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfiguration(soap, _tds__GetZeroConfiguration*) serialize to a stream
class _tds__GetZeroConfiguration
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
/// class _tds__GetZeroConfigurationResponse operations:
/// - soap_new__tds__GetZeroConfigurationResponse(soap*) allocate
/// - soap_new__tds__GetZeroConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfigurationResponse(soap, _tds__GetZeroConfigurationResponse*) serialize to a stream
class _tds__GetZeroConfigurationResponse
{ public:
/// @brief Contains the zero-configuration.
/// Element ZeroConfiguration of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    tt__NetworkZeroConfiguration*        ZeroConfiguration              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
/// class _tds__SetZeroConfiguration operations:
/// - soap_new__tds__SetZeroConfiguration(soap*) allocate
/// - soap_new__tds__SetZeroConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__SetZeroConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetZeroConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfiguration(soap, _tds__SetZeroConfiguration*) serialize to a stream
class _tds__SetZeroConfiguration
{ public:
/// @brief Unique identifier referencing the physical interface.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// @brief Specifies if the zero-configuration should be enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
/// class _tds__SetZeroConfigurationResponse operations:
/// - soap_new__tds__SetZeroConfigurationResponse(soap*) allocate
/// - soap_new__tds__SetZeroConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfigurationResponse(soap, _tds__SetZeroConfigurationResponse*) serialize to a stream
class _tds__SetZeroConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
/// class _tds__GetIPAddressFilter operations:
/// - soap_new__tds__GetIPAddressFilter(soap*) allocate
/// - soap_new__tds__GetIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__GetIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilter(soap, _tds__GetIPAddressFilter*) serialize to a stream
class _tds__GetIPAddressFilter
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
/// class _tds__GetIPAddressFilterResponse operations:
/// - soap_new__tds__GetIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__GetIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilterResponse(soap, _tds__GetIPAddressFilterResponse*) serialize to a stream
class _tds__GetIPAddressFilterResponse
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
/// class _tds__SetIPAddressFilter operations:
/// - soap_new__tds__SetIPAddressFilter(soap*) allocate
/// - soap_new__tds__SetIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__SetIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilter(soap, _tds__SetIPAddressFilter*) serialize to a stream
class _tds__SetIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
/// class _tds__SetIPAddressFilterResponse operations:
/// - soap_new__tds__SetIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__SetIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilterResponse(soap, _tds__SetIPAddressFilterResponse*) serialize to a stream
class _tds__SetIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
/// class _tds__AddIPAddressFilter operations:
/// - soap_new__tds__AddIPAddressFilter(soap*) allocate
/// - soap_new__tds__AddIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__AddIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilter(soap, _tds__AddIPAddressFilter*) serialize to a stream
class _tds__AddIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
/// class _tds__AddIPAddressFilterResponse operations:
/// - soap_new__tds__AddIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__AddIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilterResponse(soap, _tds__AddIPAddressFilterResponse*) serialize to a stream
class _tds__AddIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
/// class _tds__RemoveIPAddressFilter operations:
/// - soap_new__tds__RemoveIPAddressFilter(soap*) allocate
/// - soap_new__tds__RemoveIPAddressFilter(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveIPAddressFilter(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveIPAddressFilter(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilter(soap, _tds__RemoveIPAddressFilter*) serialize to a stream
class _tds__RemoveIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
/// class _tds__RemoveIPAddressFilterResponse operations:
/// - soap_new__tds__RemoveIPAddressFilterResponse(soap*) allocate
/// - soap_new__tds__RemoveIPAddressFilterResponse(soap*, int num) allocate array
/// - soap_new_req__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilterResponse(soap, _tds__RemoveIPAddressFilterResponse*) serialize to a stream
class _tds__RemoveIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy

/// "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
/// class _tds__GetAccessPolicy operations:
/// - soap_new__tds__GetAccessPolicy(soap*) allocate
/// - soap_new__tds__GetAccessPolicy(soap*, int num) allocate array
/// - soap_new_req__tds__GetAccessPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetAccessPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicy(soap, _tds__GetAccessPolicy*) serialize to a stream
class _tds__GetAccessPolicy
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
/// class _tds__GetAccessPolicyResponse operations:
/// - soap_new__tds__GetAccessPolicyResponse(soap*) allocate
/// - soap_new__tds__GetAccessPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicyResponse(soap, _tds__GetAccessPolicyResponse*) serialize to a stream
class _tds__GetAccessPolicyResponse
{ public:
/// Element PolicyFile of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy

/// "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
/// class _tds__SetAccessPolicy operations:
/// - soap_new__tds__SetAccessPolicy(soap*) allocate
/// - soap_new__tds__SetAccessPolicy(soap*, int num) allocate array
/// - soap_new_req__tds__SetAccessPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetAccessPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicy(soap, _tds__SetAccessPolicy*) serialize to a stream
class _tds__SetAccessPolicy
{ public:
/// Element PolicyFile of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
/// class _tds__SetAccessPolicyResponse operations:
/// - soap_new__tds__SetAccessPolicyResponse(soap*) allocate
/// - soap_new__tds__SetAccessPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicyResponse(soap, _tds__SetAccessPolicyResponse*) serialize to a stream
class _tds__SetAccessPolicyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate

/// "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
/// class _tds__CreateCertificate operations:
/// - soap_new__tds__CreateCertificate(soap*) allocate
/// - soap_new__tds__CreateCertificate(soap*, int num) allocate array
/// - soap_new_req__tds__CreateCertificate(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateCertificate(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateCertificate(soap*, _tds__CreateCertificate*) deserialize from a stream
/// - int soap_write__tds__CreateCertificate(soap, _tds__CreateCertificate*) serialize to a stream
class _tds__CreateCertificate
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// @brief Identification of the entity associated with the public-key.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// @brief Certificate validity start date.
/// Element ValidNotBefore of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// @brief Certificate expiry start date.
/// Element ValidNotAfter of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
/// class _tds__CreateCertificateResponse operations:
/// - soap_new__tds__CreateCertificateResponse(soap*) allocate
/// - soap_new__tds__CreateCertificateResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateCertificateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateCertificateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) deserialize from a stream
/// - int soap_write__tds__CreateCertificateResponse(soap, _tds__CreateCertificateResponse*) serialize to a stream
class _tds__CreateCertificateResponse
{ public:
/// @brief base64 encoded DER representation of certificate.
/// Element NvtCertificate of type "http://www.onvif.org/ver10/schema":Certificate.
    tt__Certificate*                     NvtCertificate                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
/// class _tds__GetCertificates operations:
/// - soap_new__tds__GetCertificates(soap*) allocate
/// - soap_new__tds__GetCertificates(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificates(soap*, _tds__GetCertificates*) deserialize from a stream
/// - int soap_write__tds__GetCertificates(soap, _tds__GetCertificates*) serialize to a stream
class _tds__GetCertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
/// class _tds__GetCertificatesResponse operations:
/// - soap_new__tds__GetCertificatesResponse(soap*) allocate
/// - soap_new__tds__GetCertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesResponse(soap, _tds__GetCertificatesResponse*) serialize to a stream
class _tds__GetCertificatesResponse
{ public:
/// @brief Id and base64 encoded DER representation of all available certificates.
/// Vector of tt__Certificate* with length 0..unbounded
    std::vector<tt__Certificate*       > NvtCertificate                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
/// class _tds__GetCertificatesStatus operations:
/// - soap_new__tds__GetCertificatesStatus(soap*) allocate
/// - soap_new__tds__GetCertificatesStatus(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificatesStatus(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificatesStatus(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatus(soap, _tds__GetCertificatesStatus*) serialize to a stream
class _tds__GetCertificatesStatus
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
/// class _tds__GetCertificatesStatusResponse operations:
/// - soap_new__tds__GetCertificatesStatusResponse(soap*) allocate
/// - soap_new__tds__GetCertificatesStatusResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatusResponse(soap, _tds__GetCertificatesStatusResponse*) serialize to a stream
class _tds__GetCertificatesStatusResponse
{ public:
/// @brief Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// Vector of tt__CertificateStatus* with length 0..unbounded
    std::vector<tt__CertificateStatus* > CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus

/// "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
/// class _tds__SetCertificatesStatus operations:
/// - soap_new__tds__SetCertificatesStatus(soap*) allocate
/// - soap_new__tds__SetCertificatesStatus(soap*, int num) allocate array
/// - soap_new_req__tds__SetCertificatesStatus(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetCertificatesStatus(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatus(soap, _tds__SetCertificatesStatus*) serialize to a stream
class _tds__SetCertificatesStatus
{ public:
/// @brief Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// Vector of tt__CertificateStatus* with length 0..unbounded
    std::vector<tt__CertificateStatus* > CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
/// class _tds__SetCertificatesStatusResponse operations:
/// - soap_new__tds__SetCertificatesStatusResponse(soap*) allocate
/// - soap_new__tds__SetCertificatesStatusResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatusResponse(soap, _tds__SetCertificatesStatusResponse*) serialize to a stream
class _tds__SetCertificatesStatusResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates

/// "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
/// class _tds__DeleteCertificates operations:
/// - soap_new__tds__DeleteCertificates(soap*) allocate
/// - soap_new__tds__DeleteCertificates(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteCertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteCertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificates(soap, _tds__DeleteCertificates*) serialize to a stream
class _tds__DeleteCertificates
{ public:
/// @brief List of ids of certificates to delete.
/// Vector of xsd__token with length 1..unbounded
    std::vector<xsd__token             > CertificateID                  1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
/// class _tds__DeleteCertificatesResponse operations:
/// - soap_new__tds__DeleteCertificatesResponse(soap*) allocate
/// - soap_new__tds__DeleteCertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteCertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteCertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificatesResponse(soap, _tds__DeleteCertificatesResponse*) serialize to a stream
class _tds__DeleteCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request

/// "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
/// class _tds__GetPkcs10Request operations:
/// - soap_new__tds__GetPkcs10Request(soap*) allocate
/// - soap_new__tds__GetPkcs10Request(soap*, int num) allocate array
/// - soap_new_req__tds__GetPkcs10Request(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetPkcs10Request(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10Request(soap, _tds__GetPkcs10Request*) serialize to a stream
class _tds__GetPkcs10Request
{ public:
/// @brief List of ids of certificates to delete.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief Relative Dinstinguished Name(RDN) CommonName(CN).
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// @brief Optional base64 encoded DER attributes.
/// Element Attributes of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Attributes                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
/// class _tds__GetPkcs10RequestResponse operations:
/// - soap_new__tds__GetPkcs10RequestResponse(soap*) allocate
/// - soap_new__tds__GetPkcs10RequestResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10RequestResponse(soap, _tds__GetPkcs10RequestResponse*) serialize to a stream
class _tds__GetPkcs10RequestResponse
{ public:
/// @brief base64 encoded DER representation of certificate.
/// Element Pkcs10Request of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Pkcs10Request                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
/// class _tds__LoadCertificates operations:
/// - soap_new__tds__LoadCertificates(soap*) allocate
/// - soap_new__tds__LoadCertificates(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificates(soap*, _tds__LoadCertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCertificates(soap, _tds__LoadCertificates*) serialize to a stream
class _tds__LoadCertificates
{ public:
/// @brief Optional id and base64 encoded DER representation of certificate.
/// Vector of tt__Certificate* with length 1..unbounded
    std::vector<tt__Certificate*       > NVTCertificate                 1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
/// class _tds__LoadCertificatesResponse operations:
/// - soap_new__tds__LoadCertificatesResponse(soap*) allocate
/// - soap_new__tds__LoadCertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificatesResponse(soap, _tds__LoadCertificatesResponse*) serialize to a stream
class _tds__LoadCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode

/// "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
/// class _tds__GetClientCertificateMode operations:
/// - soap_new__tds__GetClientCertificateMode(soap*) allocate
/// - soap_new__tds__GetClientCertificateMode(soap*, int num) allocate array
/// - soap_new_req__tds__GetClientCertificateMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetClientCertificateMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateMode(soap, _tds__GetClientCertificateMode*) serialize to a stream
class _tds__GetClientCertificateMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
/// class _tds__GetClientCertificateModeResponse operations:
/// - soap_new__tds__GetClientCertificateModeResponse(soap*) allocate
/// - soap_new__tds__GetClientCertificateModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateModeResponse(soap, _tds__GetClientCertificateModeResponse*) serialize to a stream
class _tds__GetClientCertificateModeResponse
{ public:
/// @brief Indicates whether or not client certificates are required by device.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode

/// "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
/// class _tds__SetClientCertificateMode operations:
/// - soap_new__tds__SetClientCertificateMode(soap*) allocate
/// - soap_new__tds__SetClientCertificateMode(soap*, int num) allocate array
/// - soap_new_req__tds__SetClientCertificateMode(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetClientCertificateMode(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateMode(soap, _tds__SetClientCertificateMode*) serialize to a stream
class _tds__SetClientCertificateMode
{ public:
/// @brief Indicates whether or not client certificates are required by device.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
/// class _tds__SetClientCertificateModeResponse operations:
/// - soap_new__tds__SetClientCertificateModeResponse(soap*) allocate
/// - soap_new__tds__SetClientCertificateModeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateModeResponse(soap, _tds__SetClientCertificateModeResponse*) serialize to a stream
class _tds__SetClientCertificateModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates

/// "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
/// class _tds__GetCACertificates operations:
/// - soap_new__tds__GetCACertificates(soap*) allocate
/// - soap_new__tds__GetCACertificates(soap*, int num) allocate array
/// - soap_new_req__tds__GetCACertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCACertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCACertificates(soap*, _tds__GetCACertificates*) deserialize from a stream
/// - int soap_write__tds__GetCACertificates(soap, _tds__GetCACertificates*) serialize to a stream
class _tds__GetCACertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
/// class _tds__GetCACertificatesResponse operations:
/// - soap_new__tds__GetCACertificatesResponse(soap*) allocate
/// - soap_new__tds__GetCACertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCACertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCACertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCACertificatesResponse(soap, _tds__GetCACertificatesResponse*) serialize to a stream
class _tds__GetCACertificatesResponse
{ public:
/// Vector of tt__Certificate* with length 0..unbounded
    std::vector<tt__Certificate*       > CACertificate                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
/// class _tds__LoadCertificateWithPrivateKey operations:
/// - soap_new__tds__LoadCertificateWithPrivateKey(soap*) allocate
/// - soap_new__tds__LoadCertificateWithPrivateKey(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKey(soap, _tds__LoadCertificateWithPrivateKey*) serialize to a stream
class _tds__LoadCertificateWithPrivateKey
{ public:
/// Vector of tt__CertificateWithPrivateKey* with length 1..unbounded
    std::vector<tt__CertificateWithPrivateKey*> CertificateWithPrivateKey      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
/// class _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*) allocate
/// - soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a stream
class _tds__LoadCertificateWithPrivateKeyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
/// class _tds__GetCertificateInformation operations:
/// - soap_new__tds__GetCertificateInformation(soap*) allocate
/// - soap_new__tds__GetCertificateInformation(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificateInformation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificateInformation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformation(soap, _tds__GetCertificateInformation*) serialize to a stream
class _tds__GetCertificateInformation
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
/// class _tds__GetCertificateInformationResponse operations:
/// - soap_new__tds__GetCertificateInformationResponse(soap*) allocate
/// - soap_new__tds__GetCertificateInformationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetCertificateInformationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetCertificateInformationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformationResponse(soap, _tds__GetCertificateInformationResponse*) serialize to a stream
class _tds__GetCertificateInformationResponse
{ public:
/// Element CertificateInformation of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    tt__CertificateInformation*          CertificateInformation         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates

/// "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
/// class _tds__LoadCACertificates operations:
/// - soap_new__tds__LoadCACertificates(soap*) allocate
/// - soap_new__tds__LoadCACertificates(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCACertificates(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCACertificates(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificates(soap, _tds__LoadCACertificates*) serialize to a stream
class _tds__LoadCACertificates
{ public:
/// Vector of tt__Certificate* with length 1..unbounded
    std::vector<tt__Certificate*       > CACertificate                  1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
/// class _tds__LoadCACertificatesResponse operations:
/// - soap_new__tds__LoadCACertificatesResponse(soap*) allocate
/// - soap_new__tds__LoadCACertificatesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__LoadCACertificatesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__LoadCACertificatesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificatesResponse(soap, _tds__LoadCACertificatesResponse*) serialize to a stream
class _tds__LoadCACertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
/// class _tds__CreateDot1XConfiguration operations:
/// - soap_new__tds__CreateDot1XConfiguration(soap*) allocate
/// - soap_new__tds__CreateDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__CreateDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfiguration(soap, _tds__CreateDot1XConfiguration*) serialize to a stream
class _tds__CreateDot1XConfiguration
{ public:
/// Element Dot1XConfiguration of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
/// class _tds__CreateDot1XConfigurationResponse operations:
/// - soap_new__tds__CreateDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__CreateDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfigurationResponse(soap, _tds__CreateDot1XConfigurationResponse*) serialize to a stream
class _tds__CreateDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
/// class _tds__SetDot1XConfiguration operations:
/// - soap_new__tds__SetDot1XConfiguration(soap*) allocate
/// - soap_new__tds__SetDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__SetDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfiguration(soap, _tds__SetDot1XConfiguration*) serialize to a stream
class _tds__SetDot1XConfiguration
{ public:
/// Element Dot1XConfiguration of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
/// class _tds__SetDot1XConfigurationResponse operations:
/// - soap_new__tds__SetDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__SetDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfigurationResponse(soap, _tds__SetDot1XConfigurationResponse*) serialize to a stream
class _tds__SetDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
/// class _tds__GetDot1XConfiguration operations:
/// - soap_new__tds__GetDot1XConfiguration(soap*) allocate
/// - soap_new__tds__GetDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfiguration(soap, _tds__GetDot1XConfiguration*) serialize to a stream
class _tds__GetDot1XConfiguration
{ public:
/// Element Dot1XConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
/// class _tds__GetDot1XConfigurationResponse operations:
/// - soap_new__tds__GetDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__GetDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationResponse(soap, _tds__GetDot1XConfigurationResponse*) serialize to a stream
class _tds__GetDot1XConfigurationResponse
{ public:
/// Element Dot1XConfiguration of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
/// class _tds__GetDot1XConfigurations operations:
/// - soap_new__tds__GetDot1XConfigurations(soap*) allocate
/// - soap_new__tds__GetDot1XConfigurations(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurations(soap, _tds__GetDot1XConfigurations*) serialize to a stream
class _tds__GetDot1XConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
/// class _tds__GetDot1XConfigurationsResponse operations:
/// - soap_new__tds__GetDot1XConfigurationsResponse(soap*) allocate
/// - soap_new__tds__GetDot1XConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationsResponse(soap, _tds__GetDot1XConfigurationsResponse*) serialize to a stream
class _tds__GetDot1XConfigurationsResponse
{ public:
/// Vector of tt__Dot1XConfiguration* with length 0..unbounded
    std::vector<tt__Dot1XConfiguration*> Dot1XConfiguration             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
/// class _tds__DeleteDot1XConfiguration operations:
/// - soap_new__tds__DeleteDot1XConfiguration(soap*) allocate
/// - soap_new__tds__DeleteDot1XConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfiguration(soap, _tds__DeleteDot1XConfiguration*) serialize to a stream
class _tds__DeleteDot1XConfiguration
{ public:
/// Vector of tt__ReferenceToken with length 0..unbounded
    std::vector<tt__ReferenceToken     > Dot1XConfigurationToken        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
/// class _tds__DeleteDot1XConfigurationResponse operations:
/// - soap_new__tds__DeleteDot1XConfigurationResponse(soap*) allocate
/// - soap_new__tds__DeleteDot1XConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(soap, _tds__DeleteDot1XConfigurationResponse*) serialize to a stream
class _tds__DeleteDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs

/// "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
/// class _tds__GetRelayOutputs operations:
/// - soap_new__tds__GetRelayOutputs(soap*) allocate
/// - soap_new__tds__GetRelayOutputs(soap*, int num) allocate array
/// - soap_new_req__tds__GetRelayOutputs(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRelayOutputs(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputs(soap, _tds__GetRelayOutputs*) serialize to a stream
class _tds__GetRelayOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
/// class _tds__GetRelayOutputsResponse operations:
/// - soap_new__tds__GetRelayOutputsResponse(soap*) allocate
/// - soap_new__tds__GetRelayOutputsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetRelayOutputsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetRelayOutputsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputsResponse(soap, _tds__GetRelayOutputsResponse*) serialize to a stream
class _tds__GetRelayOutputsResponse
{ public:
/// Vector of tt__RelayOutput* with length 0..unbounded
    std::vector<tt__RelayOutput*       > RelayOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
/// class _tds__SetRelayOutputSettings operations:
/// - soap_new__tds__SetRelayOutputSettings(soap*) allocate
/// - soap_new__tds__SetRelayOutputSettings(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputSettings(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputSettings(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettings(soap, _tds__SetRelayOutputSettings*) serialize to a stream
class _tds__SetRelayOutputSettings
{ public:
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
/// class _tds__SetRelayOutputSettingsResponse operations:
/// - soap_new__tds__SetRelayOutputSettingsResponse(soap*) allocate
/// - soap_new__tds__SetRelayOutputSettingsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettingsResponse(soap, _tds__SetRelayOutputSettingsResponse*) serialize to a stream
class _tds__SetRelayOutputSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
/// class _tds__SetRelayOutputState operations:
/// - soap_new__tds__SetRelayOutputState(soap*) allocate
/// - soap_new__tds__SetRelayOutputState(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputState(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputState(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputState(soap, _tds__SetRelayOutputState*) serialize to a stream
class _tds__SetRelayOutputState
{ public:
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element LogicalState of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
/// class _tds__SetRelayOutputStateResponse operations:
/// - soap_new__tds__SetRelayOutputStateResponse(soap*) allocate
/// - soap_new__tds__SetRelayOutputStateResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputStateResponse(soap, _tds__SetRelayOutputStateResponse*) serialize to a stream
class _tds__SetRelayOutputStateResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand

/// "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
/// class _tds__SendAuxiliaryCommand operations:
/// - soap_new__tds__SendAuxiliaryCommand(soap*) allocate
/// - soap_new__tds__SendAuxiliaryCommand(soap*, int num) allocate array
/// - soap_new_req__tds__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommand(soap, _tds__SendAuxiliaryCommand*) serialize to a stream
class _tds__SendAuxiliaryCommand
{ public:
/// Element AuxiliaryCommand of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse

/// "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
/// class _tds__SendAuxiliaryCommandResponse operations:
/// - soap_new__tds__SendAuxiliaryCommandResponse(soap*) allocate
/// - soap_new__tds__SendAuxiliaryCommandResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommandResponse(soap, _tds__SendAuxiliaryCommandResponse*) serialize to a stream
class _tds__SendAuxiliaryCommandResponse
{ public:
/// Element AuxiliaryCommandResponse of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData*                   AuxiliaryCommandResponse       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
/// class _tds__GetDot11Capabilities operations:
/// - soap_new__tds__GetDot11Capabilities(soap*) allocate
/// - soap_new__tds__GetDot11Capabilities(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) deserialize from a stream
/// - int soap_write__tds__GetDot11Capabilities(soap, _tds__GetDot11Capabilities*) serialize to a stream
class _tds__GetDot11Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
/// class _tds__GetDot11CapabilitiesResponse operations:
/// - soap_new__tds__GetDot11CapabilitiesResponse(soap*) allocate
/// - soap_new__tds__GetDot11CapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11CapabilitiesResponse(soap, _tds__GetDot11CapabilitiesResponse*) serialize to a stream
class _tds__GetDot11CapabilitiesResponse
{ public:
/// Element Capabilities of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    tt__Dot11Capabilities*               Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
/// class _tds__GetDot11Status operations:
/// - soap_new__tds__GetDot11Status(soap*) allocate
/// - soap_new__tds__GetDot11Status(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11Status(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11Status(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11Status(soap*, _tds__GetDot11Status*) deserialize from a stream
/// - int soap_write__tds__GetDot11Status(soap, _tds__GetDot11Status*) serialize to a stream
class _tds__GetDot11Status
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
/// class _tds__GetDot11StatusResponse operations:
/// - soap_new__tds__GetDot11StatusResponse(soap*) allocate
/// - soap_new__tds__GetDot11StatusResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetDot11StatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetDot11StatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11StatusResponse(soap, _tds__GetDot11StatusResponse*) serialize to a stream
class _tds__GetDot11StatusResponse
{ public:
/// Element Status of type "http://www.onvif.org/ver10/schema":Dot11Status.
    tt__Dot11Status*                     Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks

/// "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
/// class _tds__ScanAvailableDot11Networks operations:
/// - soap_new__tds__ScanAvailableDot11Networks(soap*) allocate
/// - soap_new__tds__ScanAvailableDot11Networks(soap*, int num) allocate array
/// - soap_new_req__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set required members
/// - soap_new_set__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set all public members
/// - int soap_read__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11Networks(soap, _tds__ScanAvailableDot11Networks*) serialize to a stream
class _tds__ScanAvailableDot11Networks
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse

/// "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
/// class _tds__ScanAvailableDot11NetworksResponse operations:
/// - soap_new__tds__ScanAvailableDot11NetworksResponse(soap*) allocate
/// - soap_new__tds__ScanAvailableDot11NetworksResponse(soap*, int num) allocate array
/// - soap_new_req__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(soap, _tds__ScanAvailableDot11NetworksResponse*) serialize to a stream
class _tds__ScanAvailableDot11NetworksResponse
{ public:
/// Vector of tt__Dot11AvailableNetworks* with length 0..unbounded
    std::vector<tt__Dot11AvailableNetworks*> Networks                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
/// class _tds__GetSystemUris operations:
/// - soap_new__tds__GetSystemUris(soap*) allocate
/// - soap_new__tds__GetSystemUris(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemUris(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemUris(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemUris(soap*, _tds__GetSystemUris*) deserialize from a stream
/// - int soap_write__tds__GetSystemUris(soap, _tds__GetSystemUris*) serialize to a stream
class _tds__GetSystemUris
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
/// class _tds__GetSystemUrisResponse operations:
/// - soap_new__tds__GetSystemUrisResponse(soap*) allocate
/// - soap_new__tds__GetSystemUrisResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemUrisResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemUrisResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse(soap, _tds__GetSystemUrisResponse*) serialize to a stream
class _tds__GetSystemUrisResponse
{ public:
/// Element SystemLogUris of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    tt__SystemLogUriList*                SystemLogUris                  0;	///< Optional element.
/// Element SupportInfoUri of type xs:anyURI.
    xsd__anyURI*                         SupportInfoUri                 0;	///< Optional element.
/// Element SystemBackupUri of type xs:anyURI.
    xsd__anyURI*                         SystemBackupUri                0;	///< Optional element.
/// class _tds__GetSystemUrisResponse_Extension operations:
/// - soap_new__tds__GetSystemUrisResponse_Extension(soap*) allocate
/// - soap_new__tds__GetSystemUrisResponse_Extension(soap*, int num) allocate array
/// - soap_new_req__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse_Extension(soap, _tds__GetSystemUrisResponse_Extension*) serialize to a stream
    class _tds__GetSystemUrisResponse_Extension
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    }                                   *Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade

/// "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
/// class _tds__StartFirmwareUpgrade operations:
/// - soap_new__tds__StartFirmwareUpgrade(soap*) allocate
/// - soap_new__tds__StartFirmwareUpgrade(soap*, int num) allocate array
/// - soap_new_req__tds__StartFirmwareUpgrade(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartFirmwareUpgrade(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgrade(soap, _tds__StartFirmwareUpgrade*) serialize to a stream
class _tds__StartFirmwareUpgrade
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse

/// "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
/// class _tds__StartFirmwareUpgradeResponse operations:
/// - soap_new__tds__StartFirmwareUpgradeResponse(soap*) allocate
/// - soap_new__tds__StartFirmwareUpgradeResponse(soap*, int num) allocate array
/// - soap_new_req__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgradeResponse(soap, _tds__StartFirmwareUpgradeResponse*) serialize to a stream
class _tds__StartFirmwareUpgradeResponse
{ public:
/// Element UploadUri of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element UploadDelay of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element ExpectedDownTime of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore

/// "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
/// class _tds__StartSystemRestore operations:
/// - soap_new__tds__StartSystemRestore(soap*) allocate
/// - soap_new__tds__StartSystemRestore(soap*, int num) allocate array
/// - soap_new_req__tds__StartSystemRestore(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartSystemRestore(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestore(soap, _tds__StartSystemRestore*) serialize to a stream
class _tds__StartSystemRestore
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse

/// "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
/// class _tds__StartSystemRestoreResponse operations:
/// - soap_new__tds__StartSystemRestoreResponse(soap*) allocate
/// - soap_new__tds__StartSystemRestoreResponse(soap*, int num) allocate array
/// - soap_new_req__tds__StartSystemRestoreResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__StartSystemRestoreResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestoreResponse(soap, _tds__StartSystemRestoreResponse*) serialize to a stream
class _tds__StartSystemRestoreResponse
{ public:
/// Element UploadUri of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element ExpectedDownTime of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations

/// "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
/// class _tds__GetStorageConfigurations operations:
/// - soap_new__tds__GetStorageConfigurations(soap*) allocate
/// - soap_new__tds__GetStorageConfigurations(soap*, int num) allocate array
/// - soap_new_req__tds__GetStorageConfigurations(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetStorageConfigurations(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurations(soap, _tds__GetStorageConfigurations*) serialize to a stream
class _tds__GetStorageConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
/// class _tds__GetStorageConfigurationsResponse operations:
/// - soap_new__tds__GetStorageConfigurationsResponse(soap*) allocate
/// - soap_new__tds__GetStorageConfigurationsResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationsResponse(soap, _tds__GetStorageConfigurationsResponse*) serialize to a stream
class _tds__GetStorageConfigurationsResponse
{ public:
/// Vector of tds__StorageConfiguration* with length 0..unbounded
    std::vector<tds__StorageConfiguration*> StorageConfigurations          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
/// class _tds__CreateStorageConfiguration operations:
/// - soap_new__tds__CreateStorageConfiguration(soap*) allocate
/// - soap_new__tds__CreateStorageConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__CreateStorageConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateStorageConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfiguration(soap, _tds__CreateStorageConfiguration*) serialize to a stream
class _tds__CreateStorageConfiguration
{ public:
/// Element StorageConfiguration of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       StorageConfiguration           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
/// class _tds__CreateStorageConfigurationResponse operations:
/// - soap_new__tds__CreateStorageConfigurationResponse(soap*) allocate
/// - soap_new__tds__CreateStorageConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfigurationResponse(soap, _tds__CreateStorageConfigurationResponse*) serialize to a stream
class _tds__CreateStorageConfigurationResponse
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
/// class _tds__GetStorageConfiguration operations:
/// - soap_new__tds__GetStorageConfiguration(soap*) allocate
/// - soap_new__tds__GetStorageConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__GetStorageConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetStorageConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfiguration(soap, _tds__GetStorageConfiguration*) serialize to a stream
class _tds__GetStorageConfiguration
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
/// class _tds__GetStorageConfigurationResponse operations:
/// - soap_new__tds__GetStorageConfigurationResponse(soap*) allocate
/// - soap_new__tds__GetStorageConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationResponse(soap, _tds__GetStorageConfigurationResponse*) serialize to a stream
class _tds__GetStorageConfigurationResponse
{ public:
/// Element StorageConfiguration of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
/// class _tds__SetStorageConfiguration operations:
/// - soap_new__tds__SetStorageConfiguration(soap*) allocate
/// - soap_new__tds__SetStorageConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__SetStorageConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetStorageConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfiguration(soap, _tds__SetStorageConfiguration*) serialize to a stream
class _tds__SetStorageConfiguration
{ public:
/// Element StorageConfiguration of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
/// class _tds__SetStorageConfigurationResponse operations:
/// - soap_new__tds__SetStorageConfigurationResponse(soap*) allocate
/// - soap_new__tds__SetStorageConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfigurationResponse(soap, _tds__SetStorageConfigurationResponse*) serialize to a stream
class _tds__SetStorageConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
/// class _tds__DeleteStorageConfiguration operations:
/// - soap_new__tds__DeleteStorageConfiguration(soap*) allocate
/// - soap_new__tds__DeleteStorageConfiguration(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteStorageConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteStorageConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfiguration(soap, _tds__DeleteStorageConfiguration*) serialize to a stream
class _tds__DeleteStorageConfiguration
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
/// class _tds__DeleteStorageConfigurationResponse operations:
/// - soap_new__tds__DeleteStorageConfigurationResponse(soap*) allocate
/// - soap_new__tds__DeleteStorageConfigurationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfigurationResponse(soap, _tds__DeleteStorageConfigurationResponse*) serialize to a stream
class _tds__DeleteStorageConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation

/// "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
/// class _tds__GetGeoLocation operations:
/// - soap_new__tds__GetGeoLocation(soap*) allocate
/// - soap_new__tds__GetGeoLocation(soap*, int num) allocate array
/// - soap_new_req__tds__GetGeoLocation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetGeoLocation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocation(soap, _tds__GetGeoLocation*) serialize to a stream
class _tds__GetGeoLocation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
/// class _tds__GetGeoLocationResponse operations:
/// - soap_new__tds__GetGeoLocationResponse(soap*) allocate
/// - soap_new__tds__GetGeoLocationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__GetGeoLocationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__GetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocationResponse(soap, _tds__GetGeoLocationResponse*) serialize to a stream
class _tds__GetGeoLocationResponse
{ public:
/// Vector of tt__LocationEntity* with length 0..unbounded
    std::vector<tt__LocationEntity*    > Location                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation

/// "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
/// class _tds__SetGeoLocation operations:
/// - soap_new__tds__SetGeoLocation(soap*) allocate
/// - soap_new__tds__SetGeoLocation(soap*, int num) allocate array
/// - soap_new_req__tds__SetGeoLocation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetGeoLocation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocation(soap, _tds__SetGeoLocation*) serialize to a stream
class _tds__SetGeoLocation
{ public:
/// Vector of tt__LocationEntity* with length 1..unbounded
    std::vector<tt__LocationEntity*    > Location                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
/// class _tds__SetGeoLocationResponse operations:
/// - soap_new__tds__SetGeoLocationResponse(soap*) allocate
/// - soap_new__tds__SetGeoLocationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__SetGeoLocationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__SetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocationResponse(soap, _tds__SetGeoLocationResponse*) serialize to a stream
class _tds__SetGeoLocationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation

/// "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
/// class _tds__DeleteGeoLocation operations:
/// - soap_new__tds__DeleteGeoLocation(soap*) allocate
/// - soap_new__tds__DeleteGeoLocation(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteGeoLocation(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteGeoLocation(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocation(soap, _tds__DeleteGeoLocation*) serialize to a stream
class _tds__DeleteGeoLocation
{ public:
/// Vector of tt__LocationEntity* with length 1..unbounded
    std::vector<tt__LocationEntity*    > Location                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
/// class _tds__DeleteGeoLocationResponse operations:
/// - soap_new__tds__DeleteGeoLocationResponse(soap*) allocate
/// - soap_new__tds__DeleteGeoLocationResponse(soap*, int num) allocate array
/// - soap_new_req__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocationResponse(soap, _tds__DeleteGeoLocationResponse*) serialize to a stream
class _tds__DeleteGeoLocationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver20/imaging/wsdl":Capabilities is a complexType.
/// class timg__Capabilities operations:
/// - soap_new_timg__Capabilities(soap*) allocate
/// - soap_new_timg__Capabilities(soap*, int num) allocate array
/// - soap_new_req_timg__Capabilities(soap*, ...) allocate, set required members
/// - soap_new_set_timg__Capabilities(soap*, ...) allocate, set all public members
/// - int soap_read_timg__Capabilities(soap*, timg__Capabilities*) deserialize from a stream
/// - int soap_write_timg__Capabilities(soap, timg__Capabilities*) serialize to a stream
class timg__Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicates whether or not Image Stabilization feature is supported. The use of this capability is deprecated, a client should use GetOption to find out if image stabilization is supported.
/// Attribute ImageStabilization of type xs:boolean.
   @bool*                                ImageStabilization             0;	///< Optional attribute.
/// @brief Indicates whether or not Imaging Presets feature is supported.
/// Attribute Presets of type xs:boolean.
   @bool*                                Presets                        0;	///< Optional attribute.
/// @brief Indicates whether or not imaging preset settings can be updated.
/// Attribute AdaptablePreset of type xs:boolean.
   @bool*                                AdaptablePreset                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver20/imaging/wsdl":ImagingPreset is a complexType.
/// @brief Type describing the Imaging Preset settings.
/// class timg__ImagingPreset operations:
/// - soap_new_timg__ImagingPreset(soap*) allocate
/// - soap_new_timg__ImagingPreset(soap*, int num) allocate array
/// - soap_new_req_timg__ImagingPreset(soap*, ...) allocate, set required members
/// - soap_new_set_timg__ImagingPreset(soap*, ...) allocate, set all public members
/// - int soap_read_timg__ImagingPreset(soap*, timg__ImagingPreset*) deserialize from a stream
/// - int soap_write_timg__ImagingPreset(soap, timg__ImagingPreset*) serialize to a stream
class timg__ImagingPreset
{ public:
/// @brief Human readable name of the Imaging Preset.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Unique identifier of this Imaging Preset.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
/// @brief Indicates Imaging Preset Type. Use timg:ImagingPresetType. Used for multi-language support and display.
/// Attribute type of type xs:string.
   @std::string                          type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities is a complexType.
/// class _timg__GetServiceCapabilities operations:
/// - soap_new__timg__GetServiceCapabilities(soap*) allocate
/// - soap_new__timg__GetServiceCapabilities(soap*, int num) allocate array
/// - soap_new_req__timg__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetServiceCapabilities(soap*, _timg__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__timg__GetServiceCapabilities(soap, _timg__GetServiceCapabilities*) serialize to a stream
class _timg__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse is a complexType.
/// class _timg__GetServiceCapabilitiesResponse operations:
/// - soap_new__timg__GetServiceCapabilitiesResponse(soap*) allocate
/// - soap_new__timg__GetServiceCapabilitiesResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetServiceCapabilitiesResponse(soap*, _timg__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__timg__GetServiceCapabilitiesResponse(soap, _timg__GetServiceCapabilitiesResponse*) serialize to a stream
class _timg__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the imaging service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
    timg__Capabilities*                  Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings

/// "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings is a complexType.
/// class _timg__GetImagingSettings operations:
/// - soap_new__timg__GetImagingSettings(soap*) allocate
/// - soap_new__timg__GetImagingSettings(soap*, int num) allocate array
/// - soap_new_req__timg__GetImagingSettings(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetImagingSettings(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetImagingSettings(soap*, _timg__GetImagingSettings*) deserialize from a stream
/// - int soap_write__timg__GetImagingSettings(soap, _timg__GetImagingSettings*) serialize to a stream
class _timg__GetImagingSettings
{ public:
/// @brief Reference token to the VideoSource for which the ImagingSettings.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse is a complexType.
/// class _timg__GetImagingSettingsResponse operations:
/// - soap_new__timg__GetImagingSettingsResponse(soap*) allocate
/// - soap_new__timg__GetImagingSettingsResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetImagingSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetImagingSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetImagingSettingsResponse(soap*, _timg__GetImagingSettingsResponse*) deserialize from a stream
/// - int soap_write__timg__GetImagingSettingsResponse(soap, _timg__GetImagingSettingsResponse*) serialize to a stream
class _timg__GetImagingSettingsResponse
{ public:
/// @brief ImagingSettings for the VideoSource that was requested.
/// Element ImagingSettings of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               ImagingSettings                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings

/// "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings is a complexType.
/// class _timg__SetImagingSettings operations:
/// - soap_new__timg__SetImagingSettings(soap*) allocate
/// - soap_new__timg__SetImagingSettings(soap*, int num) allocate array
/// - soap_new_req__timg__SetImagingSettings(soap*, ...) allocate, set required members
/// - soap_new_set__timg__SetImagingSettings(soap*, ...) allocate, set all public members
/// - int soap_read__timg__SetImagingSettings(soap*, _timg__SetImagingSettings*) deserialize from a stream
/// - int soap_write__timg__SetImagingSettings(soap, _timg__SetImagingSettings*) serialize to a stream
class _timg__SetImagingSettings
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Element ImagingSettings of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               ImagingSettings                1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool*                                ForcePersistence               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse is a complexType.
/// class _timg__SetImagingSettingsResponse operations:
/// - soap_new__timg__SetImagingSettingsResponse(soap*) allocate
/// - soap_new__timg__SetImagingSettingsResponse(soap*, int num) allocate array
/// - soap_new_req__timg__SetImagingSettingsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__SetImagingSettingsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__SetImagingSettingsResponse(soap*, _timg__SetImagingSettingsResponse*) deserialize from a stream
/// - int soap_write__timg__SetImagingSettingsResponse(soap, _timg__SetImagingSettingsResponse*) serialize to a stream
class _timg__SetImagingSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptions

/// "http://www.onvif.org/ver20/imaging/wsdl":GetOptions is a complexType.
/// class _timg__GetOptions operations:
/// - soap_new__timg__GetOptions(soap*) allocate
/// - soap_new__timg__GetOptions(soap*, int num) allocate array
/// - soap_new_req__timg__GetOptions(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetOptions(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetOptions(soap*, _timg__GetOptions*) deserialize from a stream
/// - int soap_write__timg__GetOptions(soap, _timg__GetOptions*) serialize to a stream
class _timg__GetOptions
{ public:
/// @brief Reference token to the VideoSource for which the imaging parameter options are requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse is a complexType.
/// class _timg__GetOptionsResponse operations:
/// - soap_new__timg__GetOptionsResponse(soap*) allocate
/// - soap_new__timg__GetOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetOptionsResponse(soap*, _timg__GetOptionsResponse*) deserialize from a stream
/// - int soap_write__timg__GetOptionsResponse(soap, _timg__GetOptionsResponse*) serialize to a stream
class _timg__GetOptionsResponse
{ public:
/// @brief Valid ranges for the imaging parameters that are categorized as device specific.
/// Element ImagingOptions of type "http://www.onvif.org/ver10/schema":ImagingOptions20.
    tt__ImagingOptions20*                ImagingOptions                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Move

/// "http://www.onvif.org/ver20/imaging/wsdl":Move is a complexType.
/// class _timg__Move operations:
/// - soap_new__timg__Move(soap*) allocate
/// - soap_new__timg__Move(soap*, int num) allocate array
/// - soap_new_req__timg__Move(soap*, ...) allocate, set required members
/// - soap_new_set__timg__Move(soap*, ...) allocate, set all public members
/// - int soap_read__timg__Move(soap*, _timg__Move*) deserialize from a stream
/// - int soap_write__timg__Move(soap, _timg__Move*) serialize to a stream
class _timg__Move
{ public:
/// @brief Reference to the VideoSource for the requested move (focus) operation.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// @brief Content of the requested move (focus) operation.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusMove.
    tt__FocusMove*                       Focus                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse is a complexType.
/// class _timg__MoveResponse operations:
/// - soap_new__timg__MoveResponse(soap*) allocate
/// - soap_new__timg__MoveResponse(soap*, int num) allocate array
/// - soap_new_req__timg__MoveResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__MoveResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__MoveResponse(soap*, _timg__MoveResponse*) deserialize from a stream
/// - int soap_write__timg__MoveResponse(soap, _timg__MoveResponse*) serialize to a stream
class _timg__MoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions

/// "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions is a complexType.
/// class _timg__GetMoveOptions operations:
/// - soap_new__timg__GetMoveOptions(soap*) allocate
/// - soap_new__timg__GetMoveOptions(soap*, int num) allocate array
/// - soap_new_req__timg__GetMoveOptions(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetMoveOptions(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetMoveOptions(soap*, _timg__GetMoveOptions*) deserialize from a stream
/// - int soap_write__timg__GetMoveOptions(soap, _timg__GetMoveOptions*) serialize to a stream
class _timg__GetMoveOptions
{ public:
/// @brief Reference token to the VideoSource for the requested move options.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse is a complexType.
/// class _timg__GetMoveOptionsResponse operations:
/// - soap_new__timg__GetMoveOptionsResponse(soap*) allocate
/// - soap_new__timg__GetMoveOptionsResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetMoveOptionsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetMoveOptionsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetMoveOptionsResponse(soap*, _timg__GetMoveOptionsResponse*) deserialize from a stream
/// - int soap_write__timg__GetMoveOptionsResponse(soap, _timg__GetMoveOptionsResponse*) serialize to a stream
class _timg__GetMoveOptionsResponse
{ public:
/// @brief Valid ranges for the focus lens move options.
/// Element MoveOptions of type "http://www.onvif.org/ver10/schema":MoveOptions20.
    tt__MoveOptions20*                   MoveOptions                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Stop

/// "http://www.onvif.org/ver20/imaging/wsdl":Stop is a complexType.
/// class _timg__Stop operations:
/// - soap_new__timg__Stop(soap*) allocate
/// - soap_new__timg__Stop(soap*, int num) allocate array
/// - soap_new_req__timg__Stop(soap*, ...) allocate, set required members
/// - soap_new_set__timg__Stop(soap*, ...) allocate, set all public members
/// - int soap_read__timg__Stop(soap*, _timg__Stop*) deserialize from a stream
/// - int soap_write__timg__Stop(soap, _timg__Stop*) serialize to a stream
class _timg__Stop
{ public:
/// @brief Reference token to the VideoSource where the focus movement should be stopped.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":StopResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":StopResponse is a complexType.
/// class _timg__StopResponse operations:
/// - soap_new__timg__StopResponse(soap*) allocate
/// - soap_new__timg__StopResponse(soap*, int num) allocate array
/// - soap_new_req__timg__StopResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__StopResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__StopResponse(soap*, _timg__StopResponse*) deserialize from a stream
/// - int soap_write__timg__StopResponse(soap, _timg__StopResponse*) serialize to a stream
class _timg__StopResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatus

/// "http://www.onvif.org/ver20/imaging/wsdl":GetStatus is a complexType.
/// class _timg__GetStatus operations:
/// - soap_new__timg__GetStatus(soap*) allocate
/// - soap_new__timg__GetStatus(soap*, int num) allocate array
/// - soap_new_req__timg__GetStatus(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetStatus(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetStatus(soap*, _timg__GetStatus*) deserialize from a stream
/// - int soap_write__timg__GetStatus(soap, _timg__GetStatus*) serialize to a stream
class _timg__GetStatus
{ public:
/// @brief Reference token to the VideoSource where the imaging status should be requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse is a complexType.
/// class _timg__GetStatusResponse operations:
/// - soap_new__timg__GetStatusResponse(soap*) allocate
/// - soap_new__timg__GetStatusResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetStatusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetStatusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetStatusResponse(soap*, _timg__GetStatusResponse*) deserialize from a stream
/// - int soap_write__timg__GetStatusResponse(soap, _timg__GetStatusResponse*) serialize to a stream
class _timg__GetStatusResponse
{ public:
/// @brief Requested imaging status.
/// Element Status of type "http://www.onvif.org/ver10/schema":ImagingStatus20.
    tt__ImagingStatus20*                 Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetPresets

/// "http://www.onvif.org/ver20/imaging/wsdl":GetPresets is a complexType.
/// class _timg__GetPresets operations:
/// - soap_new__timg__GetPresets(soap*) allocate
/// - soap_new__timg__GetPresets(soap*, int num) allocate array
/// - soap_new_req__timg__GetPresets(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetPresets(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetPresets(soap*, _timg__GetPresets*) deserialize from a stream
/// - int soap_write__timg__GetPresets(soap, _timg__GetPresets*) serialize to a stream
class _timg__GetPresets
{ public:
/// @brief A reference to the VideoSource where the operation should take place.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetPresetsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetPresetsResponse is a complexType.
/// class _timg__GetPresetsResponse operations:
/// - soap_new__timg__GetPresetsResponse(soap*) allocate
/// - soap_new__timg__GetPresetsResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetPresetsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetPresetsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetPresetsResponse(soap*, _timg__GetPresetsResponse*) deserialize from a stream
/// - int soap_write__timg__GetPresetsResponse(soap, _timg__GetPresetsResponse*) serialize to a stream
class _timg__GetPresetsResponse
{ public:
/// @brief List of Imaging Presets which are available for the requested VideoSource.
/// Vector of timg__ImagingPreset* with length 1..unbounded
    std::vector<timg__ImagingPreset*   > Preset                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPreset

/// "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPreset is a complexType.
/// class _timg__GetCurrentPreset operations:
/// - soap_new__timg__GetCurrentPreset(soap*) allocate
/// - soap_new__timg__GetCurrentPreset(soap*, int num) allocate array
/// - soap_new_req__timg__GetCurrentPreset(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetCurrentPreset(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetCurrentPreset(soap*, _timg__GetCurrentPreset*) deserialize from a stream
/// - int soap_write__timg__GetCurrentPreset(soap, _timg__GetCurrentPreset*) serialize to a stream
class _timg__GetCurrentPreset
{ public:
/// @brief Reference token to the VideoSource where the current Imaging Preset should be requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPresetResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPresetResponse is a complexType.
/// class _timg__GetCurrentPresetResponse operations:
/// - soap_new__timg__GetCurrentPresetResponse(soap*) allocate
/// - soap_new__timg__GetCurrentPresetResponse(soap*, int num) allocate array
/// - soap_new_req__timg__GetCurrentPresetResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__GetCurrentPresetResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__GetCurrentPresetResponse(soap*, _timg__GetCurrentPresetResponse*) deserialize from a stream
/// - int soap_write__timg__GetCurrentPresetResponse(soap, _timg__GetCurrentPresetResponse*) serialize to a stream
class _timg__GetCurrentPresetResponse
{ public:
/// @brief Current Imaging Preset in use for the specified Video Source.
/// Element Preset of type "http://www.onvif.org/ver20/imaging/wsdl":ImagingPreset.
    timg__ImagingPreset*                 Preset                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPreset

/// "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPreset is a complexType.
/// class _timg__SetCurrentPreset operations:
/// - soap_new__timg__SetCurrentPreset(soap*) allocate
/// - soap_new__timg__SetCurrentPreset(soap*, int num) allocate array
/// - soap_new_req__timg__SetCurrentPreset(soap*, ...) allocate, set required members
/// - soap_new_set__timg__SetCurrentPreset(soap*, ...) allocate, set all public members
/// - int soap_read__timg__SetCurrentPreset(soap*, _timg__SetCurrentPreset*) deserialize from a stream
/// - int soap_write__timg__SetCurrentPreset(soap, _timg__SetCurrentPreset*) serialize to a stream
class _timg__SetCurrentPreset
{ public:
/// @brief Reference token to the VideoSource to which the specified Imaging Preset should be applied.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// @brief Reference token to the Imaging Preset to be applied to the specified Video Source.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPresetResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPresetResponse is a complexType.
/// class _timg__SetCurrentPresetResponse operations:
/// - soap_new__timg__SetCurrentPresetResponse(soap*) allocate
/// - soap_new__timg__SetCurrentPresetResponse(soap*, int num) allocate array
/// - soap_new_req__timg__SetCurrentPresetResponse(soap*, ...) allocate, set required members
/// - soap_new_set__timg__SetCurrentPresetResponse(soap*, ...) allocate, set all public members
/// - int soap_read__timg__SetCurrentPresetResponse(soap*, _timg__SetCurrentPresetResponse*) deserialize from a stream
/// - int soap_write__timg__SetCurrentPresetResponse(soap, _timg__SetCurrentPresetResponse*) serialize to a stream
class _timg__SetCurrentPresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/pacs":DataEntity is a complexType.
/// @brief General datastructure referenced by a token. Should be used as extension base.
/// class ns1__DataEntity operations:
/// - soap_new_ns1__DataEntity(soap*) allocate
/// - soap_new_ns1__DataEntity(soap*, int num) allocate array
/// - soap_new_req_ns1__DataEntity(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__DataEntity(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__DataEntity(soap*, ns1__DataEntity*) deserialize from a stream
/// - int soap_write_ns1__DataEntity(soap, ns1__DataEntity*) serialize to a stream
class ns1__DataEntity
{ public:
/// @brief A service-unique identifier of the item.
/// Attribute token of type "http://www.onvif.org/ver10/pacs":ReferenceToken.
   @ns1__ReferenceToken                  token                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/pacs":Attribute is a complexType.
/// @brief Attributes contains a Name and an optional Value and type.
/// class ns1__Attribute operations:
/// - soap_new_ns1__Attribute(soap*) allocate
/// - soap_new_ns1__Attribute(soap*, int num) allocate array
/// - soap_new_req_ns1__Attribute(soap*, ...) allocate, set required members
/// - soap_new_set_ns1__Attribute(soap*, ...) allocate, set all public members
/// - int soap_read_ns1__Attribute(soap*, ns1__Attribute*) deserialize from a stream
/// - int soap_write_ns1__Attribute(soap, ns1__Attribute*) serialize to a stream
class ns1__Attribute
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Name of attribute. Key names starting with "ONVIF" (any case) are reserved for ONVIF use.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief Value of attribute
/// Attribute Value of type xs:string.
   @std::string*                         Value                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video input.
/// class tt__VideoSource operations:
/// - soap_new_tt__VideoSource(soap*) allocate
/// - soap_new_tt__VideoSource(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSource(soap*, tt__VideoSource*) deserialize from a stream
/// - int soap_write_tt__VideoSource(soap, tt__VideoSource*) serialize to a stream
class tt__VideoSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @brief Frame rate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @brief Horizontal and vertical resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// @brief Optional configuration of the image sensor.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    tt__ImagingSettings*                 Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    tt__VideoSourceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio input.
/// class tt__AudioSource operations:
/// - soap_new_tt__AudioSource(soap*) allocate
/// - soap_new_tt__AudioSource(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSource(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSource(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSource(soap*, tt__AudioSource*) deserialize from a stream
/// - int soap_write_tt__AudioSource(soap, tt__AudioSource*) serialize to a stream
class tt__AudioSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @brief number of available audio channels. (1: mono, 2: stereo)
/// Element Channels of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__VideoSourceConfiguration operations:
/// - soap_new_tt__VideoSourceConfiguration(soap*) allocate
/// - soap_new_tt__VideoSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfiguration(soap, tt__VideoSourceConfiguration*) serialize to a stream
class tt__VideoSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Reference to the physical input.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// @brief Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// Element Bounds of type "http://www.onvif.org/ver10/schema":IntRectangle.
    tt__IntRectangle*                    Bounds                         1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// @brief Readonly parameter signalling Source configuration's view mode, for devices supporting different view modes as defined in tt:viewModes.
/// Attribute ViewMode of type xs:string.
   @std::string*                         ViewMode                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__VideoEncoderConfiguration operations:
/// - soap_new_tt__VideoEncoderConfiguration(soap*) allocate
/// - soap_new_tt__VideoEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfiguration(soap, tt__VideoEncoderConfiguration*) serialize to a stream
class tt__VideoEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// @brief Configured video resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// @brief Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// Element Quality of type xs:float.
    float                                Quality                        1;	///< Required element.
/// @brief Optional element to configure rate control related parameters.
/// Element RateControl of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    tt__VideoRateControl*                RateControl                    0;	///< Optional element.
/// @brief Optional element to configure Mpeg4 related parameters.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    tt__Mpeg4Configuration*              MPEG4                          0;	///< Optional element.
/// @brief Optional element to configure H.264 related parameters.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Configuration.
    tt__H264Configuration*               H264                           0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related video stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief A value of true indicates that frame rate is a fixed value rather than an upper limit, and that the video encoder shall prioritize frame rate over all other adaptable configuration values such as bitrate. Default is false.
/// Attribute GuaranteedFrameRate of type xs:boolean.
   @bool*                                GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":JpegOptions.
/// class tt__JpegOptions2 operations:
/// - soap_new_tt__JpegOptions2(soap*) allocate
/// - soap_new_tt__JpegOptions2(soap*, int num) allocate array
/// - soap_new_req_tt__JpegOptions2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__JpegOptions2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__JpegOptions2(soap*, tt__JpegOptions2*) deserialize from a stream
/// - int soap_write_tt__JpegOptions2(soap, tt__JpegOptions2*) serialize to a stream
class tt__JpegOptions2 : public tt__JpegOptions
{ public:
/*  INHERITED FROM tt__JpegOptions:
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM tt__JpegOptions */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":Mpeg4Options.
/// class tt__Mpeg4Options2 operations:
/// - soap_new_tt__Mpeg4Options2(soap*) allocate
/// - soap_new_tt__Mpeg4Options2(soap*, int num) allocate array
/// - soap_new_req_tt__Mpeg4Options2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__Mpeg4Options2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options2(soap, tt__Mpeg4Options2*) serialize to a stream
class tt__Mpeg4Options2 : public tt__Mpeg4Options
{ public:
/*  INHERITED FROM tt__Mpeg4Options:
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Vector of enum tt__Mpeg4Profile with length 1..unbounded
    std::vector<enum tt__Mpeg4Profile  > Mpeg4ProfilesSupported         1;
    END OF INHERITED FROM tt__Mpeg4Options */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":H264Options.
/// class tt__H264Options2 operations:
/// - soap_new_tt__H264Options2(soap*) allocate
/// - soap_new_tt__H264Options2(soap*, int num) allocate array
/// - soap_new_req_tt__H264Options2(soap*, ...) allocate, set required members
/// - soap_new_set_tt__H264Options2(soap*, ...) allocate, set all public members
/// - int soap_read_tt__H264Options2(soap*, tt__H264Options2*) deserialize from a stream
/// - int soap_write_tt__H264Options2(soap, tt__H264Options2*) serialize to a stream
class tt__H264Options2 : public tt__H264Options
{ public:
/*  INHERITED FROM tt__H264Options:
/// @brief List of supported image sizes.
/// Vector of tt__VideoResolution* with length 1..unbounded
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Vector of enum tt__H264Profile with length 1..unbounded
    std::vector<enum tt__H264Profile   > H264ProfilesSupported          1;
    END OF INHERITED FROM tt__H264Options */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__VideoEncoder2Configuration operations:
/// - soap_new_tt__VideoEncoder2Configuration(soap*) allocate
/// - soap_new_tt__VideoEncoder2Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoEncoder2Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoEncoder2Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoEncoder2Configuration(soap*, tt__VideoEncoder2Configuration*) deserialize from a stream
/// - int soap_write_tt__VideoEncoder2Configuration(soap, tt__VideoEncoder2Configuration*) serialize to a stream
class tt__VideoEncoder2Configuration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// Element Encoding of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// @brief Configured video resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution2.
    tt__VideoResolution2*                Resolution                     1;	///< Required element.
/// @brief Optional element to configure rate control related parameters.
/// Element RateControl of type "http://www.onvif.org/ver10/schema":VideoRateControl2.
    tt__VideoRateControl2*               RateControl                    0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// @brief Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// Element Quality of type xs:float.
    float                                Quality                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Attribute GovLength of type xs:int.
   @int*                                 GovLength                      0;	///< Optional attribute.
/// @brief The encoder profile as defined in tt:VideoEncodingProfiles.
/// Attribute Profile of type xs:string.
   @std::string*                         Profile                        0;	///< Optional attribute.
/// @brief A value of true indicates that frame rate is a fixed value rather than an upper limit, and that the video encoder shall prioritize frame rate over all other adaptable configuration values such as bitrate. Default is false.
/// Attribute GuaranteedFrameRate of type xs:boolean.
   @bool*                                GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AudioSourceConfiguration operations:
/// - soap_new_tt__AudioSourceConfiguration(soap*) allocate
/// - soap_new_tt__AudioSourceConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioSourceConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfiguration(soap, tt__AudioSourceConfiguration*) serialize to a stream
class tt__AudioSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Token of the Audio Source the configuration applies to
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AudioEncoderConfiguration operations:
/// - soap_new_tt__AudioEncoderConfiguration(soap*) allocate
/// - soap_new_tt__AudioEncoderConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfiguration(soap, tt__AudioEncoderConfiguration*) serialize to a stream
class tt__AudioEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// @brief The output bitrate in kbps.
/// Element Bitrate of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// @brief The output sample rate in kHz.
/// Element SampleRate of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AudioEncoder2Configuration operations:
/// - soap_new_tt__AudioEncoder2Configuration(soap*) allocate
/// - soap_new_tt__AudioEncoder2Configuration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioEncoder2Configuration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioEncoder2Configuration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioEncoder2Configuration(soap*, tt__AudioEncoder2Configuration*) deserialize from a stream
/// - int soap_write_tt__AudioEncoder2Configuration(soap, tt__AudioEncoder2Configuration*) serialize to a stream
class tt__AudioEncoder2Configuration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Audio Media Subtype for the audio format. For definitions see tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// Element Encoding of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// @brief Optional multicast configuration of the audio stream.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// @brief The output bitrate in kbps.
/// Element Bitrate of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// @brief The output sample rate in kHz.
/// Element SampleRate of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__VideoAnalyticsConfiguration operations:
/// - soap_new_tt__VideoAnalyticsConfiguration(soap*) allocate
/// - soap_new_tt__VideoAnalyticsConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoAnalyticsConfiguration(soap, tt__VideoAnalyticsConfiguration*) serialize to a stream
class tt__VideoAnalyticsConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   1;	///< Required element.
/// Element RuleEngineConfiguration of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    tt__RuleEngineConfiguration*         RuleEngineConfiguration        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__MetadataConfiguration operations:
/// - soap_new_tt__MetadataConfiguration(soap*) allocate
/// - soap_new_tt__MetadataConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__MetadataConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__MetadataConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) deserialize from a stream
/// - int soap_write_tt__MetadataConfiguration(soap, tt__MetadataConfiguration*) serialize to a stream
class tt__MetadataConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief optional element to configure which PTZ related data is to include in the metadata stream
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZFilter.
    tt__PTZFilter*                       PTZStatus                      0;	///< Optional element.
/// @brief Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul> <li>To get all events: Include the Events element but do not include a filter.</li> <li>To get no events: Do not include the Events element.</li> <li>To get only some events: Include the Events element and include a filter in the element.</li> </ul>
/// Element Events of type "http://www.onvif.org/ver10/schema":EventSubscription.
    tt__EventSubscription*               Events                         0;	///< Optional element.
/// @brief Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// Element Analytics of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream (when using Media2 Service, this value is deprecated and ignored)
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indication which AnalyticsModules shall output metadata. Note that the streaming behavior is undefined if the list includes items that are not part of the associated AnalyticsConfiguration.
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// @brief Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// Attribute CompressionType of type xs:string.
   @std::string*                         CompressionType                0;	///< Optional attribute.
/// @brief Optional parameter to configure if the metadata stream shall contain the Geo Location coordinates of each target.
/// Attribute GeoLocation of type xs:boolean.
   @bool*                                GeoLocation                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video outputs.
/// class tt__VideoOutput operations:
/// - soap_new_tt__VideoOutput(soap*) allocate
/// - soap_new_tt__VideoOutput(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutput(soap*, tt__VideoOutput*) deserialize from a stream
/// - int soap_write_tt__VideoOutput(soap, tt__VideoOutput*) serialize to a stream
class tt__VideoOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element Layout of type "http://www.onvif.org/ver10/schema":Layout.
    tt__Layout*                          Layout                         1;	///< Required element.
/// @brief Resolution of the display in Pixel.
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     0;	///< Optional element.
/// @brief Refresh rate of the display in Hertz.
/// Element RefreshRate of type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// @brief Aspect ratio of the display as physical extent of width divided by height.
/// Element AspectRatio of type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    tt__VideoOutputExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__VideoOutputConfiguration operations:
/// - soap_new_tt__VideoOutputConfiguration(soap*) allocate
/// - soap_new_tt__VideoOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__VideoOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__VideoOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__VideoOutputConfiguration(soap*, tt__VideoOutputConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoOutputConfiguration(soap, tt__VideoOutputConfiguration*) serialize to a stream
class tt__VideoOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Token of the Video Output the configuration applies to
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio outputs.
/// class tt__AudioOutput operations:
/// - soap_new_tt__AudioOutput(soap*) allocate
/// - soap_new_tt__AudioOutput(soap*, int num) allocate array
/// - soap_new_req_tt__AudioOutput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioOutput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioOutput(soap*, tt__AudioOutput*) deserialize from a stream
/// - int soap_write_tt__AudioOutput(soap, tt__AudioOutput*) serialize to a stream
class tt__AudioOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AudioOutputConfiguration operations:
/// - soap_new_tt__AudioOutputConfiguration(soap*) allocate
/// - soap_new_tt__AudioOutputConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioOutputConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfiguration(soap, tt__AudioOutputConfiguration*) serialize to a stream
class tt__AudioOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Token of the phsycial Audio output.
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// @brief An audio channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li> </ul> Acoustic echo cancellation is out of ONVIF scope.
/// Element SendPrimacy of type xs:anyURI.
    xsd__anyURI*                         SendPrimacy                    0;	///< Optional element.
/// @brief Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// Element OutputLevel of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// @brief The Audio Decoder Configuration does not contain any that parameter to configure the decoding .A decoder shall decode every data it receives (according to its capabilities).
/// class tt__AudioDecoderConfiguration operations:
/// - soap_new_tt__AudioDecoderConfiguration(soap*) allocate
/// - soap_new_tt__AudioDecoderConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__AudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfiguration(soap, tt__AudioDecoderConfiguration*) serialize to a stream
class tt__AudioDecoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// class tt__NetworkInterface operations:
/// - soap_new_tt__NetworkInterface(soap*) allocate
/// - soap_new_tt__NetworkInterface(soap*, int num) allocate array
/// - soap_new_req_tt__NetworkInterface(soap*, ...) allocate, set required members
/// - soap_new_set_tt__NetworkInterface(soap*, ...) allocate, set all public members
/// - int soap_read_tt__NetworkInterface(soap*, tt__NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__NetworkInterface(soap, tt__NetworkInterface*) serialize to a stream
class tt__NetworkInterface : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief Network interface information
/// Element Info of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    tt__NetworkInterfaceInfo*            Info                           0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    tt__NetworkInterfaceLink*            Link                           0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    tt__IPv4NetworkInterface*            IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    tt__IPv6NetworkInterface*            IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    tt__NetworkInterfaceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
/// class tt__CertificateUsage operations:
/// - soap_new_tt__CertificateUsage(soap*) allocate
/// - soap_new_tt__CertificateUsage(soap*, int num) allocate array
/// - soap_new_req_tt__CertificateUsage(soap*, ...) allocate, set required members
/// - soap_new_set_tt__CertificateUsage(soap*, ...) allocate, set all public members
/// - int soap_read_tt__CertificateUsage(soap*, tt__CertificateUsage*) deserialize from a stream
/// - int soap_write_tt__CertificateUsage(soap, tt__CertificateUsage*) serialize to a stream
class tt__CertificateUsage
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute Critical of type xs:boolean.
   @bool                                 Critical                       1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// class tt__RelayOutput operations:
/// - soap_new_tt__RelayOutput(soap*) allocate
/// - soap_new_tt__RelayOutput(soap*, int num) allocate array
/// - soap_new_req_tt__RelayOutput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__RelayOutput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__RelayOutput(soap*, tt__RelayOutput*) deserialize from a stream
/// - int soap_write_tt__RelayOutput(soap, tt__RelayOutput*) serialize to a stream
class tt__RelayOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// class tt__DigitalInput operations:
/// - soap_new_tt__DigitalInput(soap*) allocate
/// - soap_new_tt__DigitalInput(soap*, int num) allocate array
/// - soap_new_req_tt__DigitalInput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__DigitalInput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__DigitalInput(soap*, tt__DigitalInput*) deserialize from a stream
/// - int soap_write_tt__DigitalInput(soap, tt__DigitalInput*) serialize to a stream
class tt__DigitalInput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// @brief Indicate the Digital IdleState status.
/// Attribute IdleState of type "http://www.onvif.org/ver10/schema":DigitalIdleState.
   @enum tt__DigitalIdleState*           IdleState                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// class tt__PTZNode operations:
/// - soap_new_tt__PTZNode(soap*) allocate
/// - soap_new_tt__PTZNode(soap*, int num) allocate array
/// - soap_new_req_tt__PTZNode(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZNode(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZNode(soap*, tt__PTZNode*) deserialize from a stream
/// - int soap_write_tt__PTZNode(soap, tt__PTZNode*) serialize to a stream
class tt__PTZNode : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @brief A unique identifier that is used to reference PTZ Nodes.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// @brief A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// Element SupportedPTZSpaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       SupportedPTZSpaces             1;	///< Required element.
/// @brief All preset operations MUST be available for this PTZ Node if one preset is supported.
/// Element MaximumNumberOfPresets of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// @brief A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// Element HomeSupported of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// @brief A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// Vector of tt__AuxiliaryData with length 0..unbounded
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    tt__PTZNodeExtension*                Extension                      0;	///< Optional element.
/// @brief Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// Attribute FixedHomePosition of type xs:boolean.
   @bool*                                FixedHomePosition              0;	///< Optional attribute.
/// @brief Indication whether the Node supports the geo-referenced move command.
/// Attribute GeoMove of type xs:boolean.
   @bool*                                GeoMove                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__PTZConfiguration operations:
/// - soap_new_tt__PTZConfiguration(soap*) allocate
/// - soap_new_tt__PTZConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__PTZConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__PTZConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) deserialize from a stream
/// - int soap_write_tt__PTZConfiguration(soap, tt__PTZConfiguration*) serialize to a stream
class tt__PTZConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// @brief If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// Element DefaultAbsolutePantTiltPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// Element DefaultAbsoluteZoomPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// Element DefaultRelativePanTiltTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// Element DefaultRelativeZoomTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// Element DefaultContinuousPanTiltVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// Element DefaultContinuousZoomVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// Element DefaultPTZSpeed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        DefaultPTZSpeed                0;	///< Optional element.
/// @brief If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// Element DefaultPTZTimeout of type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// @brief The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// Element PanTiltLimits of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    tt__PanTiltLimits*                   PanTiltLimits                  0;	///< Optional element.
/// @brief The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// Element ZoomLimits of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    tt__ZoomLimits*                      ZoomLimits                     0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    tt__PTZConfigurationExtension*       Extension                      0;	///< Optional element.
/// @brief The optional acceleration ramp used by the device when moving.
/// Attribute MoveRamp of type xs:int.
   @int*                                 MoveRamp                       0;	///< Optional attribute.
/// @brief The optional acceleration ramp used by the device when recalling presets.
/// Attribute PresetRamp of type xs:int.
   @int*                                 PresetRamp                     0;	///< Optional attribute.
/// @brief The optional acceleration ramp used by the device when executing PresetTours.
/// Attribute PresetTourRamp of type xs:int.
   @int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// class tt__EventFilter operations:
/// - soap_new_tt__EventFilter(soap*) allocate
/// - soap_new_tt__EventFilter(soap*, int num) allocate array
/// - soap_new_req_tt__EventFilter(soap*, ...) allocate, set required members
/// - soap_new_set_tt__EventFilter(soap*, ...) allocate, set all public members
/// - int soap_read_tt__EventFilter(soap*, tt__EventFilter*) deserialize from a stream
/// - int soap_write_tt__EventFilter(soap, tt__EventFilter*) serialize to a stream
class tt__EventFilter : public wsnt__FilterType
{ public:
/*  INHERITED FROM wsnt__FilterType:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
    END OF INHERITED FROM wsnt__FilterType */
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AnalyticsEngine operations:
/// - soap_new_tt__AnalyticsEngine(soap*) allocate
/// - soap_new_tt__AnalyticsEngine(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngine(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngine(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngine(soap*, tt__AnalyticsEngine*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngine(soap, tt__AnalyticsEngine*) serialize to a stream
class tt__AnalyticsEngine : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AnalyticsEngineInput operations:
/// - soap_new_tt__AnalyticsEngineInput(soap*) allocate
/// - soap_new_tt__AnalyticsEngineInput(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineInput(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineInput(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineInput(soap*, tt__AnalyticsEngineInput*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineInput(soap, tt__AnalyticsEngineInput*) serialize to a stream
class tt__AnalyticsEngineInput : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element SourceIdentification of type "http://www.onvif.org/ver10/schema":SourceIdentification.
    tt__SourceIdentification*            SourceIdentification           1;	///< Required element.
/// Element VideoInput of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoInput                     1;	///< Required element.
/// Element MetadataInput of type "http://www.onvif.org/ver10/schema":MetadataInput.
    tt__MetadataInput*                   MetadataInput                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// class tt__AnalyticsEngineControl operations:
/// - soap_new_tt__AnalyticsEngineControl(soap*) allocate
/// - soap_new_tt__AnalyticsEngineControl(soap*, int num) allocate array
/// - soap_new_req_tt__AnalyticsEngineControl(soap*, ...) allocate, set required members
/// - soap_new_set_tt__AnalyticsEngineControl(soap*, ...) allocate, set all public members
/// - int soap_read_tt__AnalyticsEngineControl(soap*, tt__AnalyticsEngineControl*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineControl(soap, tt__AnalyticsEngineControl*) serialize to a stream
class tt__AnalyticsEngineControl : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely references this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// @brief Token of the analytics engine (AnalyticsEngine) being controlled.
/// Element EngineToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// @brief Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// Element EngineConfigToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// @brief Tokens of the input (AnalyticsEngineInput) configuration applied.
/// Vector of tt__ReferenceToken with length 1..unbounded
    std::vector<tt__ReferenceToken     > InputToken                     1;
/// @brief Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// Vector of tt__ReferenceToken with length 1..unbounded
    std::vector<tt__ReferenceToken     > ReceiverToken                  1;
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// Element Subscription of type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          Subscription                   1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// class tt__OSDConfiguration operations:
/// - soap_new_tt__OSDConfiguration(soap*) allocate
/// - soap_new_tt__OSDConfiguration(soap*, int num) allocate array
/// - soap_new_req_tt__OSDConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDConfiguration(soap*, tt__OSDConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDConfiguration(soap, tt__OSDConfiguration*) serialize to a stream
class tt__OSDConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// @brief Reference to the video source configuration.
/// Element VideoSourceConfigurationToken of type "http://www.onvif.org/ver10/schema":OSDReference.
    tt__OSDReference*                    VideoSourceConfigurationToken  1;	///< Required element.
/// @brief Type of OSD.
/// Element Type of type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// @brief Position configuration of OSD.
/// Element Position of type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    tt__OSDPosConfiguration*             Position                       1;	///< Required element.
/// @brief Text configuration of OSD. It shall be present when the value of Type field is Text.
/// Element TextString of type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    tt__OSDTextConfiguration*            TextString                     0;	///< Optional element.
/// @brief Image configuration of OSD. It shall be present when the value of Type field is Image
/// Element Image of type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    tt__OSDImgConfiguration*             Image                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    tt__OSDConfigurationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__SubscribeCreationFailedFaultType operations:
/// - soap_new_wsnt__SubscribeCreationFailedFaultType(soap*) allocate
/// - soap_new_wsnt__SubscribeCreationFailedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__SubscribeCreationFailedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__SubscribeCreationFailedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__SubscribeCreationFailedFaultType(soap*, wsnt__SubscribeCreationFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__SubscribeCreationFailedFaultType(soap, wsnt__SubscribeCreationFailedFaultType*) serialize to a stream
class wsnt__SubscribeCreationFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap*, _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_ErrorCode(soap, _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__SubscribeCreationFailedFaultType_Description operations:
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_Description(soap*, _wsrfbf__SubscribeCreationFailedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_Description(soap, _wsrfbf__SubscribeCreationFailedFaultType_Description*) serialize to a stream
    class _wsrfbf__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap*, _wsrfbf__SubscribeCreationFailedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__SubscribeCreationFailedFaultType_FaultCause(soap, _wsrfbf__SubscribeCreationFailedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__InvalidFilterFaultType operations:
/// - soap_new_wsnt__InvalidFilterFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidFilterFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidFilterFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidFilterFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidFilterFaultType(soap*, wsnt__InvalidFilterFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidFilterFaultType(soap, wsnt__InvalidFilterFaultType*) serialize to a stream
class wsnt__InvalidFilterFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidFilterFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidFilterFaultType_ErrorCode(soap*, _wsrfbf__InvalidFilterFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidFilterFaultType_ErrorCode(soap, _wsrfbf__InvalidFilterFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidFilterFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__InvalidFilterFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidFilterFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidFilterFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidFilterFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidFilterFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidFilterFaultType_Description(soap*, _wsrfbf__InvalidFilterFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidFilterFaultType_Description(soap, _wsrfbf__InvalidFilterFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidFilterFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidFilterFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidFilterFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidFilterFaultType_FaultCause(soap*, _wsrfbf__InvalidFilterFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidFilterFaultType_FaultCause(soap, _wsrfbf__InvalidFilterFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidFilterFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 1..unbounded
    std::vector<xsd__QName             > UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__TopicExpressionDialectUnknownFaultType operations:
/// - soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap*) allocate
/// - soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__TopicExpressionDialectUnknownFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__TopicExpressionDialectUnknownFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap*, wsnt__TopicExpressionDialectUnknownFaultType*) deserialize from a stream
/// - int soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap, wsnt__TopicExpressionDialectUnknownFaultType*) serialize to a stream
class wsnt__TopicExpressionDialectUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode(soap, _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description operations:
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_Description(soap, _wsrfbf__TopicExpressionDialectUnknownFaultType_Description*) serialize to a stream
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause operations:
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap*, _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause(soap, _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__InvalidTopicExpressionFaultType operations:
/// - soap_new_wsnt__InvalidTopicExpressionFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidTopicExpressionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidTopicExpressionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidTopicExpressionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidTopicExpressionFaultType(soap*, wsnt__InvalidTopicExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidTopicExpressionFaultType(soap, wsnt__InvalidTopicExpressionFaultType*) serialize to a stream
class wsnt__InvalidTopicExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_ErrorCode(soap, _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__InvalidTopicExpressionFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_Description(soap*, _wsrfbf__InvalidTopicExpressionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_Description(soap, _wsrfbf__InvalidTopicExpressionFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidTopicExpressionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidTopicExpressionFaultType_FaultCause(soap, _wsrfbf__InvalidTopicExpressionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__TopicNotSupportedFaultType operations:
/// - soap_new_wsnt__TopicNotSupportedFaultType(soap*) allocate
/// - soap_new_wsnt__TopicNotSupportedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__TopicNotSupportedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__TopicNotSupportedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__TopicNotSupportedFaultType(soap*, wsnt__TopicNotSupportedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__TopicNotSupportedFaultType(soap, wsnt__TopicNotSupportedFaultType*) serialize to a stream
class wsnt__TopicNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__TopicNotSupportedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__TopicNotSupportedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicNotSupportedFaultType_ErrorCode(soap, _wsrfbf__TopicNotSupportedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__TopicNotSupportedFaultType_Description operations:
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicNotSupportedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicNotSupportedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicNotSupportedFaultType_Description(soap*, _wsrfbf__TopicNotSupportedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicNotSupportedFaultType_Description(soap, _wsrfbf__TopicNotSupportedFaultType_Description*) serialize to a stream
    class _wsrfbf__TopicNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__TopicNotSupportedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap*, _wsrfbf__TopicNotSupportedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__TopicNotSupportedFaultType_FaultCause(soap, _wsrfbf__TopicNotSupportedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__TopicNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__MultipleTopicsSpecifiedFaultType operations:
/// - soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap*) allocate
/// - soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__MultipleTopicsSpecifiedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__MultipleTopicsSpecifiedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap*, wsnt__MultipleTopicsSpecifiedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap, wsnt__MultipleTopicsSpecifiedFaultType*) serialize to a stream
class wsnt__MultipleTopicsSpecifiedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode(soap, _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description operations:
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_Description(soap, _wsrfbf__MultipleTopicsSpecifiedFaultType_Description*) serialize to a stream
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap*, _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause(soap, _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__InvalidProducerPropertiesExpressionFaultType operations:
/// - soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap*, wsnt__InvalidProducerPropertiesExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, wsnt__InvalidProducerPropertiesExpressionFaultType*) serialize to a stream
class wsnt__InvalidProducerPropertiesExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode(soap, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description(soap, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause(soap, _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__InvalidMessageContentExpressionFaultType operations:
/// - soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap*) allocate
/// - soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__InvalidMessageContentExpressionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__InvalidMessageContentExpressionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap*, wsnt__InvalidMessageContentExpressionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap, wsnt__InvalidMessageContentExpressionFaultType*) serialize to a stream
class wsnt__InvalidMessageContentExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode(soap, _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__InvalidMessageContentExpressionFaultType_Description operations:
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_Description(soap, _wsrfbf__InvalidMessageContentExpressionFaultType_Description*) serialize to a stream
    class _wsrfbf__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap*, _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause(soap, _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnrecognizedPolicyRequestFaultType operations:
/// - soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap*) allocate
/// - soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnrecognizedPolicyRequestFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnrecognizedPolicyRequestFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap*, wsnt__UnrecognizedPolicyRequestFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap, wsnt__UnrecognizedPolicyRequestFaultType*) serialize to a stream
class wsnt__UnrecognizedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode(soap, _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description operations:
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_Description(soap, _wsrfbf__UnrecognizedPolicyRequestFaultType_Description*) serialize to a stream
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause(soap, _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnsupportedPolicyRequestFaultType operations:
/// - soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap*) allocate
/// - soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnsupportedPolicyRequestFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnsupportedPolicyRequestFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap*, wsnt__UnsupportedPolicyRequestFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap, wsnt__UnsupportedPolicyRequestFaultType*) serialize to a stream
class wsnt__UnsupportedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode(soap, _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnsupportedPolicyRequestFaultType_Description operations:
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_Description(soap, _wsrfbf__UnsupportedPolicyRequestFaultType_Description*) serialize to a stream
    class _wsrfbf__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap*, _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause(soap, _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__NotifyMessageNotSupportedFaultType operations:
/// - soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap*) allocate
/// - soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__NotifyMessageNotSupportedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__NotifyMessageNotSupportedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap*, wsnt__NotifyMessageNotSupportedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap, wsnt__NotifyMessageNotSupportedFaultType*) serialize to a stream
class wsnt__NotifyMessageNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode(soap, _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__NotifyMessageNotSupportedFaultType_Description operations:
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_Description(soap, _wsrfbf__NotifyMessageNotSupportedFaultType_Description*) serialize to a stream
    class _wsrfbf__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap*, _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause(soap, _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnacceptableInitialTerminationTimeFaultType operations:
/// - soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*) allocate
/// - soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap*, wsnt__UnacceptableInitialTerminationTimeFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, wsnt__UnacceptableInitialTerminationTimeFaultType*) serialize to a stream
class wsnt__UnacceptableInitialTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode(soap, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description operations:
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description(soap, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description*) serialize to a stream
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause(soap, _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__NoCurrentMessageOnTopicFaultType operations:
/// - soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap*) allocate
/// - soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__NoCurrentMessageOnTopicFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__NoCurrentMessageOnTopicFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap*, wsnt__NoCurrentMessageOnTopicFaultType*) deserialize from a stream
/// - int soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap, wsnt__NoCurrentMessageOnTopicFaultType*) serialize to a stream
class wsnt__NoCurrentMessageOnTopicFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode(soap, _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description operations:
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_Description(soap, _wsrfbf__NoCurrentMessageOnTopicFaultType_Description*) serialize to a stream
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause operations:
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap*, _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause(soap, _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnableToGetMessagesFaultType operations:
/// - soap_new_wsnt__UnableToGetMessagesFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToGetMessagesFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToGetMessagesFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToGetMessagesFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToGetMessagesFaultType(soap*, wsnt__UnableToGetMessagesFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToGetMessagesFaultType(soap, wsnt__UnableToGetMessagesFaultType*) serialize to a stream
class wsnt__UnableToGetMessagesFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap*, _wsrfbf__UnableToGetMessagesFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_ErrorCode(soap, _wsrfbf__UnableToGetMessagesFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnableToGetMessagesFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_Description(soap*, _wsrfbf__UnableToGetMessagesFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_Description(soap, _wsrfbf__UnableToGetMessagesFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToGetMessagesFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToGetMessagesFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap*, _wsrfbf__UnableToGetMessagesFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToGetMessagesFaultType_FaultCause(soap, _wsrfbf__UnableToGetMessagesFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToGetMessagesFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnableToDestroyPullPointFaultType operations:
/// - soap_new_wsnt__UnableToDestroyPullPointFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToDestroyPullPointFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToDestroyPullPointFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToDestroyPullPointFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToDestroyPullPointFaultType(soap*, wsnt__UnableToDestroyPullPointFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToDestroyPullPointFaultType(soap, wsnt__UnableToDestroyPullPointFaultType*) serialize to a stream
class wsnt__UnableToDestroyPullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode(soap, _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnableToDestroyPullPointFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_Description(soap, _wsrfbf__UnableToDestroyPullPointFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroyPullPointFaultType_FaultCause(soap, _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnableToCreatePullPointFaultType operations:
/// - soap_new_wsnt__UnableToCreatePullPointFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToCreatePullPointFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToCreatePullPointFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToCreatePullPointFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToCreatePullPointFaultType(soap*, wsnt__UnableToCreatePullPointFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToCreatePullPointFaultType(soap, wsnt__UnableToCreatePullPointFaultType*) serialize to a stream
class wsnt__UnableToCreatePullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap*, _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_ErrorCode(soap, _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnableToCreatePullPointFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_Description(soap*, _wsrfbf__UnableToCreatePullPointFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_Description(soap, _wsrfbf__UnableToCreatePullPointFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap*, _wsrfbf__UnableToCreatePullPointFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToCreatePullPointFaultType_FaultCause(soap, _wsrfbf__UnableToCreatePullPointFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnacceptableTerminationTimeFaultType operations:
/// - soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap*) allocate
/// - soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnacceptableTerminationTimeFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnacceptableTerminationTimeFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap*, wsnt__UnacceptableTerminationTimeFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap, wsnt__UnacceptableTerminationTimeFaultType*) serialize to a stream
class wsnt__UnacceptableTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode(soap, _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnacceptableTerminationTimeFaultType_Description operations:
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_Description(soap, _wsrfbf__UnacceptableTerminationTimeFaultType_Description*) serialize to a stream
    class _wsrfbf__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap*, _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause(soap, _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__UnableToDestroySubscriptionFaultType operations:
/// - soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap*) allocate
/// - soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__UnableToDestroySubscriptionFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__UnableToDestroySubscriptionFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap*, wsnt__UnableToDestroySubscriptionFaultType*) deserialize from a stream
/// - int soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap, wsnt__UnableToDestroySubscriptionFaultType*) serialize to a stream
class wsnt__UnableToDestroySubscriptionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode(soap, _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__UnableToDestroySubscriptionFaultType_Description operations:
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_Description(soap, _wsrfbf__UnableToDestroySubscriptionFaultType_Description*) serialize to a stream
    class _wsrfbf__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause operations:
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap*, _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause(soap, _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__PauseFailedFaultType operations:
/// - soap_new_wsnt__PauseFailedFaultType(soap*) allocate
/// - soap_new_wsnt__PauseFailedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__PauseFailedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__PauseFailedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__PauseFailedFaultType(soap*, wsnt__PauseFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__PauseFailedFaultType(soap, wsnt__PauseFailedFaultType*) serialize to a stream
class wsnt__PauseFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__PauseFailedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__PauseFailedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__PauseFailedFaultType_ErrorCode(soap*, _wsrfbf__PauseFailedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__PauseFailedFaultType_ErrorCode(soap, _wsrfbf__PauseFailedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__PauseFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__PauseFailedFaultType_Description operations:
/// - soap_new__wsrfbf__PauseFailedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__PauseFailedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__PauseFailedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__PauseFailedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__PauseFailedFaultType_Description(soap*, _wsrfbf__PauseFailedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__PauseFailedFaultType_Description(soap, _wsrfbf__PauseFailedFaultType_Description*) serialize to a stream
    class _wsrfbf__PauseFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__PauseFailedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__PauseFailedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__PauseFailedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__PauseFailedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__PauseFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__PauseFailedFaultType_FaultCause(soap*, _wsrfbf__PauseFailedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__PauseFailedFaultType_FaultCause(soap, _wsrfbf__PauseFailedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__PauseFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsnt__ResumeFailedFaultType operations:
/// - soap_new_wsnt__ResumeFailedFaultType(soap*) allocate
/// - soap_new_wsnt__ResumeFailedFaultType(soap*, int num) allocate array
/// - soap_new_req_wsnt__ResumeFailedFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsnt__ResumeFailedFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsnt__ResumeFailedFaultType(soap*, wsnt__ResumeFailedFaultType*) deserialize from a stream
/// - int soap_write_wsnt__ResumeFailedFaultType(soap, wsnt__ResumeFailedFaultType*) serialize to a stream
class wsnt__ResumeFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__ResumeFailedFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResumeFailedFaultType_ErrorCode(soap*, _wsrfbf__ResumeFailedFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__ResumeFailedFaultType_ErrorCode(soap, _wsrfbf__ResumeFailedFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__ResumeFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__ResumeFailedFaultType_Description operations:
/// - soap_new__wsrfbf__ResumeFailedFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__ResumeFailedFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResumeFailedFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResumeFailedFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResumeFailedFaultType_Description(soap*, _wsrfbf__ResumeFailedFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__ResumeFailedFaultType_Description(soap, _wsrfbf__ResumeFailedFaultType_Description*) serialize to a stream
    class _wsrfbf__ResumeFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__ResumeFailedFaultType_FaultCause operations:
/// - soap_new__wsrfbf__ResumeFailedFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResumeFailedFaultType_FaultCause(soap*, _wsrfbf__ResumeFailedFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__ResumeFailedFaultType_FaultCause(soap, _wsrfbf__ResumeFailedFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__ResumeFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
/// class wstop__TopicNamespaceType operations:
/// - soap_new_wstop__TopicNamespaceType(soap*) allocate
/// - soap_new_wstop__TopicNamespaceType(soap*, int num) allocate array
/// - soap_new_req_wstop__TopicNamespaceType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__TopicNamespaceType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__TopicNamespaceType(soap*, wstop__TopicNamespaceType*) deserialize from a stream
/// - int soap_write_wstop__TopicNamespaceType(soap, wstop__TopicNamespaceType*) serialize to a stream
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Vector of Topic with length 0..unbounded
    std::vector<
/// class _wstop__TopicNamespaceType_Topic operations:
/// - soap_new__wstop__TopicNamespaceType_Topic(soap*) allocate
/// - soap_new__wstop__TopicNamespaceType_Topic(soap*, int num) allocate array
/// - soap_new_req__wstop__TopicNamespaceType_Topic(soap*, ...) allocate, set required members
/// - soap_new_set__wstop__TopicNamespaceType_Topic(soap*, ...) allocate, set all public members
/// - int soap_read__wstop__TopicNamespaceType_Topic(soap*, _wstop__TopicNamespaceType_Topic*) deserialize from a stream
/// - int soap_write__wstop__TopicNamespaceType_Topic(soap, _wstop__TopicNamespaceType_Topic*) serialize to a stream
    class _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* with length 0..unbounded
    std::vector<wstop__TopicType*      > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute parent of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
    }>                                  *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute name of type xs:NCName.
   @xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute targetNamespace of type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
/// class wstop__TopicType operations:
/// - soap_new_wstop__TopicType(soap*) allocate
/// - soap_new_wstop__TopicType(soap*, int num) allocate array
/// - soap_new_req_wstop__TopicType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__TopicType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__TopicType(soap*, wstop__TopicType*) deserialize from a stream
/// - int soap_write_wstop__TopicType(soap, wstop__TopicType*) serialize to a stream
class wstop__TopicType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* with length 0..unbounded
    std::vector<wstop__TopicType*      > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
/// class wstop__TopicSetType operations:
/// - soap_new_wstop__TopicSetType(soap*) allocate
/// - soap_new_wstop__TopicSetType(soap*, int num) allocate array
/// - soap_new_req_wstop__TopicSetType(soap*, ...) allocate, set required members
/// - soap_new_set_wstop__TopicSetType(soap*, ...) allocate, set all public members
/// - int soap_read_wstop__TopicSetType(soap*, wstop__TopicSetType*) deserialize from a stream
/// - int soap_write_wstop__TopicSetType(soap, wstop__TopicSetType*) serialize to a stream
class wstop__TopicSetType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Lists all available serial ports of a device
/// class tmd__SerialPort operations:
/// - soap_new_tmd__SerialPort(soap*) allocate
/// - soap_new_tmd__SerialPort(soap*, int num) allocate array
/// - soap_new_req_tmd__SerialPort(soap*, ...) allocate, set required members
/// - soap_new_set_tmd__SerialPort(soap*, ...) allocate, set all public members
/// - int soap_read_tmd__SerialPort(soap*, tmd__SerialPort*) deserialize from a stream
/// - int soap_write_tmd__SerialPort(soap, tmd__SerialPort*) serialize to a stream
class tmd__SerialPort : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsrfr__ResourceUnknownFaultType operations:
/// - soap_new_wsrfr__ResourceUnknownFaultType(soap*) allocate
/// - soap_new_wsrfr__ResourceUnknownFaultType(soap*, int num) allocate array
/// - soap_new_req_wsrfr__ResourceUnknownFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsrfr__ResourceUnknownFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsrfr__ResourceUnknownFaultType(soap*, wsrfr__ResourceUnknownFaultType*) deserialize from a stream
/// - int soap_write_wsrfr__ResourceUnknownFaultType(soap, wsrfr__ResourceUnknownFaultType*) serialize to a stream
class wsrfr__ResourceUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__ResourceUnknownFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnknownFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnknownFaultType_ErrorCode(soap, _wsrfbf__ResourceUnknownFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__ResourceUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__ResourceUnknownFaultType_Description operations:
/// - soap_new__wsrfbf__ResourceUnknownFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnknownFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnknownFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnknownFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnknownFaultType_Description(soap*, _wsrfbf__ResourceUnknownFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnknownFaultType_Description(soap, _wsrfbf__ResourceUnknownFaultType_Description*) serialize to a stream
    class _wsrfbf__ResourceUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__ResourceUnknownFaultType_FaultCause operations:
/// - soap_new__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnknownFaultType_FaultCause(soap*, _wsrfbf__ResourceUnknownFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnknownFaultType_FaultCause(soap, _wsrfbf__ResourceUnknownFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__ResourceUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// class wsrfr__ResourceUnavailableFaultType operations:
/// - soap_new_wsrfr__ResourceUnavailableFaultType(soap*) allocate
/// - soap_new_wsrfr__ResourceUnavailableFaultType(soap*, int num) allocate array
/// - soap_new_req_wsrfr__ResourceUnavailableFaultType(soap*, ...) allocate, set required members
/// - soap_new_set_wsrfr__ResourceUnavailableFaultType(soap*, ...) allocate, set all public members
/// - int soap_read_wsrfr__ResourceUnavailableFaultType(soap*, wsrfr__ResourceUnavailableFaultType*) deserialize from a stream
/// - int soap_write_wsrfr__ResourceUnavailableFaultType(soap, wsrfr__ResourceUnavailableFaultType*) serialize to a stream
class wsrfr__ResourceUnavailableFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<xsd__anyType           > __any                         0;	///< Catch any element content in DOM.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// class _wsrfbf__ResourceUnavailableFaultType_ErrorCode operations:
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap*, _wsrfbf__ResourceUnavailableFaultType_ErrorCode*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnavailableFaultType_ErrorCode(soap, _wsrfbf__ResourceUnavailableFaultType_ErrorCode*) serialize to a stream
    class _wsrfbf__ResourceUnavailableFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description with length 0..unbounded
    std::vector<
/// class _wsrfbf__ResourceUnavailableFaultType_Description operations:
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_Description(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_Description(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnavailableFaultType_Description(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnavailableFaultType_Description(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnavailableFaultType_Description(soap*, _wsrfbf__ResourceUnavailableFaultType_Description*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnavailableFaultType_Description(soap, _wsrfbf__ResourceUnavailableFaultType_Description*) serialize to a stream
    class _wsrfbf__ResourceUnavailableFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
/// class _wsrfbf__ResourceUnavailableFaultType_FaultCause operations:
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*) allocate
/// - soap_new__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, int num) allocate array
/// - soap_new_req__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, ...) allocate, set required members
/// - soap_new_set__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, ...) allocate, set all public members
/// - int soap_read__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap*, _wsrfbf__ResourceUnavailableFaultType_FaultCause*) deserialize from a stream
/// - int soap_write__wsrfbf__ResourceUnavailableFaultType_FaultCause(soap, _wsrfbf__ResourceUnavailableFaultType_FaultCause*) serialize to a stream
    class _wsrfbf__ResourceUnavailableFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    xsd__anyType                         __any                         0;	///< Catch any element content in DOM.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// class tds__StorageConfiguration operations:
/// - soap_new_tds__StorageConfiguration(soap*) allocate
/// - soap_new_tds__StorageConfiguration(soap*, int num) allocate array
/// - soap_new_req_tds__StorageConfiguration(soap*, ...) allocate, set required members
/// - soap_new_set_tds__StorageConfiguration(soap*, ...) allocate, set all public members
/// - int soap_read_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) deserialize from a stream
/// - int soap_write_tds__StorageConfiguration(soap, tds__StorageConfiguration*) serialize to a stream
class tds__StorageConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element Data of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       Data                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent.
/// class tt__OSDReference operations:
/// - soap_new_tt__OSDReference(soap*) allocate
/// - soap_new_tt__OSDReference(soap*, int num) allocate array
/// - soap_new_req_tt__OSDReference(soap*, ...) allocate, set required members
/// - soap_new_set_tt__OSDReference(soap*, ...) allocate, set all public members
/// - int soap_read_tt__OSDReference(soap*, tt__OSDReference*) deserialize from a stream
/// - int soap_write_tt__OSDReference(soap, tt__OSDReference*) serialize to a stream
class tt__OSDReference
{ public:
/// __item wraps '"http://www.onvif.org/ver10/schema":ReferenceToken' simpleContent.
    tt__ReferenceToken                   __item                        ;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntAttrList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatAttrList.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/network/wsdl":Hello of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":HelloType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/network/wsdl":HelloResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/network/wsdl":Probe of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/network/wsdl":ProbeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ProbeMatchesType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/network/wsdl":Bye of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ByeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/network/wsdl":ByeResponse of type "http://schemas.xmlsoap.org/ws/2005/04/discovery":ResolveType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/network/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSources of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourcesResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSources of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourcesResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputs of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputsResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":Capabilities of type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/search/wsdl":Capabilities of type "http://www.onvif.org/ver10/search/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Capabilities of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/pacs                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap tdn  service name:	RemoteDiscoveryBinding 
//gsoap tdn  service type:	RemoteDiscoveryPort 
//gsoap tdn  service namespace:	http://www.onvif.org/ver10/network/wsdl 
//gsoap tdn  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev  service name:	PullPointSubscriptionBinding 
//gsoap tev  service type:	PullPointSubscription 
//gsoap tev  service namespace:	http://www.onvif.org/ver10/events/wsdl 
//gsoap tev  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap timg service name:	ImagingBinding 
//gsoap timg service type:	ImagingPort 
//gsoap timg service namespace:	http://www.onvif.org/ver20/imaging/wsdl 
//gsoap timg service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tmd  service name:	DeviceIOBinding 
//gsoap tmd  service type:	DeviceIOPort 
//gsoap tmd  service namespace:	http://www.onvif.org/ver10/deviceIO/wsdl 
//gsoap tmd  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trv  service name:	ReceiverBinding 
//gsoap trv  service type:	ReceiverPort 
//gsoap trv  service namespace:	http://www.onvif.org/ver10/receiver/wsdl 
//gsoap trv  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tse  service name:	SearchBinding 
//gsoap tse  service type:	SearchPort 
//gsoap tse  service namespace:	http://www.onvif.org/ver10/search/wsdl 
//gsoap tse  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref RemoteDiscoveryBinding

  - @ref DeviceBinding

  - @ref PullPointSubscriptionBinding

  - @ref ImagingBinding

  - @ref DeviceIOBinding

  - @ref PTZBinding

  - @ref MediaBinding

  - @ref ReceiverBinding

  - @ref SearchBinding

@section WSDL_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_operations Operations of Binding  "RemoteDiscoveryBinding"

  - @ref __tdn__Hello

  - @ref __tdn__Bye

  - @ref __tdn__Probe

@section RemoteDiscoveryBinding_ports Endpoints of Binding  "RemoteDiscoveryBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding  "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

  - @ref __tds__GetGeoLocation

  - @ref __tds__SetGeoLocation

  - @ref __tds__DeleteGeoLocation

@section DeviceBinding_ports Endpoints of Binding  "DeviceBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding  "PullPointSubscriptionBinding"

  - @ref __tev__PullMessages

  - @ref __tev__Seek

  - @ref __tev__SetSynchronizationPoint

  - @ref __tev__Unsubscribe

  - @ref __tev__GetServiceCapabilities

  - @ref __tev__CreatePullPointSubscription

  - @ref __tev__GetEventProperties

  - @ref __tev__Renew

  - @ref __tev__Unsubscribe_

  - @ref __tev__Subscribe

  - @ref __tev__GetCurrentMessage

  - @ref __tev__Notify

  - @ref __tev__GetMessages

  - @ref __tev__DestroyPullPoint

  - @ref __tev__Notify_

  - @ref __tev__CreatePullPoint

  - @ref __tev__Renew_

  - @ref __tev__Unsubscribe__

  - @ref __tev__PauseSubscription

  - @ref __tev__ResumeSubscription

@section PullPointSubscriptionBinding_ports Endpoints of Binding  "PullPointSubscriptionBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_operations Operations of Binding  "ImagingBinding"

  - @ref __timg__GetServiceCapabilities

  - @ref __timg__GetImagingSettings

  - @ref __timg__SetImagingSettings

  - @ref __timg__GetOptions

  - @ref __timg__Move

  - @ref __timg__Stop

  - @ref __timg__GetStatus

  - @ref __timg__GetMoveOptions

  - @ref __timg__GetPresets

  - @ref __timg__GetCurrentPreset

  - @ref __timg__SetCurrentPreset

@section ImagingBinding_ports Endpoints of Binding  "ImagingBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_operations Operations of Binding  "DeviceIOBinding"

  - @ref __tmd__GetServiceCapabilities

  - @ref __tmd__GetRelayOutputOptions

  - @ref __tmd__GetAudioSources

  - @ref __tmd__GetAudioOutputs

  - @ref __tmd__GetVideoSources

  - @ref __tmd__GetVideoOutputs

  - @ref __tmd__GetVideoSourceConfiguration

  - @ref __tmd__GetVideoOutputConfiguration

  - @ref __tmd__GetAudioSourceConfiguration

  - @ref __tmd__GetAudioOutputConfiguration

  - @ref __tmd__SetVideoSourceConfiguration

  - @ref __tmd__SetVideoOutputConfiguration

  - @ref __tmd__SetAudioSourceConfiguration

  - @ref __tmd__SetAudioOutputConfiguration

  - @ref __tmd__GetVideoSourceConfigurationOptions

  - @ref __tmd__GetVideoOutputConfigurationOptions

  - @ref __tmd__GetAudioSourceConfigurationOptions

  - @ref __tmd__GetAudioOutputConfigurationOptions

  - @ref __tmd__GetRelayOutputs

  - @ref __tmd__SetRelayOutputSettings

  - @ref __tmd__SetRelayOutputState

  - @ref __tmd__GetDigitalInputs

  - @ref __tmd__GetDigitalInputConfigurationOptions

  - @ref __tmd__SetDigitalInputConfigurations

  - @ref __tmd__GetSerialPorts

  - @ref __tmd__GetSerialPortConfiguration

  - @ref __tmd__SetSerialPortConfiguration

  - @ref __tmd__GetSerialPortConfigurationOptions

  - @ref __tmd__SendReceiveSerialCommand

@section DeviceIOBinding_ports Endpoints of Binding  "DeviceIOBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding  "PTZBinding"

  - @ref __tptz__GetServiceCapabilities

  - @ref __tptz__GetConfigurations

  - @ref __tptz__GetPresets

  - @ref __tptz__SetPreset

  - @ref __tptz__RemovePreset

  - @ref __tptz__GotoPreset

  - @ref __tptz__GetStatus

  - @ref __tptz__GetConfiguration

  - @ref __tptz__GetNodes

  - @ref __tptz__GetNode

  - @ref __tptz__SetConfiguration

  - @ref __tptz__GetConfigurationOptions

  - @ref __tptz__GotoHomePosition

  - @ref __tptz__SetHomePosition

  - @ref __tptz__ContinuousMove

  - @ref __tptz__RelativeMove

  - @ref __tptz__SendAuxiliaryCommand

  - @ref __tptz__AbsoluteMove

  - @ref __tptz__GeoMove

  - @ref __tptz__Stop

  - @ref __tptz__GetPresetTours

  - @ref __tptz__GetPresetTour

  - @ref __tptz__GetPresetTourOptions

  - @ref __tptz__CreatePresetTour

  - @ref __tptz__ModifyPresetTour

  - @ref __tptz__OperatePresetTour

  - @ref __tptz__RemovePresetTour

  - @ref __tptz__GetCompatibleConfigurations

@section PTZBinding_ports Endpoints of Binding  "PTZBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding  "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

  - @ref __trt__GetVideoSourceModes

  - @ref __trt__SetVideoSourceMode

  - @ref __trt__GetOSDs

  - @ref __trt__GetOSD

  - @ref __trt__GetOSDOptions

  - @ref __trt__SetOSD

  - @ref __trt__CreateOSD

  - @ref __trt__DeleteOSD

@section MediaBinding_ports Endpoints of Binding  "MediaBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_operations Operations of Binding  "ReceiverBinding"

  - @ref __trv__GetServiceCapabilities

  - @ref __trv__GetReceivers

  - @ref __trv__GetReceiver

  - @ref __trv__CreateReceiver

  - @ref __trv__DeleteReceiver

  - @ref __trv__ConfigureReceiver

  - @ref __trv__SetReceiverMode

  - @ref __trv__GetReceiverState

@section ReceiverBinding_ports Endpoints of Binding  "ReceiverBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/**

@page SearchBinding Binding "SearchBinding"

@section SearchBinding_operations Operations of Binding  "SearchBinding"

  - @ref __tse__GetServiceCapabilities

  - @ref __tse__GetRecordingSummary

  - @ref __tse__GetRecordingInformation

  - @ref __tse__GetMediaAttributes

  - @ref __tse__FindRecordings

  - @ref __tse__GetRecordingSearchResults

  - @ref __tse__FindEvents

  - @ref __tse__GetEventSearchResults

  - @ref __tse__FindPTZPosition

  - @ref __tse__GetPTZPositionSearchResults

  - @ref __tse__GetSearchState

  - @ref __tse__EndSearch

  - @ref __tse__FindMetadata

  - @ref __tse__GetMetadataSearchResults

@section SearchBinding_ports Endpoints of Binding  "SearchBinding"

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
struct SOAP_ENV__Detail
{
   @xsd__anyAttribute                    __anyAttribute                ;	///< Catch any attribute content in DOM.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    wsnt__InvalidFilterFaultType*        wsnt__InvalidFilterFault      ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault" part "InvalidFilterFault"
    wsnt__InvalidMessageContentExpressionFaultType*  wsnt__InvalidMessageContentExpressionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault"
    wsnt__InvalidProducerPropertiesExpressionFaultType*  wsnt__InvalidProducerPropertiesExpressionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault"
    wsnt__InvalidTopicExpressionFaultType*  wsnt__InvalidTopicExpressionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault" part "InvalidTopicExpressionFault"
    wsnt__MultipleTopicsSpecifiedFaultType*  wsnt__MultipleTopicsSpecifiedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault"
    wsnt__NoCurrentMessageOnTopicFaultType*  wsnt__NoCurrentMessageOnTopicFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault"
    wsnt__NotifyMessageNotSupportedFaultType*  wsnt__NotifyMessageNotSupportedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault"
    wsnt__PauseFailedFaultType*          wsnt__PauseFailedFault        ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault" part "PauseFailedFault"
    _tev__PullMessagesFaultResponse*     tev__PullMessagesFaultResponse;
///< SOAP Fault element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse" part "parameters"
    wsrfr__ResourceUnknownFaultType*     wsrfr__ResourceUnknownFault   ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault" part "ResourceUnknownFault"
    wsnt__ResumeFailedFaultType*         wsnt__ResumeFailedFault       ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault" part "ResumeFailedFault"
    wsnt__SubscribeCreationFailedFaultType*  wsnt__SubscribeCreationFailedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault" part "SubscribeCreationFailedFault"
    wsnt__TopicExpressionDialectUnknownFaultType*  wsnt__TopicExpressionDialectUnknownFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault"
    wsnt__TopicNotSupportedFaultType*    wsnt__TopicNotSupportedFault  ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault" part "TopicNotSupportedFault"
    wsnt__UnableToCreatePullPointFaultType*  wsnt__UnableToCreatePullPointFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault" part "UnableToCreatePullPointFault"
    wsnt__UnableToDestroyPullPointFaultType*  wsnt__UnableToDestroyPullPointFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault"
    wsnt__UnableToDestroySubscriptionFaultType*  wsnt__UnableToDestroySubscriptionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault"
    wsnt__UnableToGetMessagesFaultType*  wsnt__UnableToGetMessagesFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault" part "UnableToGetMessagesFault"
    wsnt__UnacceptableInitialTerminationTimeFaultType*  wsnt__UnacceptableInitialTerminationTimeFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault"
    wsnt__UnacceptableTerminationTimeFaultType*  wsnt__UnacceptableTerminationTimeFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault"
    wsnt__UnrecognizedPolicyRequestFaultType*  wsnt__UnrecognizedPolicyRequestFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault"
    wsnt__UnsupportedPolicyRequestFaultType*  wsnt__UnsupportedPolicyRequestFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RemoteDiscoveryBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Hello                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tdn__Hello" of service binding "RemoteDiscoveryBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Hello"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/HelloResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Hello(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  &tdn__HelloResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Hello(
    struct soap *soap,
    // input parameters:
    wsdd__HelloType                     tdn__Hello,
    // output parameters:
    wsdd__ResolveType                  &tdn__HelloResponse
  );
@endcode

C++ proxy class (defined in soapRemoteDiscoveryBindingProxy.h):
@code
  class RemoteDiscoveryBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRemoteDiscoveryBindingService.h):
@code
  class RemoteDiscoveryBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tdn  service method-protocol:	Hello SOAP
//gsoap tdn  service method-style:	Hello document
//gsoap tdn  service method-encoding:	Hello literal
//gsoap tdn  service method-input-action:	Hello http://www.onvif.org/ver10/network/wsdl/Hello
//gsoap tdn  service method-output-action:	Hello http://www.onvif.org/ver10/network/wsdl/HelloResponse
int __tdn__Hello(
    wsdd__HelloType                     tdn__Hello,	///< Input parameter
    wsdd__ResolveType                  &tdn__HelloResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Bye                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tdn__Bye" of service binding "RemoteDiscoveryBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Bye"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ByeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Bye(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  &tdn__ByeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Bye(
    struct soap *soap,
    // input parameters:
    wsdd__ByeType                       tdn__Bye,
    // output parameters:
    wsdd__ResolveType                  &tdn__ByeResponse
  );
@endcode

C++ proxy class (defined in soapRemoteDiscoveryBindingProxy.h):
@code
  class RemoteDiscoveryBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRemoteDiscoveryBindingService.h):
@code
  class RemoteDiscoveryBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tdn  service method-protocol:	Bye SOAP
//gsoap tdn  service method-style:	Bye document
//gsoap tdn  service method-encoding:	Bye literal
//gsoap tdn  service method-input-action:	Bye http://www.onvif.org/ver10/network/wsdl/Bye
//gsoap tdn  service method-output-action:	Bye http://www.onvif.org/ver10/network/wsdl/ByeResponse
int __tdn__Bye(
    wsdd__ByeType                       tdn__Bye,	///< Input parameter
    wsdd__ResolveType                  &tdn__ByeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tdn__Probe                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tdn__Probe" of service binding "RemoteDiscoveryBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing input action: "http://www.onvif.org/ver10/network/wsdl/Probe"

  - Addressing output action: "http://www.onvif.org/ver10/network/wsdl/ProbeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tdn__Probe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             &tdn__ProbeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tdn__Probe(
    struct soap *soap,
    // input parameters:
    wsdd__ProbeType                     tdn__Probe,
    // output parameters:
    wsdd__ProbeMatchesType             &tdn__ProbeResponse
  );
@endcode

C++ proxy class (defined in soapRemoteDiscoveryBindingProxy.h):
@code
  class RemoteDiscoveryBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRemoteDiscoveryBindingService.h):
@code
  class RemoteDiscoveryBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tdn  service method-protocol:	Probe SOAP
//gsoap tdn  service method-style:	Probe document
//gsoap tdn  service method-encoding:	Probe literal
//gsoap tdn  service method-input-action:	Probe http://www.onvif.org/ver10/network/wsdl/Probe
//gsoap tdn  service method-output-action:	Probe http://www.onvif.org/ver10/network/wsdl/ProbeResponse
int __tdn__Probe(
    wsdd__ProbeType                     tdn__Probe,	///< Input parameter
    wsdd__ProbeMatchesType             &tdn__ProbeResponse	///< Output parameter
);

/**

@page RemoteDiscoveryBinding Binding "RemoteDiscoveryBinding"

@section RemoteDiscoveryBinding_policy_enablers Policy Enablers of Binding  "RemoteDiscoveryBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetServices" of service binding "DeviceBinding"

/**

Operation details:
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse*          tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse*          tds__GetServicesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    _tds__GetServices*                  tds__GetServices,	///< Input parameter
    _tds__GetServicesResponse*          tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding"

/**

Operation details:
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse* tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse* tds__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,	///< Input parameter
    _tds__GetServiceCapabilitiesResponse* tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding"

/**

Operation details:
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse* tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse* tds__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,	///< Input parameter
    _tds__GetDeviceInformationResponse* tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string.
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse* tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse* tds__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,	///< Input parameter
    _tds__SetSystemDateAndTimeResponse* tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse* tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse* tds__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,	///< Input parameter
    _tds__GetSystemDateAndTimeResponse* tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding"

/**

Operation details:
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse* tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse* tds__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,	///< Input parameter
    _tds__SetSystemFactoryDefaultResponse* tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding"

/**

Operation details:
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse* tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse* tds__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,	///< Input parameter
    _tds__UpgradeSystemFirmwareResponse* tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SystemReboot" of service binding "DeviceBinding"

/**

Operation details:
This operation reboots the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse*         tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse*         tds__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    _tds__SystemReboot*                 tds__SystemReboot,	///< Input parameter
    _tds__SystemRebootResponse*         tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__RestoreSystem" of service binding "DeviceBinding"

/**

Operation details:
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse*        tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse*        tds__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    _tds__RestoreSystem*                tds__RestoreSystem,	///< Input parameter
    _tds__RestoreSystemResponse*        tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemBackup" of service binding "DeviceBinding"

/**

Operation details:
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse*      tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse*      tds__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    _tds__GetSystemBackup*              tds__GetSystemBackup,	///< Input parameter
    _tds__GetSystemBackupResponse*      tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemLog" of service binding "DeviceBinding"

/**

Operation details:
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse*         tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse*         tds__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    _tds__GetSystemLog*                 tds__GetSystemLog,	///< Input parameter
    _tds__GetSystemLogResponse*         tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding"

/**

Operation details:
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse* tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse* tds__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,	///< Input parameter
    _tds__GetSystemSupportInformationResponse* tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetScopes" of service binding "DeviceBinding"

/**

Operation details:
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface.
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory,
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse*            tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse*            tds__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    _tds__GetScopes*                    tds__GetScopes,	///< Input parameter
    _tds__GetScopesResponse*            tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetScopes" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse*            tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse*            tds__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    _tds__SetScopes*                    tds__SetScopes,	///< Input parameter
    _tds__SetScopesResponse*            tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__AddScopes" of service binding "DeviceBinding"

/**

Operation details:
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse*            tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse*            tds__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    _tds__AddScopes*                    tds__AddScopes,	///< Input parameter
    _tds__AddScopesResponse*            tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__RemoveScopes" of service binding "DeviceBinding"

/**

Operation details:
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse*         tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse*         tds__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    _tds__RemoveScopes*                 tds__RemoveScopes,	///< Input parameter
    _tds__RemoveScopesResponse*         tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse*     tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse*     tds__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,	///< Input parameter
    _tds__GetDiscoveryModeResponse*     tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse*     tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse*     tds__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,	///< Input parameter
    _tds__SetDiscoveryModeResponse*     tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse* tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse* tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,	///< Input parameter
    _tds__GetRemoteDiscoveryModeResponse* tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse* tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse* tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,	///< Input parameter
    _tds__SetRemoteDiscoveryModeResponse* tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDPAddresses" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse*       tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse*       tds__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    _tds__GetDPAddresses*               tds__GetDPAddresses,	///< Input parameter
    _tds__GetDPAddressesResponse*       tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetEndpointReference" of service binding "DeviceBinding"

/**

Operation details:
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse* tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse* tds__GetEndpointReferenceResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    _tds__GetEndpointReference*         tds__GetEndpointReference,	///< Input parameter
    _tds__GetEndpointReferenceResponse* tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetRemoteUser" of service binding "DeviceBinding"

/**

Operation details:
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse*        tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse*        tds__GetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    _tds__GetRemoteUser*                tds__GetRemoteUser,	///< Input parameter
    _tds__GetRemoteUserResponse*        tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRemoteUser" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse*        tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse*        tds__SetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    _tds__SetRemoteUser*                tds__SetRemoteUser,	///< Input parameter
    _tds__SetRemoteUserResponse*        tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetUsers" of service binding "DeviceBinding"

/**

Operation details:
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse*             tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse*             tds__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    _tds__GetUsers*                     tds__GetUsers,	///< Input parameter
    _tds__GetUsersResponse*             tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__CreateUsers" of service binding "DeviceBinding"

/**

Operation details:
This operation creates new device users and corresponding credentials on a device
for authentication purposes.
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse*          tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse*          tds__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    _tds__CreateUsers*                  tds__CreateUsers,	///< Input parameter
    _tds__CreateUsersResponse*          tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteUsers" of service binding "DeviceBinding"

/**

Operation details:
This operation deletes users on a device. The device shall support deletion of device
users and their credentials
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse*          tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse*          tds__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    _tds__DeleteUsers*                  tds__DeleteUsers,	///< Input parameter
    _tds__DeleteUsersResponse*          tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetUser" of service binding "DeviceBinding"

/**

Operation details:
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command.
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse*              tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse*              tds__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    _tds__SetUser*                      tds__SetUser,	///< Input parameter
    _tds__SetUserResponse*              tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding"

/**

Operation details:
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse*           tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse*           tds__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,	///< Input parameter
    _tds__GetWsdlUrlResponse*           tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCapabilities" of service binding "DeviceBinding"

/**

Operation details:
Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse*      tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse*      tds__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    _tds__GetCapabilities*              tds__GetCapabilities,	///< Input parameter
    _tds__GetCapabilitiesResponse*      tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDPAddresses" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse*       tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse*       tds__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    _tds__SetDPAddresses*               tds__SetDPAddresses,	///< Input parameter
    _tds__SetDPAddressesResponse*       tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetHostname" of service binding "DeviceBinding"

/**

Operation details:
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse*          tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse*          tds__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    _tds__GetHostname*                  tds__GetHostname,	///< Input parameter
    _tds__GetHostnameResponse*          tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetHostname" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952,
				other string shall be considered as invalid strings.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse*          tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse*          tds__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    _tds__SetHostname*                  tds__SetHostname,	///< Input parameter
    _tds__SetHostnameResponse*          tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding"

/**

Operation details:
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse*  tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse*  tds__SetHostnameFromDHCPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,	///< Input parameter
    _tds__SetHostnameFromDHCPResponse*  tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDNS" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse*               tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse*               tds__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    _tds__GetDNS*                       tds__GetDNS,	///< Input parameter
    _tds__GetDNSResponse*               tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDNS" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse*               tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse*               tds__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    _tds__SetDNS*                       tds__SetDNS,	///< Input parameter
    _tds__SetDNSResponse*               tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNTP" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse*               tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse*               tds__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    _tds__GetNTP*                       tds__GetNTP,	///< Input parameter
    _tds__GetNTPResponse*               tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNTP" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952,
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse*               tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse*               tds__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    _tds__SetNTP*                       tds__SetNTP,	///< Input parameter
    _tds__SetNTPResponse*               tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse*        tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse*        tds__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,	///< Input parameter
    _tds__GetDynamicDNSResponse*        tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse*        tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse*        tds__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,	///< Input parameter
    _tds__SetDynamicDNSResponse*        tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse* tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse* tds__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,	///< Input parameter
    _tds__GetNetworkInterfacesResponse* tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse* tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse* tds__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,	///< Input parameter
    _tds__SetNetworkInterfacesResponse* tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding"

/**

Operation details:
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse*  tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse*  tds__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,	///< Input parameter
    _tds__GetNetworkProtocolsResponse*  tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding"

/**

Operation details:
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse*  tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse*  tds__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,	///< Input parameter
    _tds__SetNetworkProtocolsResponse*  tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse* tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse* tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,	///< Input parameter
    _tds__GetNetworkDefaultGatewayResponse* tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse* tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse* tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,	///< Input parameter
    _tds__SetNetworkDefaultGatewayResponse* tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse* tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse* tds__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,	///< Input parameter
    _tds__GetZeroConfigurationResponse* tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse* tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse* tds__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,	///< Input parameter
    _tds__SetZeroConfigurationResponse* tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse*   tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse*   tds__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,	///< Input parameter
    _tds__GetIPAddressFilterResponse*   tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse*   tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse*   tds__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,	///< Input parameter
    _tds__SetIPAddressFilterResponse*   tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse*   tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse*   tds__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,	///< Input parameter
    _tds__AddIPAddressFilterResponse*   tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse* tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse* tds__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,	///< Input parameter
    _tds__RemoveIPAddressFilterResponse* tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding"

/**

Operation details:
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse*      tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse*      tds__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,	///< Input parameter
    _tds__GetAccessPolicyResponse*      tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding"

/**

Operation details:
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse*      tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse*      tds__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,	///< Input parameter
    _tds__SetAccessPolicyResponse*      tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__CreateCertificate" of service binding "DeviceBinding"

/**

Operation details:
This operation generates a private/public key pair and also can create a self-signed
device
				certificate as a result of key pair generation.
The certificate is created using a suitable
				onboard key pair generation mechanism.<br/>
				If a device supports onboard key pair generation,
the device that supports TLS shall support
				this certificate creation command. And also, if
a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support
this command for the purpose of key pair
				generation. Certificates and key pairs are identified
using certificate IDs. These IDs are either
				chosen by the certificate generation requester or
by the device (in case that no ID value is
				given).

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse*    tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse*    tds__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    _tds__CreateCertificate*            tds__CreateCertificate,	///< Input parameter
    _tds__CreateCertificateResponse*    tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCertificates" of service binding "DeviceBinding"

/**

Operation details:
This operation gets all device server certificates (including self-signed) for the
purpose of TLS
				authentication and all device client certificates
for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates
and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted
root certificates). The certificates are
				returned as binary data. A device that supports
TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse*      tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse*      tds__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    _tds__GetCertificates*              tds__GetCertificates,	///< Input parameter
    _tds__GetCertificatesResponse*      tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding"

/**

Operation details:
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse* tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse* tds__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,	///< Input parameter
    _tds__GetCertificatesStatusResponse* tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding"

/**

Operation details:
This operation is specific to TLS functionality. This operation sets the status
(enable/disable)
				of the device TLS server certificates. A device
that supports TLS shall support this command.
				Typically only one device server certificate is
allowed to be enabled at a time.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse* tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse* tds__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,	///< Input parameter
    _tds__SetCertificatesStatusResponse* tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteCertificates" of service binding "DeviceBinding"

/**

Operation details:
This operation deletes a certificate or multiple certificates. The device MAY also
delete a
				private/public key pair which is coupled with the
certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support
the deletion of a certificate or multiple
				certificates through this command. Either all certificates
are deleted successfully or a fault
				message shall be returned without deleting any certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse*   tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse*   tds__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    _tds__DeleteCertificates*           tds__DeleteCertificates,	///< Input parameter
    _tds__DeleteCertificatesResponse*   tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding"

/**

Operation details:
This operation requests a PKCS #10 certificate signature request from the device.
The
				returned information field shall be either formatted
exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command
to work, the device must already have
				a private/public key pair. This key pair should
be referred by CertificateID as specified in the
				input parameter description. This CertificateID
refers to the key pair generated using
				CreateCertificate command.<br/>
				A device that support onboard key pair generation
that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse*     tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse*     tds__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,	///< Input parameter
    _tds__GetPkcs10RequestResponse*     tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__LoadCertificates" of service binding "DeviceBinding"

/**

Operation details:
TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the
PKCS#10
				certificate request command can be loaded into the
device using this command (see Section
				8.4.13). The certificate ID in the request shall
be present. The device may sort the received
				certificate(s) based on the public key and subject
information in the certificate(s).
				The certificate ID in the request will be the ID
value the client wish to have. The device is
				supposed to scan the generated key pairs present
in the device to identify which is the
				correspondent key pair with the loaded certificate
and then make the link between the
				certificate and the key pair.<br/>
				A device that supports onboard key pair generation
that support either TLS or IEEE 802.1X
				shall support this command.<br/>
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				This command is applicable to any device type, although
the parameter name is called for
				historical reasons NVTCertificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse*     tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse*     tds__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    _tds__LoadCertificates*             tds__LoadCertificates,	///< Input parameter
    _tds__LoadCertificatesResponse*     tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding"

/**

Operation details:
This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse* tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse* tds__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,	///< Input parameter
    _tds__GetClientCertificateModeResponse* tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding"

/**

Operation details:
This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse* tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse* tds__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,	///< Input parameter
    _tds__SetClientCertificateModeResponse* tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding"

/**

Operation details:
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse* tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse* tds__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,	///< Input parameter
    _tds__SetRelayOutputSettingsResponse* tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding"

/**

Operation details:
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding"

/**

Operation details:
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp,
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse* tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse* tds__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,	///< Input parameter
    _tds__SendAuxiliaryCommandResponse* tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCACertificates" of service binding "DeviceBinding"

/**

Operation details:
CA certificates will be loaded into a device and be used for the sake of following
two cases.
				The one is for the purpose of TLS client authentication
in TLS server function. The other one
				is for the purpose of Authentication Server authentication
in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a
device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this
command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683]
DER [X.690] encoding rules.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse*    tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse*    tds__GetCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    _tds__GetCACertificates*            tds__GetCACertificates,	///< Input parameter
    _tds__GetCACertificatesResponse*    tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding"

/**

Operation details:
There might be some cases that a Certificate Authority or some other equivalent
creates a
				certificate without having PKCS#10 certificate signing
request. In such cases, the certificate
				will be bundled in conjunction with its private
key. This command will be used for such use
				case scenarios. The certificate ID in the request
is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified
in the request, device can choose the ID
				accordingly.<br/>
				This operation imports a private/public key pair
into the device.
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				A device that does not support onboard key pair
generation and support either TLS or IEEE
				802.1X using client certificate shall support this
command. A device that support onboard key
				pair generation MAY support this command. The security
policy of a device that supports this
				operation should make sure that the private key
is sufficiently protected.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse* tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse* tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    _tds__LoadCertificateWithPrivateKeyResponse* tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding"

/**

Operation details:
This operation requests the information of a certificate specified by certificate
ID. The device
				should respond with its Issuer DN, Subject
DN, Key usage, "Extended key usage, Key
				Length, Version, Serial Number, Signature
Algorithm and Validity data as the
				information of the certificate, as long as the device
can retrieve such information from the
				specified certificate.<br/>
				A device that supports either TLS or IEEE 802.1X
should support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse* tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse* tds__GetCertificateInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,	///< Input parameter
    _tds__GetCertificateInformationResponse* tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__LoadCACertificates" of service binding "DeviceBinding"

/**

Operation details:
This command is used when it is necessary to load trusted CA certificates or trusted
root
				certificates for the purpose of verification for
its counterpart i.e. client certificate verification in
				TLS function or server certificate verification
in IEEE 802.1X function.<br/>
				A device that support either TLS or IEEE 802.1X
shall support this command. As for the
				supported certificate format, either DER format
or PEM format is possible to be used. But a
				device that support this command shall support at
least DER format as supported format type.
				The device may sort the received certificate(s)
based on the public key and subject
				information in the certificate(s). Either all CA
certificates are loaded successfully or a fault
				message shall be returned without loading any CA
certificate.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse*   tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse*   tds__LoadCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    _tds__LoadCACertificates*           tds__LoadCACertificates,	///< Input parameter
    _tds__LoadCACertificatesResponse*   tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:
This operation newly creates IEEE 802.1X configuration parameter set of the device.
The
				device shall support this command if it supports
IEEE 802.1X. If the device receives this
				request with already existing configuration token
(Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken '
error to indicate there is some configuration
				conflict.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse* tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse* tds__CreateDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,	///< Input parameter
    _tds__CreateDot1XConfigurationResponse* tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:
While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing
IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall
support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse* tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse* tds__SetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,	///< Input parameter
    _tds__SetDot1XConfigurationResponse* tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:
This operation gets one IEEE 802.1X configuration parameter set from the device
by
				specifying the configuration token (Dot1XConfigurationToken).<br/>
				A device that supports IEEE 802.1X shall support
this command.
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse* tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse* tds__GetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,	///< Input parameter
    _tds__GetDot1XConfigurationResponse* tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding"

/**

Operation details:
This operation gets all the existing IEEE 802.1X configuration parameter sets from
the device.
				The device shall respond with all the IEEE 802.1X
configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing
and how they are configured.<br/>
				A device that support IEEE 802.1X shall support
this command.<br/>
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse* tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse* tds__GetDot1XConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,	///< Input parameter
    _tds__GetDot1XConfigurationsResponse* tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:
This operation deletes an IEEE 802.1X configuration parameter set from the device.
Which
				configuration should be deleted is specified by
the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support
this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse* tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse* tds__DeleteDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,	///< Input parameter
    _tds__DeleteDot1XConfigurationResponse* tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding"

/**

Operation details:
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse* tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse* tds__GetDot11CapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,	///< Input parameter
    _tds__GetDot11CapabilitiesResponse* tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDot11Status" of service binding "DeviceBinding"

/**

Operation details:
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse*       tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse*       tds__GetDot11StatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    _tds__GetDot11Status*               tds__GetDot11Status,	///< Input parameter
    _tds__GetDot11StatusResponse*       tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding"

/**

Operation details:
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse* tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse* tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,	///< Input parameter
    _tds__ScanAvailableDot11NetworksResponse* tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemUris" of service binding "DeviceBinding"

/**

Operation details:
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse*        tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse*        tds__GetSystemUrisResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    _tds__GetSystemUris*                tds__GetSystemUris,	///< Input parameter
    _tds__GetSystemUrisResponse*        tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding"

/**

Operation details:
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse* tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse* tds__StartFirmwareUpgradeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,	///< Input parameter
    _tds__StartFirmwareUpgradeResponse* tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__StartSystemRestore" of service binding "DeviceBinding"

/**

Operation details:
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse*   tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse*   tds__StartSystemRestoreResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    _tds__StartSystemRestore*           tds__StartSystemRestore,	///< Input parameter
    _tds__StartSystemRestoreResponse*   tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding"

/**

Operation details:

			This operation lists all existing storage configurations
for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,
    // output parameters:
    _tds__GetStorageConfigurationsResponse* tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,
    // output parameters:
    _tds__GetStorageConfigurationsResponse* tds__GetStorageConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,	///< Input parameter
    _tds__GetStorageConfigurationsResponse* tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding"

/**

Operation details:

			This operation creates a new storage configuration.
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,
    // output parameters:
    _tds__CreateStorageConfigurationResponse* tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,
    // output parameters:
    _tds__CreateStorageConfigurationResponse* tds__CreateStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,	///< Input parameter
    _tds__CreateStorageConfigurationResponse* tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding"

/**

Operation details:

			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,
    // output parameters:
    _tds__GetStorageConfigurationResponse* tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,
    // output parameters:
    _tds__GetStorageConfigurationResponse* tds__GetStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,	///< Input parameter
    _tds__GetStorageConfigurationResponse* tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding"

/**

Operation details:

			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,
    // output parameters:
    _tds__SetStorageConfigurationResponse* tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,
    // output parameters:
    _tds__SetStorageConfigurationResponse* tds__SetStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,	///< Input parameter
    _tds__SetStorageConfigurationResponse* tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding"

/**

Operation details:

			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,
    // output parameters:
    _tds__DeleteStorageConfigurationResponse* tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,
    // output parameters:
    _tds__DeleteStorageConfigurationResponse* tds__DeleteStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,	///< Input parameter
    _tds__DeleteStorageConfigurationResponse* tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetGeoLocation" of service binding "DeviceBinding"

/**

Operation details:

				This operation lists all existing geo location configurations
for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetGeoLocation*               tds__GetGeoLocation,
    // output parameters:
    _tds__GetGeoLocationResponse*       tds__GetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__GetGeoLocation*               tds__GetGeoLocation,
    // output parameters:
    _tds__GetGeoLocationResponse*       tds__GetGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetGeoLocation SOAP
//gsoap tds  service method-style:	GetGeoLocation document
//gsoap tds  service method-encoding:	GetGeoLocation literal
//gsoap tds  service method-input-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocation
//gsoap tds  service method-output-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse
int __tds__GetGeoLocation(
    _tds__GetGeoLocation*               tds__GetGeoLocation,	///< Input parameter
    _tds__GetGeoLocationResponse*       tds__GetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetGeoLocation" of service binding "DeviceBinding"

/**

Operation details:

				This operation allows to modify one or more geo
configuration entries.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetGeoLocation*               tds__SetGeoLocation,
    // output parameters:
    _tds__SetGeoLocationResponse*       tds__SetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__SetGeoLocation*               tds__SetGeoLocation,
    // output parameters:
    _tds__SetGeoLocationResponse*       tds__SetGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetGeoLocation SOAP
//gsoap tds  service method-style:	SetGeoLocation document
//gsoap tds  service method-encoding:	SetGeoLocation literal
//gsoap tds  service method-input-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocation
//gsoap tds  service method-output-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse
int __tds__SetGeoLocation(
    _tds__SetGeoLocation*               tds__SetGeoLocation,	///< Input parameter
    _tds__SetGeoLocationResponse*       tds__SetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteGeoLocation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteGeoLocation" of service binding "DeviceBinding"

/**

Operation details:

				This operation deletes the given geo location entries.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,
    // output parameters:
    _tds__DeleteGeoLocationResponse*    tds__DeleteGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,
    // output parameters:
    _tds__DeleteGeoLocationResponse*    tds__DeleteGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteGeoLocation SOAP
//gsoap tds  service method-style:	DeleteGeoLocation document
//gsoap tds  service method-encoding:	DeleteGeoLocation literal
//gsoap tds  service method-input-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation
//gsoap tds  service method-output-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse
int __tds__DeleteGeoLocation(
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,	///< Input parameter
    _tds__DeleteGeoLocationResponse*    tds__DeleteGeoLocationResponse	///< Output parameter
);

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding  "DeviceBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PullMessages                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__PullMessages" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse"

  - SOAP Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__PullMessages*                 tev__PullMessages,
    // output parameters:
    _tev__PullMessagesResponse*         tev__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PullMessages(
    struct soap *soap,
    // input parameters:
    _tev__PullMessages*                 tev__PullMessages,
    // output parameters:
    _tev__PullMessagesResponse*         tev__PullMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	PullMessages SOAP
//gsoap tev  service method-style:	PullMessages document
//gsoap tev  service method-encoding:	PullMessages literal
//gsoap tev  service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev  service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse
//gsoap tev  service method-fault:	PullMessages tev__PullMessagesFaultResponse
int __tev__PullMessages(
    _tev__PullMessages*                 tev__PullMessages,	///< Input parameter
    _tev__PullMessagesResponse*         tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Seek                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Seek" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Seek(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__Seek*                         tev__Seek,
    // output parameters:
    _tev__SeekResponse*                 tev__SeekResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Seek(
    struct soap *soap,
    // input parameters:
    _tev__Seek*                         tev__Seek,
    // output parameters:
    _tev__SeekResponse*                 tev__SeekResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Seek SOAP
//gsoap tev  service method-style:	Seek document
//gsoap tev  service method-encoding:	Seek literal
//gsoap tev  service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tev  service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse
int __tev__Seek(
    _tev__Seek*                         tev__Seek,	///< Input parameter
    _tev__SeekResponse*                 tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding"

/**

Operation details:
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,
    // output parameters:
    _tev__SetSynchronizationPointResponse* tev__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,
    // output parameters:
    _tev__SetSynchronizationPointResponse* tev__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tev  service method-style:	SetSynchronizationPoint document
//gsoap tev  service method-encoding:	SetSynchronizationPoint literal
//gsoap tev  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse
int __tev__SetSynchronizationPoint(
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,	///< Input parameter
    _tev__SetSynchronizationPointResponse* tev__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Unsubscribe" of service binding "PullPointSubscriptionBinding"

/**

Operation details:
The device shall provide the following Unsubscribe command for all SubscriptionManager
endpoints returned by the CreatePullPointSubscription command.<br/>
				This command shall terminate the lifetime of a pull
point.
			

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe SOAP
//gsoap tev  service method-style:	Unsubscribe document
//gsoap tev  service method-encoding:	Unsubscribe literal
//gsoap tev  service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__GetServiceCapabilities" of service binding "PullPointSubscriptionBinding"

/**

Operation details:
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,
    // output parameters:
    _tev__GetServiceCapabilitiesResponse* tev__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,
    // output parameters:
    _tev__GetServiceCapabilitiesResponse* tev__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tev  service method-style:	GetServiceCapabilities document
//gsoap tev  service method-encoding:	GetServiceCapabilities literal
//gsoap tev  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest
//gsoap tev  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse
int __tev__GetServiceCapabilities(
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,	///< Input parameter
    _tev__GetServiceCapabilitiesResponse* tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPointSubscription                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__CreatePullPointSubscription" of service binding "PullPointSubscriptionBinding"

/**

Operation details:
This method returns a PullPointSubscription that can be polled using PullMessages.
				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,
    // output parameters:
    _tev__CreatePullPointSubscriptionResponse* tev__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPointSubscription(
    struct soap *soap,
    // input parameters:
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,
    // output parameters:
    _tev__CreatePullPointSubscriptionResponse* tev__CreatePullPointSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	CreatePullPointSubscription SOAP
//gsoap tev  service method-style:	CreatePullPointSubscription document
//gsoap tev  service method-encoding:	CreatePullPointSubscription literal
//gsoap tev  service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev  service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse
//gsoap tev  service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __tev__CreatePullPointSubscription(
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,	///< Input parameter
    _tev__CreatePullPointSubscriptionResponse* tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetEventProperties                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__GetEventProperties" of service binding "PullPointSubscriptionBinding"

/**

Operation details:
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tev__GetEventProperties*           tev__GetEventProperties,
    // output parameters:
    _tev__GetEventPropertiesResponse*   tev__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetEventProperties(
    struct soap *soap,
    // input parameters:
    _tev__GetEventProperties*           tev__GetEventProperties,
    // output parameters:
    _tev__GetEventPropertiesResponse*   tev__GetEventPropertiesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetEventProperties SOAP
//gsoap tev  service method-style:	GetEventProperties document
//gsoap tev  service method-encoding:	GetEventProperties literal
//gsoap tev  service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev  service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse
int __tev__GetEventProperties(
    _tev__GetEventProperties*           tev__GetEventProperties,	///< Input parameter
    _tev__GetEventPropertiesResponse*   tev__GetEventPropertiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Renew" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse*               wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew(
    struct soap *soap,
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse*               wsnt__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Renew SOAP
//gsoap tev  service method-style:	Renew document
//gsoap tev  service method-encoding:	Renew literal
//gsoap tev  service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tev__Renew(
    _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
    _wsnt__RenewResponse*               wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe_                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Unsubscribe_" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe_(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe_ SOAP
//gsoap tev  service method-style:	Unsubscribe_ document
//gsoap tev  service method-encoding:	Unsubscribe_ literal
//gsoap tev  service method-input-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe_ http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe_ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe_(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Subscribe                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Subscribe" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Subscribe*                   wsnt__Subscribe,
    // output parameters:
    _wsnt__SubscribeResponse*           wsnt__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Subscribe(
    struct soap *soap,
    // input parameters:
    _wsnt__Subscribe*                   wsnt__Subscribe,
    // output parameters:
    _wsnt__SubscribeResponse*           wsnt__SubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Subscribe SOAP
//gsoap tev  service method-style:	Subscribe document
//gsoap tev  service method-encoding:	Subscribe literal
//gsoap tev  service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev  service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tev  service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tev  service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tev  service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tev__Subscribe(
    _wsnt__Subscribe*                   wsnt__Subscribe,	///< Input parameter
    _wsnt__SubscribeResponse*           wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetCurrentMessage                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__GetCurrentMessage" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,
    // output parameters:
    _wsnt__GetCurrentMessageResponse*   wsnt__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetCurrentMessage(
    struct soap *soap,
    // input parameters:
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,
    // output parameters:
    _wsnt__GetCurrentMessageResponse*   wsnt__GetCurrentMessageResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetCurrentMessage SOAP
//gsoap tev  service method-style:	GetCurrentMessage document
//gsoap tev  service method-encoding:	GetCurrentMessage literal
//gsoap tev  service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev  service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tev  service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tev  service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tev__GetCurrentMessage(
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,	///< Input parameter
    _wsnt__GetCurrentMessageResponse*   wsnt__GetCurrentMessageResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Notify" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - One-way service request message

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify(
    struct soap *soap,
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Notify SOAP
//gsoap tev  service method-style:	Notify document
//gsoap tev  service method-encoding:	Notify literal
//gsoap tev  service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev__Notify(
    _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__GetMessages                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__GetMessages" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__GetMessages*                 wsnt__GetMessages,
    // output parameters:
    _wsnt__GetMessagesResponse*         wsnt__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__GetMessages(
    struct soap *soap,
    // input parameters:
    _wsnt__GetMessages*                 wsnt__GetMessages,
    // output parameters:
    _wsnt__GetMessagesResponse*         wsnt__GetMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	GetMessages SOAP
//gsoap tev  service method-style:	GetMessages document
//gsoap tev  service method-encoding:	GetMessages literal
//gsoap tev  service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev  service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tev  service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tev__GetMessages(
    _wsnt__GetMessages*                 wsnt__GetMessages,	///< Input parameter
    _wsnt__GetMessagesResponse*         wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__DestroyPullPoint                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__DestroyPullPoint" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,
    // output parameters:
    _wsnt__DestroyPullPointResponse*    wsnt__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__DestroyPullPoint(
    struct soap *soap,
    // input parameters:
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,
    // output parameters:
    _wsnt__DestroyPullPointResponse*    wsnt__DestroyPullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	DestroyPullPoint SOAP
//gsoap tev  service method-style:	DestroyPullPoint document
//gsoap tev  service method-encoding:	DestroyPullPoint literal
//gsoap tev  service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev  service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tev  service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tev__DestroyPullPoint(
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,	///< Input parameter
    _wsnt__DestroyPullPointResponse*    wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Notify_                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Notify_" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - One-way service request message

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_send___tev__Notify_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Notify_(
    struct soap *soap,
    // input parameters:
    _wsnt__Notify*                      wsnt__Notify,
    // output parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Notify_ SOAP
//gsoap tev  service method-style:	Notify_ document
//gsoap tev  service method-encoding:	Notify_ literal
//gsoap tev  service method-input-action:	Notify_ http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev__Notify_(
    _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__CreatePullPoint                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__CreatePullPoint" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,
    // output parameters:
    _wsnt__CreatePullPointResponse*     wsnt__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__CreatePullPoint(
    struct soap *soap,
    // input parameters:
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,
    // output parameters:
    _wsnt__CreatePullPointResponse*     wsnt__CreatePullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	CreatePullPoint SOAP
//gsoap tev  service method-style:	CreatePullPoint document
//gsoap tev  service method-encoding:	CreatePullPoint literal
//gsoap tev  service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev  service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tev  service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tev__CreatePullPoint(
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,	///< Input parameter
    _wsnt__CreatePullPointResponse*     wsnt__CreatePullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Renew_                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Renew_" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Renew_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse*               wsnt__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Renew_(
    struct soap *soap,
    // input parameters:
    _wsnt__Renew*                       wsnt__Renew,
    // output parameters:
    _wsnt__RenewResponse*               wsnt__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Renew_ SOAP
//gsoap tev  service method-style:	Renew_ document
//gsoap tev  service method-encoding:	Renew_ literal
//gsoap tev  service method-input-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tev  service method-output-action:	Renew_ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tev  service method-fault:	Renew_ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Renew_ wsnt__UnacceptableTerminationTimeFault
int __tev__Renew_(
    _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
    _wsnt__RenewResponse*               wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__Unsubscribe__                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__Unsubscribe__" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__Unsubscribe__(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__Unsubscribe__(
    struct soap *soap,
    // input parameters:
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,
    // output parameters:
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	Unsubscribe__ SOAP
//gsoap tev  service method-style:	Unsubscribe__ document
//gsoap tev  service method-encoding:	Unsubscribe__ literal
//gsoap tev  service method-input-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tev  service method-output-action:	Unsubscribe__ http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tev  service method-fault:	Unsubscribe__ wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	Unsubscribe__ wsnt__UnableToDestroySubscriptionFault
int __tev__Unsubscribe__(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse*         wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__PauseSubscription" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,
    // output parameters:
    _wsnt__PauseSubscriptionResponse*   wsnt__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__PauseSubscription(
    struct soap *soap,
    // input parameters:
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,
    // output parameters:
    _wsnt__PauseSubscriptionResponse*   wsnt__PauseSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	PauseSubscription SOAP
//gsoap tev  service method-style:	PauseSubscription document
//gsoap tev  service method-encoding:	PauseSubscription literal
//gsoap tev  service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tev  service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tev  service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tev__PauseSubscription(
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,	///< Input parameter
    _wsnt__PauseSubscriptionResponse*   wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev__ResumeSubscription" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - SOAP Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,
    // output parameters:
    _wsnt__ResumeSubscriptionResponse*  wsnt__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev__ResumeSubscription(
    struct soap *soap,
    // input parameters:
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,
    // output parameters:
    _wsnt__ResumeSubscriptionResponse*  wsnt__ResumeSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev  service method-protocol:	ResumeSubscription SOAP
//gsoap tev  service method-style:	ResumeSubscription document
//gsoap tev  service method-encoding:	ResumeSubscription literal
//gsoap tev  service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tev  service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tev  service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tev  service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tev__ResumeSubscription(
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,	///< Input parameter
    _wsnt__ResumeSubscriptionResponse*  wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding  "PullPointSubscriptionBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ImagingBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetServiceCapabilities" of service binding "ImagingBinding"

/**

Operation details:
Returns the capabilities of the imaging service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetServiceCapabilities*      timg__GetServiceCapabilities,
    // output parameters:
    _timg__GetServiceCapabilitiesResponse* timg__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _timg__GetServiceCapabilities*      timg__GetServiceCapabilities,
    // output parameters:
    _timg__GetServiceCapabilitiesResponse* timg__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetServiceCapabilities SOAP
//gsoap timg service method-style:	GetServiceCapabilities document
//gsoap timg service method-encoding:	GetServiceCapabilities literal
//gsoap timg service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities
//gsoap timg service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse
int __timg__GetServiceCapabilities(
    _timg__GetServiceCapabilities*      timg__GetServiceCapabilities,	///< Input parameter
    _timg__GetServiceCapabilitiesResponse* timg__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetImagingSettings" of service binding "ImagingBinding"

/**

Operation details:
Get the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetImagingSettings*          timg__GetImagingSettings,
    // output parameters:
    _timg__GetImagingSettingsResponse*  timg__GetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetImagingSettings(
    struct soap *soap,
    // input parameters:
    _timg__GetImagingSettings*          timg__GetImagingSettings,
    // output parameters:
    _timg__GetImagingSettingsResponse*  timg__GetImagingSettingsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetImagingSettings SOAP
//gsoap timg service method-style:	GetImagingSettings document
//gsoap timg service method-encoding:	GetImagingSettings literal
//gsoap timg service method-input-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings
//gsoap timg service method-output-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse
int __timg__GetImagingSettings(
    _timg__GetImagingSettings*          timg__GetImagingSettings,	///< Input parameter
    _timg__GetImagingSettingsResponse*  timg__GetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__SetImagingSettings" of service binding "ImagingBinding"

/**

Operation details:
Set the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__SetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__SetImagingSettings*          timg__SetImagingSettings,
    // output parameters:
    _timg__SetImagingSettingsResponse*  timg__SetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__SetImagingSettings(
    struct soap *soap,
    // input parameters:
    _timg__SetImagingSettings*          timg__SetImagingSettings,
    // output parameters:
    _timg__SetImagingSettingsResponse*  timg__SetImagingSettingsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	SetImagingSettings SOAP
//gsoap timg service method-style:	SetImagingSettings document
//gsoap timg service method-encoding:	SetImagingSettings literal
//gsoap timg service method-input-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings
//gsoap timg service method-output-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse
int __timg__SetImagingSettings(
    _timg__SetImagingSettings*          timg__SetImagingSettings,	///< Input parameter
    _timg__SetImagingSettingsResponse*  timg__SetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetOptions                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetOptions" of service binding "ImagingBinding"

/**

Operation details:
This operation gets the valid ranges for the imaging parameters that have device
specific ranges.
			This command is mandatory for all device implementing the
imaging service. The command returns all supported parameters and their ranges
			such that these can be applied to the SetImagingSettings
command.<br/>
			For read-only parameters which cannot be modified via the
SetImagingSettings command only a single option or identical Min and Max values
			is provided.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetOptions*                  timg__GetOptions,
    // output parameters:
    _timg__GetOptionsResponse*          timg__GetOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetOptions(
    struct soap *soap,
    // input parameters:
    _timg__GetOptions*                  timg__GetOptions,
    // output parameters:
    _timg__GetOptionsResponse*          timg__GetOptionsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetOptions SOAP
//gsoap timg service method-style:	GetOptions document
//gsoap timg service method-encoding:	GetOptions literal
//gsoap timg service method-input-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptions
//gsoap timg service method-output-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse
int __timg__GetOptions(
    _timg__GetOptions*                  timg__GetOptions,	///< Input parameter
    _timg__GetOptionsResponse*          timg__GetOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Move                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__Move" of service binding "ImagingBinding"

/**

Operation details:
The Move command moves the focus lens in an absolute, a relative or in a continuous
manner from its current position.
			The speed argument is optional for absolute and relative
control, but required for continuous. If no speed argument is used, the default
speed is used.
			Focus adjustments through this operation will turn off the
autofocus. A device with support for remote focus control should support absolute,
			relative or continuous control through the Move operation.
The supported MoveOpions are signalled via the GetMoveOptions command.
			At least one focus control capability is required for this
operation to be functional. <br/>
			The move operation contains the following commands:<br/>
				<b>Absolute</b>  Requires position parameter
and optionally takes a speed argument. A unitless type is used by default for focus
positioning and speed. Optionally, if supported, the position may be requested
in m-1 units. <br/>
				<b>Relative</b>  Requires distance parameter
and optionally takes a speed argument. Negative distance means negative direction.
			<b>Continuous</b>  Requires a speed argument. Negative
speed argument means negative direction.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/MoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Move(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__Move*                        timg__Move,
    // output parameters:
    _timg__MoveResponse*                timg__MoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Move(
    struct soap *soap,
    // input parameters:
    _timg__Move*                        timg__Move,
    // output parameters:
    _timg__MoveResponse*                timg__MoveResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	Move SOAP
//gsoap timg service method-style:	Move document
//gsoap timg service method-encoding:	Move literal
//gsoap timg service method-input-action:	Move http://www.onvif.org/ver20/imaging/wsdl/Move
//gsoap timg service method-output-action:	Move http://www.onvif.org/ver20/imaging/wsdl/MoveResponse
int __timg__Move(
    _timg__Move*                        timg__Move,	///< Input parameter
    _timg__MoveResponse*                timg__MoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__Stop" of service binding "ImagingBinding"

/**

Operation details:
The Stop command stops all ongoing focus movements of the lense. A device with support
for remote focus control as signalled via
			the GetMoveOptions supports this command. <br/>The operation
will not affect ongoing autofocus operation.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__Stop*                        timg__Stop,
    // output parameters:
    _timg__StopResponse*                timg__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Stop(
    struct soap *soap,
    // input parameters:
    _timg__Stop*                        timg__Stop,
    // output parameters:
    _timg__StopResponse*                timg__StopResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	Stop SOAP
//gsoap timg service method-style:	Stop document
//gsoap timg service method-encoding:	Stop literal
//gsoap timg service method-input-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStop
//gsoap timg service method-output-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse
int __timg__Stop(
    _timg__Stop*                        timg__Stop,	///< Input parameter
    _timg__StopResponse*                timg__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetStatus" of service binding "ImagingBinding"

/**

Operation details:
Via this command the current status of the Move operation can be requested. Supported
for this command is available if the support for the Move operation is signalled
via GetMoveOptions.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetStatus*                   timg__GetStatus,
    // output parameters:
    _timg__GetStatusResponse*           timg__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetStatus(
    struct soap *soap,
    // input parameters:
    _timg__GetStatus*                   timg__GetStatus,
    // output parameters:
    _timg__GetStatusResponse*           timg__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetStatus SOAP
//gsoap timg service method-style:	GetStatus document
//gsoap timg service method-encoding:	GetStatus literal
//gsoap timg service method-input-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatus
//gsoap timg service method-output-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse
int __timg__GetStatus(
    _timg__GetStatus*                   timg__GetStatus,	///< Input parameter
    _timg__GetStatusResponse*           timg__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetMoveOptions                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetMoveOptions" of service binding "ImagingBinding"

/**

Operation details:
Imaging move operation options supported for the Video source.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetMoveOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetMoveOptions*              timg__GetMoveOptions,
    // output parameters:
    _timg__GetMoveOptionsResponse*      timg__GetMoveOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetMoveOptions(
    struct soap *soap,
    // input parameters:
    _timg__GetMoveOptions*              timg__GetMoveOptions,
    // output parameters:
    _timg__GetMoveOptionsResponse*      timg__GetMoveOptionsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetMoveOptions SOAP
//gsoap timg service method-style:	GetMoveOptions document
//gsoap timg service method-encoding:	GetMoveOptions literal
//gsoap timg service method-input-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions
//gsoap timg service method-output-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse
int __timg__GetMoveOptions(
    _timg__GetMoveOptions*              timg__GetMoveOptions,	///< Input parameter
    _timg__GetMoveOptionsResponse*      timg__GetMoveOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetPresets" of service binding "ImagingBinding"

/**

Operation details:
Via this command the list of available Imaging Presets can be requested.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetPresets*                  timg__GetPresets,
    // output parameters:
    _timg__GetPresetsResponse*          timg__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetPresets(
    struct soap *soap,
    // input parameters:
    _timg__GetPresets*                  timg__GetPresets,
    // output parameters:
    _timg__GetPresetsResponse*          timg__GetPresetsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetPresets SOAP
//gsoap timg service method-style:	GetPresets document
//gsoap timg service method-encoding:	GetPresets literal
//gsoap timg service method-input-action:	GetPresets http://www.onvif.org/ver20/imaging/wsdl/GetPresets
//gsoap timg service method-output-action:	GetPresets http://www.onvif.org/ver20/imaging/wsdl/GetPresetsResponse
int __timg__GetPresets(
    _timg__GetPresets*                  timg__GetPresets,	///< Input parameter
    _timg__GetPresetsResponse*          timg__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetCurrentPreset                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetCurrentPreset" of service binding "ImagingBinding"

/**

Operation details:
Via this command the last Imaging Preset applied can be requested.
			If the camera configuration does not match any of the existing
Imaging Presets, the output of GetCurrentPreset shall be Empty.
			GetCurrentPreset shall return 0 if Imaging Presets are not
supported by the Video Source.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetCurrentPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__GetCurrentPreset*            timg__GetCurrentPreset,
    // output parameters:
    _timg__GetCurrentPresetResponse*    timg__GetCurrentPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetCurrentPreset(
    struct soap *soap,
    // input parameters:
    _timg__GetCurrentPreset*            timg__GetCurrentPreset,
    // output parameters:
    _timg__GetCurrentPresetResponse*    timg__GetCurrentPresetResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	GetCurrentPreset SOAP
//gsoap timg service method-style:	GetCurrentPreset document
//gsoap timg service method-encoding:	GetCurrentPreset literal
//gsoap timg service method-input-action:	GetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset
//gsoap timg service method-output-action:	GetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPresetResponse
int __timg__GetCurrentPreset(
    _timg__GetCurrentPreset*            timg__GetCurrentPreset,	///< Input parameter
    _timg__GetCurrentPresetResponse*    timg__GetCurrentPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetCurrentPreset                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__SetCurrentPreset" of service binding "ImagingBinding"

/**

Operation details:
The SetCurrentPreset command shall request a given Imaging Preset to be applied
to the specified Video Source.
			SetCurrentPreset shall only be available for Video Sources
with Imaging Presets Capability.
			Imaging Presets are defined by the Manufacturer, and offered
as a tool to simplify Imaging Settings adjustments for specific scene content.
			When the new Imaging Preset is applied by SetCurrentPreset,
the Device shall adjust the Video Source settings to match those defined by the
specified Imaging Preset.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__SetCurrentPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _timg__SetCurrentPreset*            timg__SetCurrentPreset,
    // output parameters:
    _timg__SetCurrentPresetResponse*    timg__SetCurrentPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__SetCurrentPreset(
    struct soap *soap,
    // input parameters:
    _timg__SetCurrentPreset*            timg__SetCurrentPreset,
    // output parameters:
    _timg__SetCurrentPresetResponse*    timg__SetCurrentPresetResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-protocol:	SetCurrentPreset SOAP
//gsoap timg service method-style:	SetCurrentPreset document
//gsoap timg service method-encoding:	SetCurrentPreset literal
//gsoap timg service method-input-action:	SetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset
//gsoap timg service method-output-action:	SetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPresetResponse
int __timg__SetCurrentPreset(
    _timg__SetCurrentPreset*            timg__SetCurrentPreset,	///< Input parameter
    _timg__SetCurrentPresetResponse*    timg__SetCurrentPresetResponse	///< Output parameter
);

/**

@page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_policy_enablers Policy Enablers of Binding  "ImagingBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceIOBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetServiceCapabilities" of service binding "DeviceIOBinding"

/**

Operation details:
Returns the capabilities of the device IO service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetServiceCapabilities*       tmd__GetServiceCapabilities,
    // output parameters:
    _tmd__GetServiceCapabilitiesResponse* tmd__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tmd__GetServiceCapabilities*       tmd__GetServiceCapabilities,
    // output parameters:
    _tmd__GetServiceCapabilitiesResponse* tmd__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tmd  service method-style:	GetServiceCapabilities document
//gsoap tmd  service method-encoding:	GetServiceCapabilities literal
//gsoap tmd  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities
//gsoap tmd  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse
int __tmd__GetServiceCapabilities(
    _tmd__GetServiceCapabilities*       tmd__GetServiceCapabilities,	///< Input parameter
    _tmd__GetServiceCapabilitiesResponse* tmd__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputOptions                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetRelayOutputOptions" of service binding "DeviceIOBinding"

/**

Operation details:
Request the available settings and ranges for one or all relay outputs. A device
that has one or more RelayOutputs should support this command.<br/>
				Two examples that illustrate usage:
				<ul>
					<li>
					1) Device supports range PT1S to PT120S:
					<pre>
<tmd:RelayOutputOptions token='44'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>1 120</tmd:DelayTimes>
</tmd:RelayOutputOptions>
							</pre>
					</li>
					<li>
					2) Device supports values PT0.5S, PT1S,
PT2s and PT1M:
					<pre>
<tmd:RelayOutputOptions token='123'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>0.5 1 2 60</tmd:DelayTimes>
  <tmd:Discrete>True</tmd:Discrete>
</tmd:RelayOutputOptions>
								</pre>
					</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetRelayOutputOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetRelayOutputOptions*        tmd__GetRelayOutputOptions,
    // output parameters:
    _tmd__GetRelayOutputOptionsResponse* tmd__GetRelayOutputOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetRelayOutputOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetRelayOutputOptions*        tmd__GetRelayOutputOptions,
    // output parameters:
    _tmd__GetRelayOutputOptionsResponse* tmd__GetRelayOutputOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetRelayOutputOptions SOAP
//gsoap tmd  service method-style:	GetRelayOutputOptions document
//gsoap tmd  service method-encoding:	GetRelayOutputOptions literal
//gsoap tmd  service method-input-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions
//gsoap tmd  service method-output-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse
int __tmd__GetRelayOutputOptions(
    _tmd__GetRelayOutputOptions*        tmd__GetRelayOutputOptions,	///< Input parameter
    _tmd__GetRelayOutputOptionsResponse* tmd__GetRelayOutputOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetAudioSources" of service binding "DeviceIOBinding"

/**

Operation details:
List all available audio sources for the device. The device that has one or more
audio sources shall support the listing of available audio inputs through the GetAudioSources
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    tmd__Get*                           tmd__GetAudioSources,
    // output parameters:
    tmd__GetResponse*                   tmd__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSources(
    struct soap *soap,
    // input parameters:
    tmd__Get*                           tmd__GetAudioSources,
    // output parameters:
    tmd__GetResponse*                   tmd__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetAudioSources SOAP
//gsoap tmd  service method-style:	GetAudioSources document
//gsoap tmd  service method-encoding:	GetAudioSources literal
//gsoap tmd  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources
//gsoap tmd  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse
int __tmd__GetAudioSources(
    tmd__Get*                           tmd__GetAudioSources,	///< Input parameter
    tmd__GetResponse*                   tmd__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetAudioOutputs" of service binding "DeviceIOBinding"

/**

Operation details:
List all available audio outputs of a device. A device that has one ore more physical
audio outputs shall support listing of available audio outputs through the GetAudioOutputs
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    tmd__Get*                           tmd__GetAudioOutputs,
    // output parameters:
    tmd__GetResponse*                   tmd__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    tmd__Get*                           tmd__GetAudioOutputs,
    // output parameters:
    tmd__GetResponse*                   tmd__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetAudioOutputs SOAP
//gsoap tmd  service method-style:	GetAudioOutputs document
//gsoap tmd  service method-encoding:	GetAudioOutputs literal
//gsoap tmd  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs
//gsoap tmd  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse
int __tmd__GetAudioOutputs(
    tmd__Get*                           tmd__GetAudioOutputs,	///< Input parameter
    tmd__GetResponse*                   tmd__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetVideoSources" of service binding "DeviceIOBinding"

/**

Operation details:
List all available video sources for the device. The device that has one or more
video inputs shall support the listing of available video sources through the GetVideoSources
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    tmd__Get*                           tmd__GetVideoSources,
    // output parameters:
    tmd__GetResponse*                   tmd__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSources(
    struct soap *soap,
    // input parameters:
    tmd__Get*                           tmd__GetVideoSources,
    // output parameters:
    tmd__GetResponse*                   tmd__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetVideoSources SOAP
//gsoap tmd  service method-style:	GetVideoSources document
//gsoap tmd  service method-encoding:	GetVideoSources literal
//gsoap tmd  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources
//gsoap tmd  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse
int __tmd__GetVideoSources(
    tmd__Get*                           tmd__GetVideoSources,	///< Input parameter
    tmd__GetResponse*                   tmd__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetVideoOutputs" of service binding "DeviceIOBinding"

/**

Operation details:
List all available video outputs of a device. A device that has one or more physical
video outputs shall support listing of available video outputs through the GetVideoOutputs
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetVideoOutputs*              tmd__GetVideoOutputs,
    // output parameters:
    _tmd__GetVideoOutputsResponse*      tmd__GetVideoOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputs(
    struct soap *soap,
    // input parameters:
    _tmd__GetVideoOutputs*              tmd__GetVideoOutputs,
    // output parameters:
    _tmd__GetVideoOutputsResponse*      tmd__GetVideoOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetVideoOutputs SOAP
//gsoap tmd  service method-style:	GetVideoOutputs document
//gsoap tmd  service method-encoding:	GetVideoOutputs literal
//gsoap tmd  service method-input-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs
//gsoap tmd  service method-output-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse
int __tmd__GetVideoOutputs(
    _tmd__GetVideoOutputs*              tmd__GetVideoOutputs,	///< Input parameter
    _tmd__GetVideoOutputsResponse*      tmd__GetVideoOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetVideoSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Get the video source configurations of a VideoSource. A device with one or more
video sources shall support the GetVideoSourceConfigurations command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetVideoSourceConfiguration*  tmd__GetVideoSourceConfiguration,
    // output parameters:
    _tmd__GetVideoSourceConfigurationResponse* tmd__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__GetVideoSourceConfiguration*  tmd__GetVideoSourceConfiguration,
    // output parameters:
    _tmd__GetVideoSourceConfigurationResponse* tmd__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse
int __tmd__GetVideoSourceConfiguration(
    _tmd__GetVideoSourceConfiguration*  tmd__GetVideoSourceConfiguration,	///< Input parameter
    _tmd__GetVideoSourceConfigurationResponse* tmd__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetVideoOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Get the configuration of a Video Output. A device that has one or more Video Outputs
shall support the retrieval of the VideoOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetVideoOutputConfiguration*  tmd__GetVideoOutputConfiguration,
    // output parameters:
    _tmd__GetVideoOutputConfigurationResponse* tmd__GetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__GetVideoOutputConfiguration*  tmd__GetVideoOutputConfiguration,
    // output parameters:
    _tmd__GetVideoOutputConfigurationResponse* tmd__GetVideoOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	GetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse
int __tmd__GetVideoOutputConfiguration(
    _tmd__GetVideoOutputConfiguration*  tmd__GetVideoOutputConfiguration,	///< Input parameter
    _tmd__GetVideoOutputConfigurationResponse* tmd__GetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetAudioSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
List the configuration of an Audio Input. A device with one or more audio inputs
shall support the GetAudioSourceConfiguration command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetAudioSourceConfiguration*  tmd__GetAudioSourceConfiguration,
    // output parameters:
    _tmd__GetAudioSourceConfigurationResponse* tmd__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__GetAudioSourceConfiguration*  tmd__GetAudioSourceConfiguration,
    // output parameters:
    _tmd__GetAudioSourceConfigurationResponse* tmd__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse
int __tmd__GetAudioSourceConfiguration(
    _tmd__GetAudioSourceConfiguration*  tmd__GetAudioSourceConfiguration,	///< Input parameter
    _tmd__GetAudioSourceConfigurationResponse* tmd__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetAudioOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Request the current configuration of a physical Audio output. A device that has
one or more AudioOutputs shall support the retrieval of the AudioOutputConfiguration
through this command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetAudioOutputConfiguration*  tmd__GetAudioOutputConfiguration,
    // output parameters:
    _tmd__GetAudioOutputConfigurationResponse* tmd__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__GetAudioOutputConfiguration*  tmd__GetAudioOutputConfiguration,
    // output parameters:
    _tmd__GetAudioOutputConfigurationResponse* tmd__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse
int __tmd__GetAudioOutputConfiguration(
    _tmd__GetAudioOutputConfiguration*  tmd__GetAudioOutputConfiguration,	///< Input parameter
    _tmd__GetAudioOutputConfigurationResponse* tmd__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetVideoSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Modify a video input configuration. A device that has one or more video sources
shall support the setting of the VideoSourceConfiguration through this command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetVideoSourceConfiguration*  tmd__SetVideoSourceConfiguration,
    // output parameters:
    _tmd__SetVideoSourceConfigurationResponse* tmd__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__SetVideoSourceConfiguration*  tmd__SetVideoSourceConfiguration,
    // output parameters:
    _tmd__SetVideoSourceConfigurationResponse* tmd__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse
int __tmd__SetVideoSourceConfiguration(
    _tmd__SetVideoSourceConfiguration*  tmd__SetVideoSourceConfiguration,	///< Input parameter
    _tmd__SetVideoSourceConfigurationResponse* tmd__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetVideoOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Modify a video output configuration. A device that has one or more video outputs
shall support the setting of its video output configuration through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetVideoOutputConfiguration*  tmd__SetVideoOutputConfiguration,
    // output parameters:
    _tmd__SetVideoOutputConfigurationResponse* tmd__SetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetVideoOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__SetVideoOutputConfiguration*  tmd__SetVideoOutputConfiguration,
    // output parameters:
    _tmd__SetVideoOutputConfigurationResponse* tmd__SetVideoOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	SetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse
int __tmd__SetVideoOutputConfiguration(
    _tmd__SetVideoOutputConfiguration*  tmd__SetVideoOutputConfiguration,	///< Input parameter
    _tmd__SetVideoOutputConfigurationResponse* tmd__SetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetAudioSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Modify an audio source configuration. A device that has a one or more audio sources
shall support the setting of the AudioSourceConfiguration through this command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetAudioSourceConfiguration*  tmd__SetAudioSourceConfiguration,
    // output parameters:
    _tmd__SetAudioSourceConfigurationResponse* tmd__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__SetAudioSourceConfiguration*  tmd__SetAudioSourceConfiguration,
    // output parameters:
    _tmd__SetAudioSourceConfigurationResponse* tmd__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse
int __tmd__SetAudioSourceConfiguration(
    _tmd__SetAudioSourceConfiguration*  tmd__SetAudioSourceConfiguration,	///< Input parameter
    _tmd__SetAudioSourceConfigurationResponse* tmd__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetAudioOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:
Modify an audio output configuration. A device that has one ore more audio outputs
shall support the setting of the AudioOutputConfiguration through this command.<br/>This
method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetAudioOutputConfiguration*  tmd__SetAudioOutputConfiguration,
    // output parameters:
    _tmd__SetAudioOutputConfigurationResponse* tmd__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__SetAudioOutputConfiguration*  tmd__SetAudioOutputConfiguration,
    // output parameters:
    _tmd__SetAudioOutputConfigurationResponse* tmd__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse
int __tmd__SetAudioOutputConfiguration(
    _tmd__SetAudioOutputConfiguration*  tmd__SetAudioOutputConfiguration,	///< Input parameter
    _tmd__SetAudioOutputConfigurationResponse* tmd__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetVideoSourceConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:
Request the VideoSourceConfigurationOptions of a VideoSource. A device with one
or more video sources shall support this command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,
    // output parameters:
    _tmd__GetVideoSourceConfigurationOptionsResponse* tmd__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,
    // output parameters:
    _tmd__GetVideoSourceConfigurationOptionsResponse* tmd__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse
int __tmd__GetVideoSourceConfigurationOptions(
    _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,	///< Input parameter
    _tmd__GetVideoSourceConfigurationOptionsResponse* tmd__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetVideoOutputConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:
Request the VideoOutputConfigurationOptions of a VideoOutput. A device that has
one or more video outputs shall support the retrieval of VideoOutputConfigurationOptions
through this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,
    // output parameters:
    _tmd__GetVideoOutputConfigurationOptionsResponse* tmd__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,
    // output parameters:
    _tmd__GetVideoOutputConfigurationOptionsResponse* tmd__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse
int __tmd__GetVideoOutputConfigurationOptions(
    _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,	///< Input parameter
    _tmd__GetVideoOutputConfigurationOptionsResponse* tmd__GetVideoOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetAudioSourceConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:
Request the AudioSourceConfigurationOptions of an AudioSource. A device with one
ore more AudioSources shall support this command.<br/>This method is deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,
    // output parameters:
    _tmd__GetAudioSourceConfigurationOptionsResponse* tmd__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,
    // output parameters:
    _tmd__GetAudioSourceConfigurationOptionsResponse* tmd__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse
int __tmd__GetAudioSourceConfigurationOptions(
    _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,	///< Input parameter
    _tmd__GetAudioSourceConfigurationOptionsResponse* tmd__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetAudioOutputConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:
Request the available settings and ranges for a physical Audio output. A device
that has one or more AudioOutputs shall support this command.<br/>This method is
deprecated.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,
    // output parameters:
    _tmd__GetAudioOutputConfigurationOptionsResponse* tmd__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,
    // output parameters:
    _tmd__GetAudioOutputConfigurationOptionsResponse* tmd__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse
int __tmd__GetAudioOutputConfigurationOptions(
    _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,	///< Input parameter
    _tmd__GetAudioOutputConfigurationOptionsResponse* tmd__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetRelayOutputs" of service binding "DeviceIOBinding"

/**

Operation details:
This operation gets a list of all available relay outputs and their settings.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetRelayOutputs SOAP
//gsoap tmd  service method-style:	GetRelayOutputs document
//gsoap tmd  service method-encoding:	GetRelayOutputs literal
//gsoap tmd  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs
//gsoap tmd  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse
int __tmd__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetRelayOutputSettings" of service binding "DeviceIOBinding"

/**

Operation details:
This operation sets the settings of a relay output.
				The relay can work in two relay modes: <ul>
					<li>
				Bistable  After setting the state, the relay
remains in this state.</li>
					<li>
				Monostable  After setting the state, the relay
returns to its idle state after the
				specified time.</li>
				</ul>
				The physical idle state of a relay output can be
configured by setting the IdleState to open or
				closed (inversion of the relay behaviour).<br/>
				Idle State open means that the relay is open
when the relay state is set to inactive through
				the trigger command (see Section 8.5.3) and closed
when the state is set to active through
				the same command.<br/>
				Idle State closed means, that the relay is
closed when the relay state is set to inactive
				through the trigger command (see Section 8.5.3)
and open when the state is set to active
				through the same command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetRelayOutputSettings*       tmd__SetRelayOutputSettings,
    // output parameters:
    _tmd__SetRelayOutputSettingsResponse* tmd__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    _tmd__SetRelayOutputSettings*       tmd__SetRelayOutputSettings,
    // output parameters:
    _tmd__SetRelayOutputSettingsResponse* tmd__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tmd  service method-style:	SetRelayOutputSettings document
//gsoap tmd  service method-encoding:	SetRelayOutputSettings literal
//gsoap tmd  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings
//gsoap tmd  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse
int __tmd__SetRelayOutputSettings(
    _tmd__SetRelayOutputSettings*       tmd__SetRelayOutputSettings,	///< Input parameter
    _tmd__SetRelayOutputSettingsResponse* tmd__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetRelayOutputState" of service binding "DeviceIOBinding"

/**

Operation details:
Modify the relay state.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetRelayOutputState SOAP
//gsoap tmd  service method-style:	SetRelayOutputState document
//gsoap tmd  service method-encoding:	SetRelayOutputState literal
//gsoap tmd  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState
//gsoap tmd  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse
int __tmd__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputs                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetDigitalInputs" of service binding "DeviceIOBinding"

/**

Operation details:
This operation gets a list of all available digital inputs.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetDigitalInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetDigitalInputs*             tmd__GetDigitalInputs,
    // output parameters:
    _tmd__GetDigitalInputsResponse*     tmd__GetDigitalInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetDigitalInputs(
    struct soap *soap,
    // input parameters:
    _tmd__GetDigitalInputs*             tmd__GetDigitalInputs,
    // output parameters:
    _tmd__GetDigitalInputsResponse*     tmd__GetDigitalInputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetDigitalInputs SOAP
//gsoap tmd  service method-style:	GetDigitalInputs document
//gsoap tmd  service method-encoding:	GetDigitalInputs literal
//gsoap tmd  service method-input-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs
//gsoap tmd  service method-output-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse
int __tmd__GetDigitalInputs(
    _tmd__GetDigitalInputs*             tmd__GetDigitalInputs,	///< Input parameter
    _tmd__GetDigitalInputsResponse*     tmd__GetDigitalInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetDigitalInputConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:
This operation lists what configuration is available for digital inputs.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetDigitalInputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,
    // output parameters:
    _tmd__GetDigitalInputConfigurationOptionsResponse* tmd__GetDigitalInputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetDigitalInputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,
    // output parameters:
    _tmd__GetDigitalInputConfigurationOptionsResponse* tmd__GetDigitalInputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetDigitalInputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetDigitalInputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetDigitalInputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetDigitalInputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions
//gsoap tmd  service method-output-action:	GetDigitalInputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptionsResponse
int __tmd__GetDigitalInputConfigurationOptions(
    _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,	///< Input parameter
    _tmd__GetDigitalInputConfigurationOptionsResponse* tmd__GetDigitalInputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetDigitalInputConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetDigitalInputConfigurations" of service binding "DeviceIOBinding"

/**

Operation details:
Modify a digital input configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetDigitalInputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,
    // output parameters:
    _tmd__SetDigitalInputConfigurationsResponse* tmd__SetDigitalInputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetDigitalInputConfigurations(
    struct soap *soap,
    // input parameters:
    _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,
    // output parameters:
    _tmd__SetDigitalInputConfigurationsResponse* tmd__SetDigitalInputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetDigitalInputConfigurations SOAP
//gsoap tmd  service method-style:	SetDigitalInputConfigurations document
//gsoap tmd  service method-encoding:	SetDigitalInputConfigurations literal
//gsoap tmd  service method-input-action:	SetDigitalInputConfigurations http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations
//gsoap tmd  service method-output-action:	SetDigitalInputConfigurations http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurationsResponse
int __tmd__SetDigitalInputConfigurations(
    _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,	///< Input parameter
    _tmd__SetDigitalInputConfigurationsResponse* tmd__SetDigitalInputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPorts                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetSerialPorts" of service binding "DeviceIOBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPorts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetSerialPorts*               tmd__GetSerialPorts,
    // output parameters:
    _tmd__GetSerialPortsResponse*       tmd__GetSerialPortsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPorts(
    struct soap *soap,
    // input parameters:
    _tmd__GetSerialPorts*               tmd__GetSerialPorts,
    // output parameters:
    _tmd__GetSerialPortsResponse*       tmd__GetSerialPortsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetSerialPorts SOAP
//gsoap tmd  service method-style:	GetSerialPorts document
//gsoap tmd  service method-encoding:	GetSerialPorts literal
//gsoap tmd  service method-input-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts
//gsoap tmd  service method-output-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse
int __tmd__GetSerialPorts(
    _tmd__GetSerialPorts*               tmd__GetSerialPorts,	///< Input parameter
    _tmd__GetSerialPortsResponse*       tmd__GetSerialPortsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetSerialPortConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetSerialPortConfiguration*   tmd__GetSerialPortConfiguration,
    // output parameters:
    _tmd__GetSerialPortConfigurationResponse* tmd__GetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPortConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__GetSerialPortConfiguration*   tmd__GetSerialPortConfiguration,
    // output parameters:
    _tmd__GetSerialPortConfigurationResponse* tmd__GetSerialPortConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	GetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	GetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations
//gsoap tmd  service method-output-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse
int __tmd__GetSerialPortConfiguration(
    _tmd__GetSerialPortConfiguration*   tmd__GetSerialPortConfiguration,	///< Input parameter
    _tmd__GetSerialPortConfigurationResponse* tmd__GetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SetSerialPortConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SetSerialPortConfiguration*   tmd__SetSerialPortConfiguration,
    // output parameters:
    _tmd__SetSerialPortConfigurationResponse* tmd__SetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SetSerialPortConfiguration(
    struct soap *soap,
    // input parameters:
    _tmd__SetSerialPortConfiguration*   tmd__SetSerialPortConfiguration,
    // output parameters:
    _tmd__SetSerialPortConfigurationResponse* tmd__SetSerialPortConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	SetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	SetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration
//gsoap tmd  service method-output-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse
int __tmd__SetSerialPortConfiguration(
    _tmd__SetSerialPortConfiguration*   tmd__SetSerialPortConfiguration,	///< Input parameter
    _tmd__SetSerialPortConfigurationResponse* tmd__SetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfigurationOptions                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__GetSerialPortConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__GetSerialPortConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,
    // output parameters:
    _tmd__GetSerialPortConfigurationOptionsResponse* tmd__GetSerialPortConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__GetSerialPortConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,
    // output parameters:
    _tmd__GetSerialPortConfigurationOptionsResponse* tmd__GetSerialPortConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	GetSerialPortConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetSerialPortConfigurationOptions document
//gsoap tmd  service method-encoding:	GetSerialPortConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions
//gsoap tmd  service method-output-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse
int __tmd__GetSerialPortConfigurationOptions(
    _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,	///< Input parameter
    _tmd__GetSerialPortConfigurationOptionsResponse* tmd__GetSerialPortConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SendReceiveSerialCommand                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tmd__SendReceiveSerialCommand" of service binding "DeviceIOBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tmd__SendReceiveSerialCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tmd__SendReceiveSerialCommand*     tmd__SendReceiveSerialCommand,
    // output parameters:
    _tmd__SendReceiveSerialCommandResponse* tmd__SendReceiveSerialCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tmd__SendReceiveSerialCommand(
    struct soap *soap,
    // input parameters:
    _tmd__SendReceiveSerialCommand*     tmd__SendReceiveSerialCommand,
    // output parameters:
    _tmd__SendReceiveSerialCommandResponse* tmd__SendReceiveSerialCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tmd  service method-protocol:	SendReceiveSerialCommand SOAP
//gsoap tmd  service method-style:	SendReceiveSerialCommand document
//gsoap tmd  service method-encoding:	SendReceiveSerialCommand literal
//gsoap tmd  service method-input-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand
//gsoap tmd  service method-output-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse
int __tmd__SendReceiveSerialCommand(
    _tmd__SendReceiveSerialCommand*     tmd__SendReceiveSerialCommand,	///< Input parameter
    _tmd__SendReceiveSerialCommandResponse* tmd__SendReceiveSerialCommandResponse	///< Output parameter
);

/**

@page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_policy_enablers Policy Enablers of Binding  "DeviceIOBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding"

/**

Operation details:
Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // output parameters:
    _tptz__GetServiceCapabilitiesResponse* tptz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // output parameters:
    _tptz__GetServiceCapabilitiesResponse* tptz__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetServiceCapabilities SOAP
//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap tptz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse
int __tptz__GetServiceCapabilities(
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,	///< Input parameter
    _tptz__GetServiceCapabilitiesResponse* tptz__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetConfigurations" of service binding "PTZBinding"

/**

Operation details:

				Get all the existing PTZConfigurations from the
device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // output parameters:
    _tptz__GetConfigurationsResponse*   tptz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurations(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // output parameters:
    _tptz__GetConfigurationsResponse*   tptz__GetConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfigurations SOAP
//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-input-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap tptz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse
int __tptz__GetConfigurations(
    _tptz__GetConfigurations*           tptz__GetConfigurations,	///< Input parameter
    _tptz__GetConfigurationsResponse*   tptz__GetConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresets" of service binding "PTZBinding"

/**

Operation details:

		Operation to request all PTZ presets for the PTZNode
		in the selected profile. The operation is supported if there is
support
		for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // output parameters:
    _tptz__GetPresetsResponse*          tptz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresets(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // output parameters:
    _tptz__GetPresetsResponse*          tptz__GetPresetsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresets SOAP
//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-input-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap tptz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse
int __tptz__GetPresets(
    _tptz__GetPresets*                  tptz__GetPresets,	///< Input parameter
    _tptz__GetPresetsResponse*          tptz__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SetPreset" of service binding "PTZBinding"

/**

Operation details:

				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // output parameters:
    _tptz__SetPresetResponse*           tptz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetPreset(
    struct soap *soap,
    // input parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // output parameters:
    _tptz__SetPresetResponse*           tptz__SetPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetPreset SOAP
//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-input-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap tptz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse
int __tptz__SetPreset(
    _tptz__SetPreset*                   tptz__SetPreset,	///< Input parameter
    _tptz__SetPresetResponse*           tptz__SetPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__RemovePreset" of service binding "PTZBinding"

/**

Operation details:

		Operation to remove a PTZ preset for the Node in
		the
		selected profile. The operation is supported if the
		PresetPosition
		capability exists for teh Node in the
		selected profile.
	  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // output parameters:
    _tptz__RemovePresetResponse*        tptz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePreset(
    struct soap *soap,
    // input parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // output parameters:
    _tptz__RemovePresetResponse*        tptz__RemovePresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RemovePreset SOAP
//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-input-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap tptz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse
int __tptz__RemovePreset(
    _tptz__RemovePreset*                tptz__RemovePreset,	///< Input parameter
    _tptz__RemovePresetResponse*        tptz__RemovePresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GotoPreset" of service binding "PTZBinding"

/**

Operation details:

		Operation to go to a saved preset position for the
		PTZNode in the selected profile. The operation is supported if there
is
		support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // output parameters:
    _tptz__GotoPresetResponse*          tptz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoPreset(
    struct soap *soap,
    // input parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // output parameters:
    _tptz__GotoPresetResponse*          tptz__GotoPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GotoPreset SOAP
//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-input-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap tptz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse
int __tptz__GotoPreset(
    _tptz__GotoPreset*                  tptz__GotoPreset,	///< Input parameter
    _tptz__GotoPresetResponse*          tptz__GotoPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetStatus" of service binding "PTZBinding"

/**

Operation details:

				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // output parameters:
    _tptz__GetStatusResponse*           tptz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetStatus(
    struct soap *soap,
    // input parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // output parameters:
    _tptz__GetStatusResponse*           tptz__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetStatus SOAP
//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-input-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap tptz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse
int __tptz__GetStatus(
    _tptz__GetStatus*                   tptz__GetStatus,	///< Input parameter
    _tptz__GetStatusResponse*           tptz__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetConfiguration" of service binding "PTZBinding"

/**

Operation details:
Get a specific PTZconfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // output parameters:
    _tptz__GetConfigurationResponse*    tptz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfiguration(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // output parameters:
    _tptz__GetConfigurationResponse*    tptz__GetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfiguration SOAP
//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-input-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap tptz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse
int __tptz__GetConfiguration(
    _tptz__GetConfiguration*            tptz__GetConfiguration,	///< Input parameter
    _tptz__GetConfigurationResponse*    tptz__GetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetNodes" of service binding "PTZBinding"

/**

Operation details:

				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token.
			  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // output parameters:
    _tptz__GetNodesResponse*            tptz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNodes(
    struct soap *soap,
    // input parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // output parameters:
    _tptz__GetNodesResponse*            tptz__GetNodesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetNodes SOAP
//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-input-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap tptz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse
int __tptz__GetNodes(
    _tptz__GetNodes*                    tptz__GetNodes,	///< Input parameter
    _tptz__GetNodesResponse*            tptz__GetNodesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetNode" of service binding "PTZBinding"

/**

Operation details:
Get a specific PTZ Node identified by a reference
		token or a name.
	  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // output parameters:
    _tptz__GetNodeResponse*             tptz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNode(
    struct soap *soap,
    // input parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // output parameters:
    _tptz__GetNodeResponse*             tptz__GetNodeResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetNode SOAP
//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-input-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap tptz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse
int __tptz__GetNode(
    _tptz__GetNode*                     tptz__GetNode,	///< Input parameter
    _tptz__GetNodeResponse*             tptz__GetNodeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SetConfiguration" of service binding "PTZBinding"

/**

Operation details:

		Set/update a existing PTZConfiguration on the device.
	  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // output parameters:
    _tptz__SetConfigurationResponse*    tptz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetConfiguration(
    struct soap *soap,
    // input parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // output parameters:
    _tptz__SetConfigurationResponse*    tptz__SetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetConfiguration SOAP
//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-input-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap tptz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse
int __tptz__SetConfiguration(
    _tptz__SetConfiguration*            tptz__SetConfiguration,	///< Input parameter
    _tptz__SetConfigurationResponse*    tptz__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding"

/**

Operation details:

				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // output parameters:
    _tptz__GetConfigurationOptionsResponse* tptz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // output parameters:
    _tptz__GetConfigurationOptionsResponse* tptz__GetConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfigurationOptions SOAP
//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-input-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap tptz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse
int __tptz__GetConfigurationOptions(
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,	///< Input parameter
    _tptz__GetConfigurationOptionsResponse* tptz__GetConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GotoHomePosition" of service binding "PTZBinding"

/**

Operation details:

		Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // output parameters:
    _tptz__GotoHomePositionResponse*    tptz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoHomePosition(
    struct soap *soap,
    // input parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // output parameters:
    _tptz__GotoHomePositionResponse*    tptz__GotoHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GotoHomePosition SOAP
//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-input-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap tptz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse
int __tptz__GotoHomePosition(
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,	///< Input parameter
    _tptz__GotoHomePositionResponse*    tptz__GotoHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SetHomePosition" of service binding "PTZBinding"

/**

Operation details:
Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // output parameters:
    _tptz__SetHomePositionResponse*     tptz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetHomePosition(
    struct soap *soap,
    // input parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // output parameters:
    _tptz__SetHomePositionResponse*     tptz__SetHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetHomePosition SOAP
//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-input-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap tptz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse
int __tptz__SetHomePosition(
    _tptz__SetHomePosition*             tptz__SetHomePosition,	///< Input parameter
    _tptz__SetHomePositionResponse*     tptz__SetHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__ContinuousMove" of service binding "PTZBinding"

/**

Operation details:
Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the
space argument is omitted, the default space set by the PTZConfiguration will be
used.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // output parameters:
    _tptz__ContinuousMoveResponse*      tptz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ContinuousMove(
    struct soap *soap,
    // input parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // output parameters:
    _tptz__ContinuousMoveResponse*      tptz__ContinuousMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	ContinuousMove SOAP
//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-input-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap tptz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse
int __tptz__ContinuousMove(
    _tptz__ContinuousMove*              tptz__ContinuousMove,	///< Input parameter
    _tptz__ContinuousMoveResponse*      tptz__ContinuousMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__RelativeMove" of service binding "PTZBinding"

/**

Operation details:
Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use
				the x value as absolute resoluting speed vector
or to map x and y to the component speed.
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // output parameters:
    _tptz__RelativeMoveResponse*        tptz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RelativeMove(
    struct soap *soap,
    // input parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // output parameters:
    _tptz__RelativeMoveResponse*        tptz__RelativeMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RelativeMove SOAP
//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-input-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap tptz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse
int __tptz__RelativeMove(
    _tptz__RelativeMove*                tptz__RelativeMove,	///< Input parameter
    _tptz__RelativeMoveResponse*        tptz__RelativeMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding"

/**

Operation details:

		Operation to send auxiliary commands to the PTZ device
		mapped by the PTZNode in the selected profile. The
		operation is supported
		if the AuxiliarySupported element of the PTZNode is true
	  

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // output parameters:
    _tptz__SendAuxiliaryCommandResponse* tptz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // output parameters:
    _tptz__SendAuxiliaryCommandResponse* tptz__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap tptz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse
int __tptz__SendAuxiliaryCommand(
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,	///< Input parameter
    _tptz__SendAuxiliaryCommandResponse* tptz__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__AbsoluteMove" of service binding "PTZBinding"

/**

Operation details:
Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use
				the x value as absolute resoluting speed vector
or to map x and y to the component speed.
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // output parameters:
    _tptz__AbsoluteMoveResponse*        tptz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__AbsoluteMove(
    struct soap *soap,
    // input parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // output parameters:
    _tptz__AbsoluteMoveResponse*        tptz__AbsoluteMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	AbsoluteMove SOAP
//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-input-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap tptz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse
int __tptz__AbsoluteMove(
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,	///< Input parameter
    _tptz__AbsoluteMoveResponse*        tptz__AbsoluteMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GeoMove                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GeoMove" of service binding "PTZBinding"

/**

Operation details:
Operation to move pan,tilt or zoom to point to a destination based on the geolocation
of the target. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use
				the x value as absolute resoluting speed vector
or to map x and y to the component speed.
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
				The area height and area dwidth parameters are optional,
they can be used independently and may be used
				by the device to automatically determine the best
zoom level to show the target.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GeoMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GeoMove*                     tptz__GeoMove,
    // output parameters:
    _tptz__GeoMoveResponse*             tptz__GeoMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GeoMove(
    struct soap *soap,
    // input parameters:
    _tptz__GeoMove*                     tptz__GeoMove,
    // output parameters:
    _tptz__GeoMoveResponse*             tptz__GeoMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GeoMove SOAP
//gsoap tptz service method-style:	GeoMove document
//gsoap tptz service method-encoding:	GeoMove literal
//gsoap tptz service method-input-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMove
//gsoap tptz service method-output-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse
int __tptz__GeoMove(
    _tptz__GeoMove*                     tptz__GeoMove,	///< Input parameter
    _tptz__GeoMoveResponse*             tptz__GeoMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__Stop" of service binding "PTZBinding"

/**

Operation details:
Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__Stop*                        tptz__Stop,
    // output parameters:
    _tptz__StopResponse*                tptz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__Stop(
    struct soap *soap,
    // input parameters:
    _tptz__Stop*                        tptz__Stop,
    // output parameters:
    _tptz__StopResponse*                tptz__StopResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	Stop SOAP
//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-input-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap tptz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/StopResponse
int __tptz__Stop(
    _tptz__Stop*                        tptz__Stop,	///< Input parameter
    _tptz__StopResponse*                tptz__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresetTours" of service binding "PTZBinding"

/**

Operation details:
Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // output parameters:
    _tptz__GetPresetToursResponse*      tptz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTours(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // output parameters:
    _tptz__GetPresetToursResponse*      tptz__GetPresetToursResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTours SOAP
//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-input-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap tptz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse
int __tptz__GetPresetTours(
    _tptz__GetPresetTours*              tptz__GetPresetTours,	///< Input parameter
    _tptz__GetPresetToursResponse*      tptz__GetPresetToursResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresetTour" of service binding "PTZBinding"

/**

Operation details:
Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // output parameters:
    _tptz__GetPresetTourResponse*       tptz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // output parameters:
    _tptz__GetPresetTourResponse*       tptz__GetPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTour SOAP
//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-input-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap tptz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse
int __tptz__GetPresetTour(
    _tptz__GetPresetTour*               tptz__GetPresetTour,	///< Input parameter
    _tptz__GetPresetTourResponse*       tptz__GetPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding"

/**

Operation details:
Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // output parameters:
    _tptz__GetPresetTourOptionsResponse* tptz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTourOptions(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // output parameters:
    _tptz__GetPresetTourOptionsResponse* tptz__GetPresetTourOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTourOptions SOAP
//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-input-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap tptz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse
int __tptz__GetPresetTourOptions(
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,	///< Input parameter
    _tptz__GetPresetTourOptionsResponse* tptz__GetPresetTourOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__CreatePresetTour" of service binding "PTZBinding"

/**

Operation details:
Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // output parameters:
    _tptz__CreatePresetTourResponse*    tptz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__CreatePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // output parameters:
    _tptz__CreatePresetTourResponse*    tptz__CreatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	CreatePresetTour SOAP
//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-input-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap tptz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse
int __tptz__CreatePresetTour(
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,	///< Input parameter
    _tptz__CreatePresetTourResponse*    tptz__CreatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding"

/**

Operation details:
Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // output parameters:
    _tptz__ModifyPresetTourResponse*    tptz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ModifyPresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // output parameters:
    _tptz__ModifyPresetTourResponse*    tptz__ModifyPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	ModifyPresetTour SOAP
//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-input-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap tptz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse
int __tptz__ModifyPresetTour(
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,	///< Input parameter
    _tptz__ModifyPresetTourResponse*    tptz__ModifyPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__OperatePresetTour" of service binding "PTZBinding"

/**

Operation details:
Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // output parameters:
    _tptz__OperatePresetTourResponse*   tptz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__OperatePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // output parameters:
    _tptz__OperatePresetTourResponse*   tptz__OperatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	OperatePresetTour SOAP
//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-input-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap tptz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse
int __tptz__OperatePresetTour(
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,	///< Input parameter
    _tptz__OperatePresetTourResponse*   tptz__OperatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__RemovePresetTour" of service binding "PTZBinding"

/**

Operation details:
Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // output parameters:
    _tptz__RemovePresetTourResponse*    tptz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // output parameters:
    _tptz__RemovePresetTourResponse*    tptz__RemovePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RemovePresetTour SOAP
//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-input-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap tptz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse
int __tptz__RemovePresetTour(
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,	///< Input parameter
    _tptz__RemovePresetTourResponse*    tptz__RemovePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetCompatibleConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tptz__GetCompatibleConfigurations" of service binding "PTZBinding"

/**

Operation details:
Operation to get all available PTZConfigurations that can be added to the referenced
media profile. <br/>
				A device providing more than one PTZConfiguration
or more than one VideoSourceConfiguration or which has any other resource
				interdependency between PTZConfiguration entities
and other resources listable in a media profile should implement this operation.
				PTZConfiguration entities returned by this operation
shall not fail on adding them to the referenced media profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetCompatibleConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    _tptz__GetCompatibleConfigurationsResponse* tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetCompatibleConfigurations(
    struct soap *soap,
    // input parameters:
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    _tptz__GetCompatibleConfigurationsResponse* tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetCompatibleConfigurations SOAP
//gsoap tptz service method-style:	GetCompatibleConfigurations document
//gsoap tptz service method-encoding:	GetCompatibleConfigurations literal
//gsoap tptz service method-input-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations
//gsoap tptz service method-output-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse
int __tptz__GetCompatibleConfigurations(
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,	///< Input parameter
    _tptz__GetCompatibleConfigurationsResponse* tptz__GetCompatibleConfigurationsResponse	///< Output parameter
);

/**

@page PTZBinding Binding "PTZBinding"

@section PTZBinding_policy_enablers Policy Enablers of Binding  "PTZBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding"

/**

Operation details:
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,
    // output parameters:
    _trt__GetServiceCapabilitiesResponse* trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,
    // output parameters:
    _trt__GetServiceCapabilitiesResponse* trt__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,	///< Input parameter
    _trt__GetServiceCapabilitiesResponse* trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSources" of service binding "MediaBinding"

/**

Operation details:
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // output parameters:
    _trt__GetVideoSourcesResponse*      trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // output parameters:
    _trt__GetVideoSourcesResponse*      trt__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    _trt__GetVideoSources*              trt__GetVideoSources,	///< Input parameter
    _trt__GetVideoSourcesResponse*      trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSources" of service binding "MediaBinding"

/**

Operation details:
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // output parameters:
    _trt__GetAudioSourcesResponse*      trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // output parameters:
    _trt__GetAudioSourcesResponse*      trt__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    _trt__GetAudioSources*              trt__GetAudioSources,	///< Input parameter
    _trt__GetAudioSourcesResponse*      trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioOutputs" of service binding "MediaBinding"

/**

Operation details:
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,
    // output parameters:
    _trt__GetAudioOutputsResponse*      trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,
    // output parameters:
    _trt__GetAudioOutputsResponse*      trt__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,	///< Input parameter
    _trt__GetAudioOutputsResponse*      trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__CreateProfile" of service binding "MediaBinding"

/**

Operation details:
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // output parameters:
    _trt__CreateProfileResponse*        trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // output parameters:
    _trt__CreateProfileResponse*        trt__CreateProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    _trt__CreateProfile*                trt__CreateProfile,	///< Input parameter
    _trt__CreateProfileResponse*        trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetProfile" of service binding "MediaBinding"

/**

Operation details:
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // output parameters:
    _trt__GetProfileResponse*           trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // output parameters:
    _trt__GetProfileResponse*           trt__GetProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    _trt__GetProfile*                   trt__GetProfile,	///< Input parameter
    _trt__GetProfileResponse*           trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetProfiles" of service binding "MediaBinding"

/**

Operation details:
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // output parameters:
    _trt__GetProfilesResponse*          trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // output parameters:
    _trt__GetProfilesResponse*          trt__GetProfilesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    _trt__GetProfiles*                  trt__GetProfiles,	///< Input parameter
    _trt__GetProfilesResponse*          trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    _trt__AddVideoEncoderConfigurationResponse* trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    _trt__AddVideoEncoderConfigurationResponse* trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    _trt__AddVideoEncoderConfigurationResponse* trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // output parameters:
    _trt__AddVideoSourceConfigurationResponse* trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // output parameters:
    _trt__AddVideoSourceConfigurationResponse* trt__AddVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,	///< Input parameter
    _trt__AddVideoSourceConfigurationResponse* trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    _trt__AddAudioEncoderConfigurationResponse* trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    _trt__AddAudioEncoderConfigurationResponse* trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    _trt__AddAudioEncoderConfigurationResponse* trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // output parameters:
    _trt__AddAudioSourceConfigurationResponse* trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // output parameters:
    _trt__AddAudioSourceConfigurationResponse* trt__AddAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,	///< Input parameter
    _trt__AddAudioSourceConfigurationResponse* trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // output parameters:
    _trt__AddPTZConfigurationResponse*  trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // output parameters:
    _trt__AddPTZConfigurationResponse*  trt__AddPTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,	///< Input parameter
    _trt__AddPTZConfigurationResponse*  trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    _trt__AddVideoAnalyticsConfigurationResponse* trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    _trt__AddVideoAnalyticsConfigurationResponse* trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    _trt__AddVideoAnalyticsConfigurationResponse* trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // output parameters:
    _trt__AddMetadataConfigurationResponse* trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // output parameters:
    _trt__AddMetadataConfigurationResponse* trt__AddMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,	///< Input parameter
    _trt__AddMetadataConfigurationResponse* trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,
    // output parameters:
    _trt__AddAudioOutputConfigurationResponse* trt__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,
    // output parameters:
    _trt__AddAudioOutputConfigurationResponse* trt__AddAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,	///< Input parameter
    _trt__AddAudioOutputConfigurationResponse* trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    _trt__AddAudioDecoderConfigurationResponse* trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    _trt__AddAudioDecoderConfigurationResponse* trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    _trt__AddAudioDecoderConfigurationResponse* trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    _trt__RemoveVideoEncoderConfigurationResponse* trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    _trt__RemoveVideoEncoderConfigurationResponse* trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    _trt__RemoveVideoEncoderConfigurationResponse* trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    _trt__RemoveVideoSourceConfigurationResponse* trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    _trt__RemoveVideoSourceConfigurationResponse* trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    _trt__RemoveVideoSourceConfigurationResponse* trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    _trt__RemoveAudioEncoderConfigurationResponse* trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    _trt__RemoveAudioEncoderConfigurationResponse* trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    _trt__RemoveAudioEncoderConfigurationResponse* trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    _trt__RemoveAudioSourceConfigurationResponse* trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    _trt__RemoveAudioSourceConfigurationResponse* trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    _trt__RemoveAudioSourceConfigurationResponse* trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // output parameters:
    _trt__RemovePTZConfigurationResponse* trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // output parameters:
    _trt__RemovePTZConfigurationResponse* trt__RemovePTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,	///< Input parameter
    _trt__RemovePTZConfigurationResponse* trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse* trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse* trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    _trt__RemoveVideoAnalyticsConfigurationResponse* trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // output parameters:
    _trt__RemoveMetadataConfigurationResponse* trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // output parameters:
    _trt__RemoveMetadataConfigurationResponse* trt__RemoveMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,	///< Input parameter
    _trt__RemoveMetadataConfigurationResponse* trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    _trt__RemoveAudioOutputConfigurationResponse* trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    _trt__RemoveAudioOutputConfigurationResponse* trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    _trt__RemoveAudioOutputConfigurationResponse* trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    _trt__RemoveAudioDecoderConfigurationResponse* trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    _trt__RemoveAudioDecoderConfigurationResponse* trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    _trt__RemoveAudioDecoderConfigurationResponse* trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__DeleteProfile" of service binding "MediaBinding"

/**

Operation details:
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // output parameters:
    _trt__DeleteProfileResponse*        trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // input parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // output parameters:
    _trt__DeleteProfileResponse*        trt__DeleteProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    _trt__DeleteProfile*                trt__DeleteProfile,	///< Input parameter
    _trt__DeleteProfileResponse*        trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    _trt__GetVideoSourceConfigurationsResponse* trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    _trt__GetVideoSourceConfigurationsResponse* trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    _trt__GetVideoSourceConfigurationsResponse* trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    _trt__GetVideoEncoderConfigurationsResponse* trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    _trt__GetVideoEncoderConfigurationsResponse* trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    _trt__GetVideoEncoderConfigurationsResponse* trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    _trt__GetAudioSourceConfigurationsResponse* trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    _trt__GetAudioSourceConfigurationsResponse* trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    _trt__GetAudioSourceConfigurationsResponse* trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    _trt__GetAudioEncoderConfigurationsResponse* trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    _trt__GetAudioEncoderConfigurationsResponse* trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    _trt__GetAudioEncoderConfigurationsResponse* trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse* trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse* trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationsResponse* trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // output parameters:
    _trt__GetMetadataConfigurationsResponse* trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // output parameters:
    _trt__GetMetadataConfigurationsResponse* trt__GetMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,	///< Input parameter
    _trt__GetMetadataConfigurationsResponse* trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding"

/**

Operation details:
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    _trt__GetAudioOutputConfigurationsResponse* trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    _trt__GetAudioOutputConfigurationsResponse* trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    _trt__GetAudioOutputConfigurationsResponse* trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding"

/**

Operation details:
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    _trt__GetAudioDecoderConfigurationsResponse* trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    _trt__GetAudioDecoderConfigurationsResponse* trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    _trt__GetAudioDecoderConfigurationsResponse* trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // output parameters:
    _trt__GetVideoSourceConfigurationResponse* trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // output parameters:
    _trt__GetVideoSourceConfigurationResponse* trt__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,	///< Input parameter
    _trt__GetVideoSourceConfigurationResponse* trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    _trt__GetVideoEncoderConfigurationResponse* trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    _trt__GetVideoEncoderConfigurationResponse* trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    _trt__GetVideoEncoderConfigurationResponse* trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // output parameters:
    _trt__GetAudioSourceConfigurationResponse* trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // output parameters:
    _trt__GetAudioSourceConfigurationResponse* trt__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,	///< Input parameter
    _trt__GetAudioSourceConfigurationResponse* trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    _trt__GetAudioEncoderConfigurationResponse* trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    _trt__GetAudioEncoderConfigurationResponse* trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    _trt__GetAudioEncoderConfigurationResponse* trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationResponse* trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationResponse* trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationResponse* trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // output parameters:
    _trt__GetMetadataConfigurationResponse* trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // output parameters:
    _trt__GetMetadataConfigurationResponse* trt__GetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,	///< Input parameter
    _trt__GetMetadataConfigurationResponse* trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,
    // output parameters:
    _trt__GetAudioOutputConfigurationResponse* trt__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,
    // output parameters:
    _trt__GetAudioOutputConfigurationResponse* trt__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,	///< Input parameter
    _trt__GetAudioOutputConfigurationResponse* trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    _trt__GetAudioDecoderConfigurationResponse* trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    _trt__GetAudioDecoderConfigurationResponse* trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    _trt__GetAudioDecoderConfigurationResponse* trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse* trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse* trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoEncoderConfigurationsResponse* trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse* trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse* trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoSourceConfigurationsResponse* trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse* trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse* trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioEncoderConfigurationsResponse* trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse* trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse* trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioSourceConfigurationsResponse* trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse* trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse* trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    _trt__GetCompatibleMetadataConfigurationsResponse* trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding"

/**

Operation details:
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioOutputConfigurationsResponse* trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioOutputConfigurationsResponse* trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioOutputConfigurationsResponse* trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding"

/**

Operation details:
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioDecoderConfigurationsResponse* trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioDecoderConfigurationsResponse* trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioDecoderConfigurationsResponse* trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // output parameters:
    _trt__SetVideoSourceConfigurationResponse* trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // output parameters:
    _trt__SetVideoSourceConfigurationResponse* trt__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,	///< Input parameter
    _trt__SetVideoSourceConfigurationResponse* trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    _trt__SetVideoEncoderConfigurationResponse* trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    _trt__SetVideoEncoderConfigurationResponse* trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    _trt__SetVideoEncoderConfigurationResponse* trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // output parameters:
    _trt__SetAudioSourceConfigurationResponse* trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // output parameters:
    _trt__SetAudioSourceConfigurationResponse* trt__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,	///< Input parameter
    _trt__SetAudioSourceConfigurationResponse* trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    _trt__SetAudioEncoderConfigurationResponse* trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    _trt__SetAudioEncoderConfigurationResponse* trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    _trt__SetAudioEncoderConfigurationResponse* trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__SetVideoAnalyticsConfigurationResponse* trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__SetVideoAnalyticsConfigurationResponse* trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__SetVideoAnalyticsConfigurationResponse* trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // output parameters:
    _trt__SetMetadataConfigurationResponse* trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // output parameters:
    _trt__SetMetadataConfigurationResponse* trt__SetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,	///< Input parameter
    _trt__SetMetadataConfigurationResponse* trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,
    // output parameters:
    _trt__SetAudioOutputConfigurationResponse* trt__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,
    // output parameters:
    _trt__SetAudioOutputConfigurationResponse* trt__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,	///< Input parameter
    _trt__SetAudioOutputConfigurationResponse* trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    _trt__SetAudioDecoderConfigurationResponse* trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    _trt__SetAudioDecoderConfigurationResponse* trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    _trt__SetAudioDecoderConfigurationResponse* trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse* trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse* trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    _trt__GetVideoSourceConfigurationOptionsResponse* trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This operation returns the available options (supported values and ranges for video
encoder
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified,
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse* trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse* trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    _trt__GetVideoEncoderConfigurationOptionsResponse* trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse* trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse* trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    _trt__GetAudioSourceConfigurationOptionsResponse* trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse* trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse* trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioEncoderConfigurationOptionsResponse* trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    _trt__GetMetadataConfigurationOptionsResponse* trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    _trt__GetMetadataConfigurationOptionsResponse* trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    _trt__GetMetadataConfigurationOptionsResponse* trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    _trt__GetAudioOutputConfigurationOptionsResponse* trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    _trt__GetAudioOutputConfigurationOptionsResponse* trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    _trt__GetAudioOutputConfigurationOptionsResponse* trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioDecoderConfigurationOptionsResponse* trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioDecoderConfigurationOptionsResponse* trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioDecoderConfigurationOptionsResponse* trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding"

/**

Operation details:
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetStreamUri" of service binding "MediaBinding"

/**

Operation details:
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // output parameters:
    _trt__GetStreamUriResponse*         trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // input parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // output parameters:
    _trt__GetStreamUriResponse*         trt__GetStreamUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    _trt__GetStreamUri*                 trt__GetStreamUri,	///< Input parameter
    _trt__GetStreamUriResponse*         trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding"

/**

Operation details:
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // output parameters:
    _trt__StartMulticastStreamingResponse* trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // output parameters:
    _trt__StartMulticastStreamingResponse* trt__StartMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,	///< Input parameter
    _trt__StartMulticastStreamingResponse* trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding"

/**

Operation details:
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // output parameters:
    _trt__StopMulticastStreamingResponse* trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // output parameters:
    _trt__StopMulticastStreamingResponse* trt__StopMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,	///< Input parameter
    _trt__StopMulticastStreamingResponse* trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding"

/**

Operation details:
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // output parameters:
    _trt__SetSynchronizationPointResponse* trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // output parameters:
    _trt__SetSynchronizationPointResponse* trt__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,	///< Input parameter
    _trt__SetSynchronizationPointResponse* trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetSnapshotUri" of service binding "MediaBinding"

/**

Operation details:
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // output parameters:
    _trt__GetSnapshotUriResponse*       trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // output parameters:
    _trt__GetSnapshotUriResponse*       trt__GetSnapshotUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,	///< Input parameter
    _trt__GetSnapshotUriResponse*       trt__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceModes" of service binding "MediaBinding"

/**

Operation details:
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,
    // output parameters:
    _trt__GetVideoSourceModesResponse*  trt__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,
    // output parameters:
    _trt__GetVideoSourceModesResponse*  trt__GetVideoSourceModesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceModes SOAP
//gsoap trt  service method-style:	GetVideoSourceModes document
//gsoap trt  service method-encoding:	GetVideoSourceModes literal
//gsoap trt  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes
//gsoap trt  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse
int __trt__GetVideoSourceModes(
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,	///< Input parameter
    _trt__GetVideoSourceModesResponse*  trt__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoSourceMode" of service binding "MediaBinding"

/**

Operation details:
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,
    // output parameters:
    _trt__SetVideoSourceModeResponse*   trt__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,
    // output parameters:
    _trt__SetVideoSourceModeResponse*   trt__SetVideoSourceModeResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoSourceMode SOAP
//gsoap trt  service method-style:	SetVideoSourceMode document
//gsoap trt  service method-encoding:	SetVideoSourceMode literal
//gsoap trt  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode
//gsoap trt  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse
int __trt__SetVideoSourceMode(
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,	///< Input parameter
    _trt__SetVideoSourceModeResponse*   trt__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetOSDs" of service binding "MediaBinding"

/**

Operation details:
Get the OSDs.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetOSDs*                      trt__GetOSDs,
    // output parameters:
    _trt__GetOSDsResponse*              trt__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDs(
    struct soap *soap,
    // input parameters:
    _trt__GetOSDs*                      trt__GetOSDs,
    // output parameters:
    _trt__GetOSDsResponse*              trt__GetOSDsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetOSDs SOAP
//gsoap trt  service method-style:	GetOSDs document
//gsoap trt  service method-encoding:	GetOSDs literal
//gsoap trt  service method-input-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDs
//gsoap trt  service method-output-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse
int __trt__GetOSDs(
    _trt__GetOSDs*                      trt__GetOSDs,	///< Input parameter
    _trt__GetOSDsResponse*              trt__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetOSD" of service binding "MediaBinding"

/**

Operation details:
Get the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetOSD*                       trt__GetOSD,
    // output parameters:
    _trt__GetOSDResponse*               trt__GetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSD(
    struct soap *soap,
    // input parameters:
    _trt__GetOSD*                       trt__GetOSD,
    // output parameters:
    _trt__GetOSDResponse*               trt__GetOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetOSD SOAP
//gsoap trt  service method-style:	GetOSD document
//gsoap trt  service method-encoding:	GetOSD literal
//gsoap trt  service method-input-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSD
//gsoap trt  service method-output-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSDResponse
int __trt__GetOSD(
    _trt__GetOSD*                       trt__GetOSD,	///< Input parameter
    _trt__GetOSDResponse*               trt__GetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetOSDOptions" of service binding "MediaBinding"

/**

Operation details:
Get the OSD Options.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetOSDOptions*                trt__GetOSDOptions,
    // output parameters:
    _trt__GetOSDOptionsResponse*        trt__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetOSDOptions*                trt__GetOSDOptions,
    // output parameters:
    _trt__GetOSDOptionsResponse*        trt__GetOSDOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetOSDOptions SOAP
//gsoap trt  service method-style:	GetOSDOptions document
//gsoap trt  service method-encoding:	GetOSDOptions literal
//gsoap trt  service method-input-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptions
//gsoap trt  service method-output-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse
int __trt__GetOSDOptions(
    _trt__GetOSDOptions*                trt__GetOSDOptions,	///< Input parameter
    _trt__GetOSDOptionsResponse*        trt__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetOSD" of service binding "MediaBinding"

/**

Operation details:
Set the OSD

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetOSD*                       trt__SetOSD,
    // output parameters:
    _trt__SetOSDResponse*               trt__SetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetOSD(
    struct soap *soap,
    // input parameters:
    _trt__SetOSD*                       trt__SetOSD,
    // output parameters:
    _trt__SetOSDResponse*               trt__SetOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetOSD SOAP
//gsoap trt  service method-style:	SetOSD document
//gsoap trt  service method-encoding:	SetOSD literal
//gsoap trt  service method-input-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSD
//gsoap trt  service method-output-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSDResponse
int __trt__SetOSD(
    _trt__SetOSD*                       trt__SetOSD,	///< Input parameter
    _trt__SetOSDResponse*               trt__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__CreateOSD" of service binding "MediaBinding"

/**

Operation details:
Create the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__CreateOSD*                    trt__CreateOSD,
    // output parameters:
    _trt__CreateOSDResponse*            trt__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateOSD(
    struct soap *soap,
    // input parameters:
    _trt__CreateOSD*                    trt__CreateOSD,
    // output parameters:
    _trt__CreateOSDResponse*            trt__CreateOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	CreateOSD SOAP
//gsoap trt  service method-style:	CreateOSD document
//gsoap trt  service method-encoding:	CreateOSD literal
//gsoap trt  service method-input-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSD
//gsoap trt  service method-output-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse
int __trt__CreateOSD(
    _trt__CreateOSD*                    trt__CreateOSD,	///< Input parameter
    _trt__CreateOSDResponse*            trt__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__DeleteOSD" of service binding "MediaBinding"

/**

Operation details:
Delete the OSD.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__DeleteOSD*                    trt__DeleteOSD,
    // output parameters:
    _trt__DeleteOSDResponse*            trt__DeleteOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteOSD(
    struct soap *soap,
    // input parameters:
    _trt__DeleteOSD*                    trt__DeleteOSD,
    // output parameters:
    _trt__DeleteOSDResponse*            trt__DeleteOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	DeleteOSD SOAP
//gsoap trt  service method-style:	DeleteOSD document
//gsoap trt  service method-encoding:	DeleteOSD literal
//gsoap trt  service method-input-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSD
//gsoap trt  service method-output-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse
int __trt__DeleteOSD(
    _trt__DeleteOSD*                    trt__DeleteOSD,	///< Input parameter
    _trt__DeleteOSDResponse*            trt__DeleteOSDResponse	///< Output parameter
);

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding  "MediaBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ReceiverBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__GetServiceCapabilities" of service binding "ReceiverBinding"

/**

Operation details:
Returns the capabilities of the receiver service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__GetServiceCapabilities*       trv__GetServiceCapabilities,
    // output parameters:
    _trv__GetServiceCapabilitiesResponse* trv__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _trv__GetServiceCapabilities*       trv__GetServiceCapabilities,
    // output parameters:
    _trv__GetServiceCapabilitiesResponse* trv__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trv  service method-style:	GetServiceCapabilities document
//gsoap trv  service method-encoding:	GetServiceCapabilities literal
//gsoap trv  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities
//gsoap trv  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse
int __trv__GetServiceCapabilities(
    _trv__GetServiceCapabilities*       trv__GetServiceCapabilities,	///< Input parameter
    _trv__GetServiceCapabilitiesResponse* trv__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceivers                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__GetReceivers" of service binding "ReceiverBinding"

/**

Operation details:

				Lists all receivers currently present on a device.
This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceivers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__GetReceivers*                 trv__GetReceivers,
    // output parameters:
    _trv__GetReceiversResponse*         trv__GetReceiversResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceivers(
    struct soap *soap,
    // input parameters:
    _trv__GetReceivers*                 trv__GetReceivers,
    // output parameters:
    _trv__GetReceiversResponse*         trv__GetReceiversResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	GetReceivers SOAP
//gsoap trv  service method-style:	GetReceivers document
//gsoap trv  service method-encoding:	GetReceivers literal
//gsoap trv  service method-input-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceivers
//gsoap trv  service method-output-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse
int __trv__GetReceivers(
    _trv__GetReceivers*                 trv__GetReceivers,	///< Input parameter
    _trv__GetReceiversResponse*         trv__GetReceiversResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiver                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__GetReceiver" of service binding "ReceiverBinding"

/**

Operation details:

				Retrieves the details of a specific receiver. This
operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__GetReceiver*                  trv__GetReceiver,
    // output parameters:
    _trv__GetReceiverResponse*          trv__GetReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceiver(
    struct soap *soap,
    // input parameters:
    _trv__GetReceiver*                  trv__GetReceiver,
    // output parameters:
    _trv__GetReceiverResponse*          trv__GetReceiverResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	GetReceiver SOAP
//gsoap trv  service method-style:	GetReceiver document
//gsoap trv  service method-encoding:	GetReceiver literal
//gsoap trv  service method-input-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiver
//gsoap trv  service method-output-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse
int __trv__GetReceiver(
    _trv__GetReceiver*                  trv__GetReceiver,	///< Input parameter
    _trv__GetReceiverResponse*          trv__GetReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__CreateReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__CreateReceiver" of service binding "ReceiverBinding"

/**

Operation details:

				Creates a new receiver. This operation is mandatory,
although the service may
				raise a fault if the receiver cannot be created.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__CreateReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__CreateReceiver*               trv__CreateReceiver,
    // output parameters:
    _trv__CreateReceiverResponse*       trv__CreateReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__CreateReceiver(
    struct soap *soap,
    // input parameters:
    _trv__CreateReceiver*               trv__CreateReceiver,
    // output parameters:
    _trv__CreateReceiverResponse*       trv__CreateReceiverResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	CreateReceiver SOAP
//gsoap trv  service method-style:	CreateReceiver document
//gsoap trv  service method-encoding:	CreateReceiver literal
//gsoap trv  service method-input-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver
//gsoap trv  service method-output-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse
int __trv__CreateReceiver(
    _trv__CreateReceiver*               trv__CreateReceiver,	///< Input parameter
    _trv__CreateReceiverResponse*       trv__CreateReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__DeleteReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__DeleteReceiver" of service binding "ReceiverBinding"

/**

Operation details:

				Deletes an existing receiver. A receiver may be
deleted only if it is not
				currently in use; otherwise a fault shall be raised.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__DeleteReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__DeleteReceiver*               trv__DeleteReceiver,
    // output parameters:
    _trv__DeleteReceiverResponse*       trv__DeleteReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__DeleteReceiver(
    struct soap *soap,
    // input parameters:
    _trv__DeleteReceiver*               trv__DeleteReceiver,
    // output parameters:
    _trv__DeleteReceiverResponse*       trv__DeleteReceiverResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	DeleteReceiver SOAP
//gsoap trv  service method-style:	DeleteReceiver document
//gsoap trv  service method-encoding:	DeleteReceiver literal
//gsoap trv  service method-input-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver
//gsoap trv  service method-output-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse
int __trv__DeleteReceiver(
    _trv__DeleteReceiver*               trv__DeleteReceiver,	///< Input parameter
    _trv__DeleteReceiverResponse*       trv__DeleteReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__ConfigureReceiver                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__ConfigureReceiver" of service binding "ReceiverBinding"

/**

Operation details:

				Configures an existing receiver. This operation
is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__ConfigureReceiver(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__ConfigureReceiver*            trv__ConfigureReceiver,
    // output parameters:
    _trv__ConfigureReceiverResponse*    trv__ConfigureReceiverResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__ConfigureReceiver(
    struct soap *soap,
    // input parameters:
    _trv__ConfigureReceiver*            trv__ConfigureReceiver,
    // output parameters:
    _trv__ConfigureReceiverResponse*    trv__ConfigureReceiverResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	ConfigureReceiver SOAP
//gsoap trv  service method-style:	ConfigureReceiver document
//gsoap trv  service method-encoding:	ConfigureReceiver literal
//gsoap trv  service method-input-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver
//gsoap trv  service method-output-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse
int __trv__ConfigureReceiver(
    _trv__ConfigureReceiver*            trv__ConfigureReceiver,	///< Input parameter
    _trv__ConfigureReceiverResponse*    trv__ConfigureReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__SetReceiverMode                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__SetReceiverMode" of service binding "ReceiverBinding"

/**

Operation details:

				Sets the mode of the receiver without affecting
the rest of its configuration.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__SetReceiverMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__SetReceiverMode*              trv__SetReceiverMode,
    // output parameters:
    _trv__SetReceiverModeResponse*      trv__SetReceiverModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__SetReceiverMode(
    struct soap *soap,
    // input parameters:
    _trv__SetReceiverMode*              trv__SetReceiverMode,
    // output parameters:
    _trv__SetReceiverModeResponse*      trv__SetReceiverModeResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	SetReceiverMode SOAP
//gsoap trv  service method-style:	SetReceiverMode document
//gsoap trv  service method-encoding:	SetReceiverMode literal
//gsoap trv  service method-input-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode
//gsoap trv  service method-output-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse
int __trv__SetReceiverMode(
    _trv__SetReceiverMode*              trv__SetReceiverMode,	///< Input parameter
    _trv__SetReceiverModeResponse*      trv__SetReceiverModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiverState                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__trv__GetReceiverState" of service binding "ReceiverBinding"

/**

Operation details:

				Determines whether the receiver is currently disconnected,
connected or
				attempting to connect.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trv__GetReceiverState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trv__GetReceiverState*             trv__GetReceiverState,
    // output parameters:
    _trv__GetReceiverStateResponse*     trv__GetReceiverStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trv__GetReceiverState(
    struct soap *soap,
    // input parameters:
    _trv__GetReceiverState*             trv__GetReceiverState,
    // output parameters:
    _trv__GetReceiverStateResponse*     trv__GetReceiverStateResponse
  );
@endcode

C++ proxy class (defined in soapReceiverBindingProxy.h):
@code
  class ReceiverBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapReceiverBindingService.h):
@code
  class ReceiverBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap trv  service method-protocol:	GetReceiverState SOAP
//gsoap trv  service method-style:	GetReceiverState document
//gsoap trv  service method-encoding:	GetReceiverState literal
//gsoap trv  service method-input-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState
//gsoap trv  service method-output-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse
int __trv__GetReceiverState(
    _trv__GetReceiverState*             trv__GetReceiverState,	///< Input parameter
    _trv__GetReceiverStateResponse*     trv__GetReceiverStateResponse	///< Output parameter
);

/**

@page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_policy_enablers Policy Enablers of Binding  "ReceiverBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SearchBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetServiceCapabilities" of service binding "SearchBinding"

/**

Operation details:
Returns the capabilities of the search service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetServiceCapabilities*       tse__GetServiceCapabilities,
    // output parameters:
    _tse__GetServiceCapabilitiesResponse* tse__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tse__GetServiceCapabilities*       tse__GetServiceCapabilities,
    // output parameters:
    _tse__GetServiceCapabilitiesResponse* tse__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tse  service method-style:	GetServiceCapabilities document
//gsoap tse  service method-encoding:	GetServiceCapabilities literal
//gsoap tse  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities
//gsoap tse  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilitiesResponse
int __tse__GetServiceCapabilities(
    _tse__GetServiceCapabilities*       tse__GetServiceCapabilities,	///< Input parameter
    _tse__GetServiceCapabilitiesResponse* tse__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingSummary                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetRecordingSummary" of service binding "SearchBinding"

/**

Operation details:
GetRecordingSummary is used to get a summary description of all recorded data. This
				operation is mandatory to support for a device implementing
the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummaryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetRecordingSummary(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetRecordingSummary*          tse__GetRecordingSummary,
    // output parameters:
    _tse__GetRecordingSummaryResponse*  tse__GetRecordingSummaryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetRecordingSummary(
    struct soap *soap,
    // input parameters:
    _tse__GetRecordingSummary*          tse__GetRecordingSummary,
    // output parameters:
    _tse__GetRecordingSummaryResponse*  tse__GetRecordingSummaryResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetRecordingSummary SOAP
//gsoap tse  service method-style:	GetRecordingSummary document
//gsoap tse  service method-encoding:	GetRecordingSummary literal
//gsoap tse  service method-input-action:	GetRecordingSummary http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary
//gsoap tse  service method-output-action:	GetRecordingSummary http://www.onvif.org/ver10/search/wsdl/GetRecordingSummaryResponse
int __tse__GetRecordingSummary(
    _tse__GetRecordingSummary*          tse__GetRecordingSummary,	///< Input parameter
    _tse__GetRecordingSummaryResponse*  tse__GetRecordingSummaryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingInformation                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetRecordingInformation" of service binding "SearchBinding"

/**

Operation details:
Returns information about a single Recording specified by a RecordingToken. This
operation
				is mandatory to support for a device implementing
the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetRecordingInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetRecordingInformation*      tse__GetRecordingInformation,
    // output parameters:
    _tse__GetRecordingInformationResponse* tse__GetRecordingInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetRecordingInformation(
    struct soap *soap,
    // input parameters:
    _tse__GetRecordingInformation*      tse__GetRecordingInformation,
    // output parameters:
    _tse__GetRecordingInformationResponse* tse__GetRecordingInformationResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetRecordingInformation SOAP
//gsoap tse  service method-style:	GetRecordingInformation document
//gsoap tse  service method-encoding:	GetRecordingInformation literal
//gsoap tse  service method-input-action:	GetRecordingInformation http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation
//gsoap tse  service method-output-action:	GetRecordingInformation http://www.onvif.org/ver10/search/wsdl/GetRecordingInformationResponse
int __tse__GetRecordingInformation(
    _tse__GetRecordingInformation*      tse__GetRecordingInformation,	///< Input parameter
    _tse__GetRecordingInformationResponse* tse__GetRecordingInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetMediaAttributes                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetMediaAttributes" of service binding "SearchBinding"

/**

Operation details:
Returns a set of media attributes for all tracks of the specified recordings at
a specified point
				in time. Clients using this operation shall be able
to use it as a non blocking operation. A
				device shall set the starttime and endtime of the
MediaAttributes structure to equal values if
				calculating this range would causes this operation
to block. See MediaAttributes structure for
				more information. This operation is mandatory to
support for a device implementing the
				recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetMediaAttributes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetMediaAttributes*           tse__GetMediaAttributes,
    // output parameters:
    _tse__GetMediaAttributesResponse*   tse__GetMediaAttributesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetMediaAttributes(
    struct soap *soap,
    // input parameters:
    _tse__GetMediaAttributes*           tse__GetMediaAttributes,
    // output parameters:
    _tse__GetMediaAttributesResponse*   tse__GetMediaAttributesResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetMediaAttributes SOAP
//gsoap tse  service method-style:	GetMediaAttributes document
//gsoap tse  service method-encoding:	GetMediaAttributes literal
//gsoap tse  service method-input-action:	GetMediaAttributes http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes
//gsoap tse  service method-output-action:	GetMediaAttributes http://www.onvif.org/ver10/search/wsdl/GetMediaAttributesResponse
int __tse__GetMediaAttributes(
    _tse__GetMediaAttributes*           tse__GetMediaAttributes,	///< Input parameter
    _tse__GetMediaAttributesResponse*   tse__GetMediaAttributesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindRecordings                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__FindRecordings" of service binding "SearchBinding"

/**

Operation details:
FindRecordings starts a search session, looking for recordings that matches the
scope (See
				20.2.4) defined in the request. Results from the
search are acquired using the
				GetRecordingSearchResults request, specifying the
search token returned from this request.
				The device shall continue searching until one of
the following occurs:<ul>
					<li>The entire time range from StartPoint
to EndPoint has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				The order of the results is undefined, to allow
the device to return results in any order they
				are found. This operation is mandatory to support
for a device implementing the recording
				search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindRecordings"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindRecordings"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindRecordingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindRecordings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__FindRecordings*               tse__FindRecordings,
    // output parameters:
    _tse__FindRecordingsResponse*       tse__FindRecordingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindRecordings(
    struct soap *soap,
    // input parameters:
    _tse__FindRecordings*               tse__FindRecordings,
    // output parameters:
    _tse__FindRecordingsResponse*       tse__FindRecordingsResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	FindRecordings SOAP
//gsoap tse  service method-style:	FindRecordings document
//gsoap tse  service method-encoding:	FindRecordings literal
//gsoap tse  service method-input-action:	FindRecordings http://www.onvif.org/ver10/search/wsdl/FindRecordings
//gsoap tse  service method-output-action:	FindRecordings http://www.onvif.org/ver10/search/wsdl/FindRecordingsResponse
int __tse__FindRecordings(
    _tse__FindRecordings*               tse__FindRecordings,	///< Input parameter
    _tse__FindRecordingsResponse*       tse__FindRecordingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingSearchResults                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetRecordingSearchResults" of service binding "SearchBinding"

/**

Operation details:
GetRecordingSearchResults acquires the results from a recording search session previously
				initiated by a FindRecordings operation. The response
shall not include results already
				returned in previous requests for the same session.
If MaxResults is specified, the response
				shall not contain more than MaxResults results.
The number of results relates to the number of recordings.
				For viewing individual recorded data for a signal
track use the FindEvents method.<br/>
				GetRecordingSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support for a device
implementing the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetRecordingSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetRecordingSearchResults*    tse__GetRecordingSearchResults,
    // output parameters:
    _tse__GetRecordingSearchResultsResponse* tse__GetRecordingSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetRecordingSearchResults(
    struct soap *soap,
    // input parameters:
    _tse__GetRecordingSearchResults*    tse__GetRecordingSearchResults,
    // output parameters:
    _tse__GetRecordingSearchResultsResponse* tse__GetRecordingSearchResultsResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetRecordingSearchResults SOAP
//gsoap tse  service method-style:	GetRecordingSearchResults document
//gsoap tse  service method-encoding:	GetRecordingSearchResults literal
//gsoap tse  service method-input-action:	GetRecordingSearchResults http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults
//gsoap tse  service method-output-action:	GetRecordingSearchResults http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResultsResponse
int __tse__GetRecordingSearchResults(
    _tse__GetRecordingSearchResults*    tse__GetRecordingSearchResults,	///< Input parameter
    _tse__GetRecordingSearchResultsResponse* tse__GetRecordingSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindEvents                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__FindEvents" of service binding "SearchBinding"

/**

Operation details:
FindEvents starts a search session, looking for recording events (in the scope that
				matches the search filter defined in the request.
Results from the search are
				acquired using the GetEventSearchResults request,
specifying the search token returned from
				this request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				Results shall be ordered by time, ascending in case
of forward search, or descending in case
				of backward search. This operation is mandatory
to support for a device implementing the
				recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindEvents"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindEvents"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindEventsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindEvents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__FindEvents*                   tse__FindEvents,
    // output parameters:
    _tse__FindEventsResponse*           tse__FindEventsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindEvents(
    struct soap *soap,
    // input parameters:
    _tse__FindEvents*                   tse__FindEvents,
    // output parameters:
    _tse__FindEventsResponse*           tse__FindEventsResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	FindEvents SOAP
//gsoap tse  service method-style:	FindEvents document
//gsoap tse  service method-encoding:	FindEvents literal
//gsoap tse  service method-input-action:	FindEvents http://www.onvif.org/ver10/search/wsdl/FindEvents
//gsoap tse  service method-output-action:	FindEvents http://www.onvif.org/ver10/search/wsdl/FindEventsResponse
int __tse__FindEvents(
    _tse__FindEvents*                   tse__FindEvents,	///< Input parameter
    _tse__FindEventsResponse*           tse__FindEventsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetEventSearchResults                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetEventSearchResults" of service binding "SearchBinding"

/**

Operation details:
GetEventSearchResults acquires the results from a recording event search session
previously
				initiated by a FindEvents operation. The response
shall not include results already returned in
				previous requests for the same session. If MaxResults
is specified, the response shall not
				contain more than MaxResults results.<br/>
				GetEventSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support for a device
implementing the recording search service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetEventSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetEventSearchResults*        tse__GetEventSearchResults,
    // output parameters:
    _tse__GetEventSearchResultsResponse* tse__GetEventSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetEventSearchResults(
    struct soap *soap,
    // input parameters:
    _tse__GetEventSearchResults*        tse__GetEventSearchResults,
    // output parameters:
    _tse__GetEventSearchResultsResponse* tse__GetEventSearchResultsResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetEventSearchResults SOAP
//gsoap tse  service method-style:	GetEventSearchResults document
//gsoap tse  service method-encoding:	GetEventSearchResults literal
//gsoap tse  service method-input-action:	GetEventSearchResults http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults
//gsoap tse  service method-output-action:	GetEventSearchResults http://www.onvif.org/ver10/search/wsdl/GetEventSearchResultsResponse
int __tse__GetEventSearchResults(
    _tse__GetEventSearchResults*        tse__GetEventSearchResults,	///< Input parameter
    _tse__GetEventSearchResultsResponse* tse__GetEventSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindPTZPosition                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__FindPTZPosition" of service binding "SearchBinding"

/**

Operation details:
FindPTZPosition starts a search session, looking for ptz positions in the scope
(See 20.2.4)
				that matches the search filter defined in the request.
Results from the search are acquired
				using the GetPTZPositionSearchResults request, specifying
the search token returned from
				this request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				This operation is mandatory to support whenever
CanContainPTZ is true for any metadata
				track in any recording on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindPTZPosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__FindPTZPosition*              tse__FindPTZPosition,
    // output parameters:
    _tse__FindPTZPositionResponse*      tse__FindPTZPositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindPTZPosition(
    struct soap *soap,
    // input parameters:
    _tse__FindPTZPosition*              tse__FindPTZPosition,
    // output parameters:
    _tse__FindPTZPositionResponse*      tse__FindPTZPositionResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	FindPTZPosition SOAP
//gsoap tse  service method-style:	FindPTZPosition document
//gsoap tse  service method-encoding:	FindPTZPosition literal
//gsoap tse  service method-input-action:	FindPTZPosition http://www.onvif.org/ver10/search/wsdl/FindPTZPosition
//gsoap tse  service method-output-action:	FindPTZPosition http://www.onvif.org/ver10/search/wsdl/FindPTZPositionResponse
int __tse__FindPTZPosition(
    _tse__FindPTZPosition*              tse__FindPTZPosition,	///< Input parameter
    _tse__FindPTZPositionResponse*      tse__FindPTZPositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetPTZPositionSearchResults                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetPTZPositionSearchResults" of service binding "SearchBinding"

/**

Operation details:
GetPTZPositionSearchResults acquires the results from a ptz position search session
				previously initiated by a FindPTZPosition operation.
The response shall not include results
				already returned in previous requests for the same
session. If MaxResults is specified, the
				response shall not contain more than MaxResults
results.<br/>
				GetPTZPositionSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support whenever
CanContainPTZ is true for any metadata
				track in any recording on the device.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetPTZPositionSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetPTZPositionSearchResults*  tse__GetPTZPositionSearchResults,
    // output parameters:
    _tse__GetPTZPositionSearchResultsResponse* tse__GetPTZPositionSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetPTZPositionSearchResults(
    struct soap *soap,
    // input parameters:
    _tse__GetPTZPositionSearchResults*  tse__GetPTZPositionSearchResults,
    // output parameters:
    _tse__GetPTZPositionSearchResultsResponse* tse__GetPTZPositionSearchResultsResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetPTZPositionSearchResults SOAP
//gsoap tse  service method-style:	GetPTZPositionSearchResults document
//gsoap tse  service method-encoding:	GetPTZPositionSearchResults literal
//gsoap tse  service method-input-action:	GetPTZPositionSearchResults http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults
//gsoap tse  service method-output-action:	GetPTZPositionSearchResults http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResultsResponse
int __tse__GetPTZPositionSearchResults(
    _tse__GetPTZPositionSearchResults*  tse__GetPTZPositionSearchResults,	///< Input parameter
    _tse__GetPTZPositionSearchResultsResponse* tse__GetPTZPositionSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetSearchState                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetSearchState" of service binding "SearchBinding"

/**

Operation details:
GetSearchState returns the current state of the specified search session. This command
is deprecated .

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetSearchState"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetSearchState"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetSearchStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetSearchState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetSearchState*               tse__GetSearchState,
    // output parameters:
    _tse__GetSearchStateResponse*       tse__GetSearchStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetSearchState(
    struct soap *soap,
    // input parameters:
    _tse__GetSearchState*               tse__GetSearchState,
    // output parameters:
    _tse__GetSearchStateResponse*       tse__GetSearchStateResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetSearchState SOAP
//gsoap tse  service method-style:	GetSearchState document
//gsoap tse  service method-encoding:	GetSearchState literal
//gsoap tse  service method-input-action:	GetSearchState http://www.onvif.org/ver10/search/wsdl/GetSearchState
//gsoap tse  service method-output-action:	GetSearchState http://www.onvif.org/ver10/search/wsdl/GetSearchStateResponse
int __tse__GetSearchState(
    _tse__GetSearchState*               tse__GetSearchState,	///< Input parameter
    _tse__GetSearchStateResponse*       tse__GetSearchStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__EndSearch                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__EndSearch" of service binding "SearchBinding"

/**

Operation details:
EndSearch stops and ongoing search session, causing any blocking result request
to return
				and the SearchToken to become invalid. If the search
was interrupted before completion, the
				point in time that the search had reached shall
be returned. If the search had not yet begun,
				the StartPoint shall be returned. If the search
was completed the original EndPoint supplied
				by the Find operation shall be returned. When issuing
EndSearch on a FindRecordings request the
				EndPoint is undefined and shall not be used since
the FindRecordings request doesn't have
				StartPoint/EndPoint. This operation is mandatory
to support for a device implementing the
				recording search service.
			

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/EndSearch"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/EndSearch"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/EndSearchResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__EndSearch(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__EndSearch*                    tse__EndSearch,
    // output parameters:
    _tse__EndSearchResponse*            tse__EndSearchResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__EndSearch(
    struct soap *soap,
    // input parameters:
    _tse__EndSearch*                    tse__EndSearch,
    // output parameters:
    _tse__EndSearchResponse*            tse__EndSearchResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	EndSearch SOAP
//gsoap tse  service method-style:	EndSearch document
//gsoap tse  service method-encoding:	EndSearch literal
//gsoap tse  service method-input-action:	EndSearch http://www.onvif.org/ver10/search/wsdl/EndSearch
//gsoap tse  service method-output-action:	EndSearch http://www.onvif.org/ver10/search/wsdl/EndSearchResponse
int __tse__EndSearch(
    _tse__EndSearch*                    tse__EndSearch,	///< Input parameter
    _tse__EndSearchResponse*            tse__EndSearchResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindMetadata                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__FindMetadata" of service binding "SearchBinding"

/**

Operation details:
FindMetadata starts a search session, looking for metadata in the scope (See 20.2.4)
that
				matches the search filter defined in the request.
Results from the search are acquired using
				the GetMetadataSearchResults request, specifying
the search token returned from this
				request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				This operation is mandatory to support if the MetaDataSearch
capability is set to true in the
				SearchCapabilities structure return by the GetCapabilities
command in the Device service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/FindMetadata"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindMetadata"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindMetadataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__FindMetadata(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__FindMetadata*                 tse__FindMetadata,
    // output parameters:
    _tse__FindMetadataResponse*         tse__FindMetadataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__FindMetadata(
    struct soap *soap,
    // input parameters:
    _tse__FindMetadata*                 tse__FindMetadata,
    // output parameters:
    _tse__FindMetadataResponse*         tse__FindMetadataResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	FindMetadata SOAP
//gsoap tse  service method-style:	FindMetadata document
//gsoap tse  service method-encoding:	FindMetadata literal
//gsoap tse  service method-input-action:	FindMetadata http://www.onvif.org/ver10/search/wsdl/FindMetadata
//gsoap tse  service method-output-action:	FindMetadata http://www.onvif.org/ver10/search/wsdl/FindMetadataResponse
int __tse__FindMetadata(
    _tse__FindMetadata*                 tse__FindMetadata,	///< Input parameter
    _tse__FindMetadataResponse*         tse__FindMetadataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetMetadataSearchResults                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tse__GetMetadataSearchResults" of service binding "SearchBinding"

/**

Operation details:
GetMetadataSearchResults acquires the results from a recording search session previously
				initiated by a FindMetadata operation. The response
shall not include results already returned
				in previous requests for the same session. If MaxResults
is specified, the response shall not
				contain more than MaxResults results.<br/>
				GetMetadataSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support if the MetaDataSearch
capability is set to true in the
				SearchCapabilities structure return by the GetCapabilities
command in the Device service.

  - SOAP document/literal style messaging

  - Action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResultsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tse__GetMetadataSearchResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tse__GetMetadataSearchResults*     tse__GetMetadataSearchResults,
    // output parameters:
    _tse__GetMetadataSearchResultsResponse* tse__GetMetadataSearchResultsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tse__GetMetadataSearchResults(
    struct soap *soap,
    // input parameters:
    _tse__GetMetadataSearchResults*     tse__GetMetadataSearchResults,
    // output parameters:
    _tse__GetMetadataSearchResultsResponse* tse__GetMetadataSearchResultsResponse
  );
@endcode

C++ proxy class (defined in soapSearchBindingProxy.h):
@code
  class SearchBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSearchBindingService.h):
@code
  class SearchBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tse  service method-protocol:	GetMetadataSearchResults SOAP
//gsoap tse  service method-style:	GetMetadataSearchResults document
//gsoap tse  service method-encoding:	GetMetadataSearchResults literal
//gsoap tse  service method-input-action:	GetMetadataSearchResults http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults
//gsoap tse  service method-output-action:	GetMetadataSearchResults http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResultsResponse
int __tse__GetMetadataSearchResults(
    _tse__GetMetadataSearchResults*     tse__GetMetadataSearchResults,	///< Input parameter
    _tse__GetMetadataSearchResultsResponse* tse__GetMetadataSearchResultsResponse	///< Output parameter
);

/**

@page SearchBinding Binding "SearchBinding"

@section SearchBinding_policy_enablers Policy Enablers of Binding  "SearchBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <tptz:GetServiceCapabilities> @ref _tptz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    @endcode

  - <tptz:GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    @endcode

  - <tptz:Capabilities> (use wsdl2h option -g to auto-generate)

  - <tptz:GetNodes> @ref _tptz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    @endcode

  - <tptz:GetNodesResponse> @ref _tptz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    @endcode

  - <tptz:GetNode> @ref _tptz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNode(struct soap*, _tptz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNode(struct soap*, _tptz__GetNode*);
    @endcode

  - <tptz:GetNodeResponse> @ref _tptz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    @endcode

  - <tptz:GetConfigurations> @ref _tptz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    @endcode

  - <tptz:GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    @endcode

  - <tptz:GetConfiguration> @ref _tptz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    @endcode

  - <tptz:GetConfigurationResponse> @ref _tptz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    @endcode

  - <tptz:SetConfiguration> @ref _tptz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    @endcode

  - <tptz:SetConfigurationResponse> @ref _tptz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    @endcode

  - <tptz:GetConfigurationOptions> @ref _tptz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    @endcode

  - <tptz:GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    @endcode

  - <tptz:SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    @endcode

  - <tptz:SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    @endcode

  - <tptz:GetPresets> @ref _tptz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    @endcode

  - <tptz:GetPresetsResponse> @ref _tptz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    @endcode

  - <tptz:SetPreset> @ref _tptz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    @endcode

  - <tptz:SetPresetResponse> @ref _tptz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    @endcode

  - <tptz:RemovePreset> @ref _tptz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    @endcode

  - <tptz:RemovePresetResponse> @ref _tptz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    @endcode

  - <tptz:GotoPreset> @ref _tptz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    @endcode

  - <tptz:GotoPresetResponse> @ref _tptz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    @endcode

  - <tptz:GetStatus> @ref _tptz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    @endcode

  - <tptz:GetStatusResponse> @ref _tptz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    @endcode

  - <tptz:GotoHomePosition> @ref _tptz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    @endcode

  - <tptz:GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    @endcode

  - <tptz:SetHomePosition> @ref _tptz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    @endcode

  - <tptz:SetHomePositionResponse> @ref _tptz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    @endcode

  - <tptz:ContinuousMove> @ref _tptz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    @endcode

  - <tptz:ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    @endcode

  - <tptz:RelativeMove> @ref _tptz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    @endcode

  - <tptz:RelativeMoveResponse> @ref _tptz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    @endcode

  - <tptz:AbsoluteMove> @ref _tptz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    @endcode

  - <tptz:AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    @endcode

  - <tptz:GeoMove> @ref _tptz__GeoMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    @endcode

  - <tptz:GeoMoveResponse> @ref _tptz__GeoMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    @endcode

  - <tptz:Stop> @ref _tptz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__Stop(struct soap*, _tptz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__Stop(struct soap*, _tptz__Stop*);
    @endcode

  - <tptz:StopResponse> @ref _tptz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    @endcode

  - <tptz:GetPresetTours> @ref _tptz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    @endcode

  - <tptz:GetPresetToursResponse> @ref _tptz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    @endcode

  - <tptz:GetPresetTour> @ref _tptz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    @endcode

  - <tptz:GetPresetTourResponse> @ref _tptz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    @endcode

  - <tptz:GetPresetTourOptions> @ref _tptz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    @endcode

  - <tptz:GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    @endcode

  - <tptz:CreatePresetTour> @ref _tptz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    @endcode

  - <tptz:CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    @endcode

  - <tptz:ModifyPresetTour> @ref _tptz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    @endcode

  - <tptz:ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    @endcode

  - <tptz:OperatePresetTour> @ref _tptz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    @endcode

  - <tptz:OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    @endcode

  - <tptz:RemovePresetTour> @ref _tptz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    @endcode

  - <tptz:RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    @endcode

  - <tptz:GetCompatibleConfigurations> @ref _tptz__GetCompatibleConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    @endcode

  - <tptz:GetCompatibleConfigurationsResponse> @ref _tptz__GetCompatibleConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    @endcode

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:StringItems> @ref _tt__StringItems
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__StringItems(struct soap*, _tt__StringItems*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__StringItems(struct soap*, _tt__StringItems*);
    @endcode

  - <tt:StringList> (use wsdl2h option -g to auto-generate)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate)

  - <tt:IntList> (use wsdl2h option -g to auto-generate)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <tt:Message> @ref _tt__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tt__Message(struct soap*, _tt__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__tt__Message(struct soap*, _tt__Message*);
    @endcode

  - <tt:Polyline> (use wsdl2h option -g to auto-generate)

  - <tt:Polygon> (use wsdl2h option -g to auto-generate)

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP*);
    @endcode

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP*);
    @endcode

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <wsnt:Notify> @ref _wsnt__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Notify(struct soap*, _wsnt__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Notify(struct soap*, _wsnt__Notify*);
    @endcode

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UseRaw(struct soap*, _wsnt__UseRaw*);
    @endcode

  - <wsnt:Subscribe> @ref _wsnt__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Subscribe(struct soap*, _wsnt__Subscribe*);
    @endcode

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse*);
    @endcode

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage*);
    @endcode

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse*);
    @endcode

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessages(struct soap*, _wsnt__GetMessages*);
    @endcode

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse*);
    @endcode

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint*);
    @endcode

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse*);
    @endcode

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint*);
    @endcode

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse*);
    @endcode

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:Renew> @ref _wsnt__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Renew(struct soap*, _wsnt__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Renew(struct soap*, _wsnt__Renew*);
    @endcode

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse*);
    @endcode

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe*);
    @endcode

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse*);
    @endcode

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription*);
    @endcode

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse*);
    @endcode

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription*);
    @endcode

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse*);
    @endcode

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate)

@section tdn Top-level root elements of schema "http://www.onvif.org/ver10/network/wsdl"

  - <tdn:Hello> (use wsdl2h option -g to auto-generate)

  - <tdn:HelloResponse> (use wsdl2h option -g to auto-generate)

  - <tdn:Probe> (use wsdl2h option -g to auto-generate)

  - <tdn:ProbeResponse> (use wsdl2h option -g to auto-generate)

  - <tdn:Bye> (use wsdl2h option -g to auto-generate)

  - <tdn:ByeResponse> (use wsdl2h option -g to auto-generate)

@section tmd Top-level root elements of schema "http://www.onvif.org/ver10/deviceIO/wsdl"

  - <tmd:GetServiceCapabilities> @ref _tmd__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities*);
    @endcode

  - <tmd:GetServiceCapabilitiesResponse> @ref _tmd__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse*);
    @endcode

  - <tmd:Capabilities> (use wsdl2h option -g to auto-generate)

  - <tmd:GetRelayOutputOptions> @ref _tmd__GetRelayOutputOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions*);
    @endcode

  - <tmd:GetRelayOutputOptionsResponse> @ref _tmd__GetRelayOutputOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse*);
    @endcode

  - <tmd:GetVideoSources> (use wsdl2h option -g to auto-generate)

  - <tmd:GetVideoSourcesResponse> (use wsdl2h option -g to auto-generate)

  - <tmd:GetAudioSources> (use wsdl2h option -g to auto-generate)

  - <tmd:GetAudioSourcesResponse> (use wsdl2h option -g to auto-generate)

  - <tmd:GetAudioOutputs> (use wsdl2h option -g to auto-generate)

  - <tmd:GetAudioOutputsResponse> (use wsdl2h option -g to auto-generate)

  - <tmd:GetVideoOutputs> @ref _tmd__GetVideoOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs*);
    @endcode

  - <tmd:GetVideoOutputsResponse> @ref _tmd__GetVideoOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse*);
    @endcode

  - <tmd:GetAudioSourceConfiguration> @ref _tmd__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration*);
    @endcode

  - <tmd:GetAudioSourceConfigurationResponse> @ref _tmd__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse*);
    @endcode

  - <tmd:GetAudioOutputConfiguration> @ref _tmd__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration*);
    @endcode

  - <tmd:GetAudioOutputConfigurationResponse> @ref _tmd__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse*);
    @endcode

  - <tmd:GetVideoSourceConfiguration> @ref _tmd__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration*);
    @endcode

  - <tmd:GetVideoSourceConfigurationResponse> @ref _tmd__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse*);
    @endcode

  - <tmd:GetVideoOutputConfiguration> @ref _tmd__GetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration*);
    @endcode

  - <tmd:GetVideoOutputConfigurationResponse> @ref _tmd__GetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse*);
    @endcode

  - <tmd:SetAudioSourceConfiguration> @ref _tmd__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration*);
    @endcode

  - <tmd:SetAudioSourceConfigurationResponse> @ref _tmd__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse*);
    @endcode

  - <tmd:SetAudioOutputConfiguration> @ref _tmd__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration*);
    @endcode

  - <tmd:SetAudioOutputConfigurationResponse> @ref _tmd__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse*);
    @endcode

  - <tmd:SetVideoSourceConfiguration> @ref _tmd__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration*);
    @endcode

  - <tmd:SetVideoSourceConfigurationResponse> @ref _tmd__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse*);
    @endcode

  - <tmd:SetVideoOutputConfiguration> @ref _tmd__SetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration*);
    @endcode

  - <tmd:SetVideoOutputConfigurationResponse> @ref _tmd__SetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse*);
    @endcode

  - <tmd:GetVideoSourceConfigurationOptions> @ref _tmd__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions*);
    @endcode

  - <tmd:GetVideoSourceConfigurationOptionsResponse> @ref _tmd__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <tmd:GetVideoOutputConfigurationOptions> @ref _tmd__GetVideoOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions*);
    @endcode

  - <tmd:GetVideoOutputConfigurationOptionsResponse> @ref _tmd__GetVideoOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse*);
    @endcode

  - <tmd:GetAudioSourceConfigurationOptions> @ref _tmd__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions*);
    @endcode

  - <tmd:GetAudioSourceConfigurationOptionsResponse> @ref _tmd__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <tmd:GetAudioOutputConfigurationOptions> @ref _tmd__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions*);
    @endcode

  - <tmd:GetAudioOutputConfigurationOptionsResponse> @ref _tmd__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <tmd:SetRelayOutputSettings> @ref _tmd__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings*);
    @endcode

  - <tmd:SetRelayOutputSettingsResponse> @ref _tmd__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse*);
    @endcode

  - <tmd:GetDigitalInputs> @ref _tmd__GetDigitalInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs*);
    @endcode

  - <tmd:GetDigitalInputsResponse> @ref _tmd__GetDigitalInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse*);
    @endcode

  - <tmd:GetDigitalInputConfigurationOptions> @ref _tmd__GetDigitalInputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions*);
    @endcode

  - <tmd:GetDigitalInputConfigurationOptionsResponse> @ref _tmd__GetDigitalInputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse*);
    @endcode

  - <tmd:SetDigitalInputConfigurations> @ref _tmd__SetDigitalInputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations*);
    @endcode

  - <tmd:SetDigitalInputConfigurationsResponse> @ref _tmd__SetDigitalInputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse*);
    @endcode

  - <tmd:GetSerialPorts> @ref _tmd__GetSerialPorts
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts*);
    @endcode

  - <tmd:GetSerialPortsResponse> @ref _tmd__GetSerialPortsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse*);
    @endcode

  - <tmd:GetSerialPortConfiguration> @ref _tmd__GetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration*);
    @endcode

  - <tmd:GetSerialPortConfigurationResponse> @ref _tmd__GetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse*);
    @endcode

  - <tmd:SetSerialPortConfiguration> @ref _tmd__SetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration*);
    @endcode

  - <tmd:SetSerialPortConfigurationResponse> @ref _tmd__SetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse*);
    @endcode

  - <tmd:GetSerialPortConfigurationOptions> @ref _tmd__GetSerialPortConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions*);
    @endcode

  - <tmd:GetSerialPortConfigurationOptionsResponse> @ref _tmd__GetSerialPortConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse*);
    @endcode

  - <tmd:SendReceiveSerialCommand> @ref _tmd__SendReceiveSerialCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand*);
    @endcode

  - <tmd:SendReceiveSerialCommandResponse> @ref _tmd__SendReceiveSerialCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse*);
    @endcode

@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <tev:GetServiceCapabilities> @ref _tev__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilities(struct soap*, _tev__GetServiceCapabilities*);
    @endcode

  - <tev:GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetServiceCapabilitiesResponse(struct soap*, _tev__GetServiceCapabilitiesResponse*);
    @endcode

  - <tev:Capabilities> (use wsdl2h option -g to auto-generate)

  - <tev:CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscription(struct soap*, _tev__CreatePullPointSubscription*);
    @endcode

  - <tev:CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__CreatePullPointSubscriptionResponse(struct soap*, _tev__CreatePullPointSubscriptionResponse*);
    @endcode

  - <tev:PullMessages> @ref _tev__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessages(struct soap*, _tev__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessages(struct soap*, _tev__PullMessages*);
    @endcode

  - <tev:PullMessagesResponse> @ref _tev__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesResponse(struct soap*, _tev__PullMessagesResponse*);
    @endcode

  - <tev:PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__PullMessagesFaultResponse(struct soap*, _tev__PullMessagesFaultResponse*);
    @endcode

  - <tev:Seek> @ref _tev__Seek
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__Seek(struct soap*, _tev__Seek*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__Seek(struct soap*, _tev__Seek*);
    @endcode

  - <tev:SeekResponse> @ref _tev__SeekResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SeekResponse(struct soap*, _tev__SeekResponse*);
    @endcode

  - <tev:SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPoint(struct soap*, _tev__SetSynchronizationPoint*);
    @endcode

  - <tev:SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__SetSynchronizationPointResponse(struct soap*, _tev__SetSynchronizationPointResponse*);
    @endcode

  - <tev:GetEventProperties> @ref _tev__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventProperties(struct soap*, _tev__GetEventProperties*);
    @endcode

  - <tev:GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__GetEventPropertiesResponse(struct soap*, _tev__GetEventPropertiesResponse*);
    @endcode

  - <tev:ChangedOnly> @ref _tev__ChangedOnly
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tev__ChangedOnly(struct soap*, _XML);
    // Writer (returns SOAP_OK on success):
    soap_write__tev__ChangedOnly(struct soap*, _XML);
    @endcode

@section empty Top-level root elements of schema ""

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <wsrfr:ResourceUnknownFault> (use wsdl2h option -g to auto-generate)

  - <wsrfr:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate)

@section trv Top-level root elements of schema "http://www.onvif.org/ver10/receiver/wsdl"

  - <trv:GetServiceCapabilities> @ref _trv__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetServiceCapabilities(struct soap*, _trv__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetServiceCapabilities(struct soap*, _trv__GetServiceCapabilities*);
    @endcode

  - <trv:GetServiceCapabilitiesResponse> @ref _trv__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetServiceCapabilitiesResponse(struct soap*, _trv__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetServiceCapabilitiesResponse(struct soap*, _trv__GetServiceCapabilitiesResponse*);
    @endcode

  - <trv:Capabilities> (use wsdl2h option -g to auto-generate)

  - <trv:GetReceivers> @ref _trv__GetReceivers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceivers(struct soap*, _trv__GetReceivers*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceivers(struct soap*, _trv__GetReceivers*);
    @endcode

  - <trv:GetReceiversResponse> @ref _trv__GetReceiversResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiversResponse(struct soap*, _trv__GetReceiversResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiversResponse(struct soap*, _trv__GetReceiversResponse*);
    @endcode

  - <trv:GetReceiver> @ref _trv__GetReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiver(struct soap*, _trv__GetReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiver(struct soap*, _trv__GetReceiver*);
    @endcode

  - <trv:GetReceiverResponse> @ref _trv__GetReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverResponse(struct soap*, _trv__GetReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverResponse(struct soap*, _trv__GetReceiverResponse*);
    @endcode

  - <trv:CreateReceiver> @ref _trv__CreateReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__CreateReceiver(struct soap*, _trv__CreateReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__CreateReceiver(struct soap*, _trv__CreateReceiver*);
    @endcode

  - <trv:CreateReceiverResponse> @ref _trv__CreateReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__CreateReceiverResponse(struct soap*, _trv__CreateReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__CreateReceiverResponse(struct soap*, _trv__CreateReceiverResponse*);
    @endcode

  - <trv:DeleteReceiver> @ref _trv__DeleteReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__DeleteReceiver(struct soap*, _trv__DeleteReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__DeleteReceiver(struct soap*, _trv__DeleteReceiver*);
    @endcode

  - <trv:DeleteReceiverResponse> @ref _trv__DeleteReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__DeleteReceiverResponse(struct soap*, _trv__DeleteReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__DeleteReceiverResponse(struct soap*, _trv__DeleteReceiverResponse*);
    @endcode

  - <trv:ConfigureReceiver> @ref _trv__ConfigureReceiver
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__ConfigureReceiver(struct soap*, _trv__ConfigureReceiver*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__ConfigureReceiver(struct soap*, _trv__ConfigureReceiver*);
    @endcode

  - <trv:ConfigureReceiverResponse> @ref _trv__ConfigureReceiverResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__ConfigureReceiverResponse(struct soap*, _trv__ConfigureReceiverResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__ConfigureReceiverResponse(struct soap*, _trv__ConfigureReceiverResponse*);
    @endcode

  - <trv:SetReceiverMode> @ref _trv__SetReceiverMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__SetReceiverMode(struct soap*, _trv__SetReceiverMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__SetReceiverMode(struct soap*, _trv__SetReceiverMode*);
    @endcode

  - <trv:SetReceiverModeResponse> @ref _trv__SetReceiverModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__SetReceiverModeResponse(struct soap*, _trv__SetReceiverModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__SetReceiverModeResponse(struct soap*, _trv__SetReceiverModeResponse*);
    @endcode

  - <trv:GetReceiverState> @ref _trv__GetReceiverState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverState(struct soap*, _trv__GetReceiverState*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverState(struct soap*, _trv__GetReceiverState*);
    @endcode

  - <trv:GetReceiverStateResponse> @ref _trv__GetReceiverStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trv__GetReceiverStateResponse(struct soap*, _trv__GetReceiverStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trv__GetReceiverStateResponse(struct soap*, _trv__GetReceiverStateResponse*);
    @endcode

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    @endcode

  - <trt:GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <trt:Capabilities> (use wsdl2h option -g to auto-generate)

  - <trt:GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    @endcode

  - <trt:GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    @endcode

  - <trt:GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    @endcode

  - <trt:GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    @endcode

  - <trt:GetAudioOutputs> @ref _trt__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    @endcode

  - <trt:GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    @endcode

  - <trt:CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    @endcode

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    @endcode

  - <trt:GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, _trt__GetProfile*);
    @endcode

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    @endcode

  - <trt:GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    @endcode

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    @endcode

  - <trt:AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <trt:AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <trt:RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    @endcode

  - <trt:AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <trt:RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <trt:AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <trt:AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <trt:RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    @endcode

  - <trt:AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <trt:RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <trt:AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    @endcode

  - <trt:AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    @endcode

  - <trt:RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    @endcode

  - <trt:RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <trt:AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <trt:AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    @endcode

  - <trt:AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <trt:RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    @endcode

  - <trt:RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <trt:AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    @endcode

  - <trt:AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    @endcode

  - <trt:RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <trt:AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    @endcode

  - <trt:AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    @endcode

  - <trt:RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    @endcode

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <trt:GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    @endcode

  - <trt:GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <trt:GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    @endcode

  - <trt:GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    @endcode

  - <trt:GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    @endcode

  - <trt:GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    @endcode

  - <trt:GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    @endcode

  - <trt:GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <trt:GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    @endcode

  - <trt:GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <trt:GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    @endcode

  - <trt:GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <trt:GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    @endcode

  - <trt:GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    @endcode

  - <trt:GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <trt:SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    @endcode

  - <trt:SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <trt:SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    @endcode

  - <trt:SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    @endcode

  - <trt:SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <trt:SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    @endcode

  - <trt:SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    @endcode

  - <trt:SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <trt:GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <trt:GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    @endcode

  - <trt:GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    @endcode

  - <trt:StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    @endcode

  - <trt:StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    @endcode

  - <trt:StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    @endcode

  - <trt:StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    @endcode

  - <trt:SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    @endcode

  - <trt:SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    @endcode

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    @endcode

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    @endcode

  - <trt:GetVideoSourceModes> @ref _trt__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*);
    @endcode

  - <trt:GetVideoSourceModesResponse> @ref _trt__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*);
    @endcode

  - <trt:SetVideoSourceMode> @ref _trt__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*);
    @endcode

  - <trt:SetVideoSourceModeResponse> @ref _trt__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*);
    @endcode

  - <trt:GetOSDs> @ref _trt__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDs(struct soap*, _trt__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDs(struct soap*, _trt__GetOSDs*);
    @endcode

  - <trt:GetOSDsResponse> @ref _trt__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*);
    @endcode

  - <trt:GetOSD> @ref _trt__GetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSD(struct soap*, _trt__GetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSD(struct soap*, _trt__GetOSD*);
    @endcode

  - <trt:GetOSDResponse> @ref _trt__GetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*);
    @endcode

  - <trt:SetOSD> @ref _trt__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSD(struct soap*, _trt__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSD(struct soap*, _trt__SetOSD*);
    @endcode

  - <trt:SetOSDResponse> @ref _trt__SetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*);
    @endcode

  - <trt:GetOSDOptions> @ref _trt__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*);
    @endcode

  - <trt:GetOSDOptionsResponse> @ref _trt__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*);
    @endcode

  - <trt:CreateOSD> @ref _trt__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSD(struct soap*, _trt__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSD(struct soap*, _trt__CreateOSD*);
    @endcode

  - <trt:CreateOSDResponse> @ref _trt__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*);
    @endcode

  - <trt:DeleteOSD> @ref _trt__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*);
    @endcode

  - <trt:DeleteOSDResponse> @ref _trt__DeleteOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*);
    @endcode

@section tse Top-level root elements of schema "http://www.onvif.org/ver10/search/wsdl"

  - <tse:GetServiceCapabilities> @ref _tse__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetServiceCapabilities(struct soap*, _tse__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetServiceCapabilities(struct soap*, _tse__GetServiceCapabilities*);
    @endcode

  - <tse:GetServiceCapabilitiesResponse> @ref _tse__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetServiceCapabilitiesResponse(struct soap*, _tse__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetServiceCapabilitiesResponse(struct soap*, _tse__GetServiceCapabilitiesResponse*);
    @endcode

  - <tse:Capabilities> (use wsdl2h option -g to auto-generate)

  - <tse:GetRecordingSummary> @ref _tse__GetRecordingSummary
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSummary(struct soap*, _tse__GetRecordingSummary*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSummary(struct soap*, _tse__GetRecordingSummary*);
    @endcode

  - <tse:GetRecordingSummaryResponse> @ref _tse__GetRecordingSummaryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSummaryResponse(struct soap*, _tse__GetRecordingSummaryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSummaryResponse(struct soap*, _tse__GetRecordingSummaryResponse*);
    @endcode

  - <tse:GetRecordingInformation> @ref _tse__GetRecordingInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingInformation(struct soap*, _tse__GetRecordingInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingInformation(struct soap*, _tse__GetRecordingInformation*);
    @endcode

  - <tse:GetRecordingInformationResponse> @ref _tse__GetRecordingInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingInformationResponse(struct soap*, _tse__GetRecordingInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingInformationResponse(struct soap*, _tse__GetRecordingInformationResponse*);
    @endcode

  - <tse:GetMediaAttributes> @ref _tse__GetMediaAttributes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMediaAttributes(struct soap*, _tse__GetMediaAttributes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMediaAttributes(struct soap*, _tse__GetMediaAttributes*);
    @endcode

  - <tse:GetMediaAttributesResponse> @ref _tse__GetMediaAttributesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMediaAttributesResponse(struct soap*, _tse__GetMediaAttributesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMediaAttributesResponse(struct soap*, _tse__GetMediaAttributesResponse*);
    @endcode

  - <tse:FindRecordings> @ref _tse__FindRecordings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindRecordings(struct soap*, _tse__FindRecordings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindRecordings(struct soap*, _tse__FindRecordings*);
    @endcode

  - <tse:FindRecordingsResponse> @ref _tse__FindRecordingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindRecordingsResponse(struct soap*, _tse__FindRecordingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindRecordingsResponse(struct soap*, _tse__FindRecordingsResponse*);
    @endcode

  - <tse:GetRecordingSearchResults> @ref _tse__GetRecordingSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSearchResults(struct soap*, _tse__GetRecordingSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSearchResults(struct soap*, _tse__GetRecordingSearchResults*);
    @endcode

  - <tse:GetRecordingSearchResultsResponse> @ref _tse__GetRecordingSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetRecordingSearchResultsResponse(struct soap*, _tse__GetRecordingSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetRecordingSearchResultsResponse(struct soap*, _tse__GetRecordingSearchResultsResponse*);
    @endcode

  - <tse:FindEvents> @ref _tse__FindEvents
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindEvents(struct soap*, _tse__FindEvents*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindEvents(struct soap*, _tse__FindEvents*);
    @endcode

  - <tse:FindEventsResponse> @ref _tse__FindEventsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindEventsResponse(struct soap*, _tse__FindEventsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindEventsResponse(struct soap*, _tse__FindEventsResponse*);
    @endcode

  - <tse:GetEventSearchResults> @ref _tse__GetEventSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetEventSearchResults(struct soap*, _tse__GetEventSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetEventSearchResults(struct soap*, _tse__GetEventSearchResults*);
    @endcode

  - <tse:GetEventSearchResultsResponse> @ref _tse__GetEventSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetEventSearchResultsResponse(struct soap*, _tse__GetEventSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetEventSearchResultsResponse(struct soap*, _tse__GetEventSearchResultsResponse*);
    @endcode

  - <tse:FindPTZPosition> @ref _tse__FindPTZPosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindPTZPosition(struct soap*, _tse__FindPTZPosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindPTZPosition(struct soap*, _tse__FindPTZPosition*);
    @endcode

  - <tse:FindPTZPositionResponse> @ref _tse__FindPTZPositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindPTZPositionResponse(struct soap*, _tse__FindPTZPositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindPTZPositionResponse(struct soap*, _tse__FindPTZPositionResponse*);
    @endcode

  - <tse:GetPTZPositionSearchResults> @ref _tse__GetPTZPositionSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetPTZPositionSearchResults(struct soap*, _tse__GetPTZPositionSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetPTZPositionSearchResults(struct soap*, _tse__GetPTZPositionSearchResults*);
    @endcode

  - <tse:GetPTZPositionSearchResultsResponse> @ref _tse__GetPTZPositionSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetPTZPositionSearchResultsResponse(struct soap*, _tse__GetPTZPositionSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetPTZPositionSearchResultsResponse(struct soap*, _tse__GetPTZPositionSearchResultsResponse*);
    @endcode

  - <tse:FindMetadata> @ref _tse__FindMetadata
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindMetadata(struct soap*, _tse__FindMetadata*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindMetadata(struct soap*, _tse__FindMetadata*);
    @endcode

  - <tse:FindMetadataResponse> @ref _tse__FindMetadataResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__FindMetadataResponse(struct soap*, _tse__FindMetadataResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__FindMetadataResponse(struct soap*, _tse__FindMetadataResponse*);
    @endcode

  - <tse:GetMetadataSearchResults> @ref _tse__GetMetadataSearchResults
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMetadataSearchResults(struct soap*, _tse__GetMetadataSearchResults*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMetadataSearchResults(struct soap*, _tse__GetMetadataSearchResults*);
    @endcode

  - <tse:GetMetadataSearchResultsResponse> @ref _tse__GetMetadataSearchResultsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetMetadataSearchResultsResponse(struct soap*, _tse__GetMetadataSearchResultsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetMetadataSearchResultsResponse(struct soap*, _tse__GetMetadataSearchResultsResponse*);
    @endcode

  - <tse:GetSearchState> @ref _tse__GetSearchState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetSearchState(struct soap*, _tse__GetSearchState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetSearchState(struct soap*, _tse__GetSearchState*);
    @endcode

  - <tse:GetSearchStateResponse> @ref _tse__GetSearchStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__GetSearchStateResponse(struct soap*, _tse__GetSearchStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__GetSearchStateResponse(struct soap*, _tse__GetSearchStateResponse*);
    @endcode

  - <tse:EndSearch> @ref _tse__EndSearch
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__EndSearch(struct soap*, _tse__EndSearch*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__EndSearch(struct soap*, _tse__EndSearch*);
    @endcode

  - <tse:EndSearchResponse> @ref _tse__EndSearchResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tse__EndSearchResponse(struct soap*, _tse__EndSearchResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tse__EndSearchResponse(struct soap*, _tse__EndSearchResponse*);
    @endcode

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, _tds__GetServices*);
    @endcode

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    @endcode

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    @endcode

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    @endcode

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    @endcode

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    @endcode

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    @endcode

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    @endcode

  - <tds:RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    @endcode

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    @endcode

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    @endcode

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    @endcode

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    @endcode

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <tds:GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    @endcode

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    @endcode

  - <tds:GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*);
    @endcode

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    @endcode

  - <tds:SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*);
    @endcode

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    @endcode

  - <tds:AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*);
    @endcode

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    @endcode

  - <tds:RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    @endcode

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    @endcode

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    @endcode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    @endcode

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    @endcode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    @endcode

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    @endcode

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    @endcode

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    @endcode

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    @endcode

  - <tds:GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    @endcode

  - <tds:GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    @endcode

  - <tds:GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    @endcode

  - <tds:GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    @endcode

  - <tds:SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    @endcode

  - <tds:SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    @endcode

  - <tds:GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*);
    @endcode

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    @endcode

  - <tds:CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    @endcode

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    @endcode

  - <tds:DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    @endcode

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    @endcode

  - <tds:SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, _tds__SetUser*);
    @endcode

  - <tds:SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    @endcode

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    @endcode

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    @endcode

  - <tds:GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*);
    @endcode

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    @endcode

  - <tds:SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*);
    @endcode

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    @endcode

  - <tds:SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    @endcode

  - <tds:SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <tds:GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*);
    @endcode

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    @endcode

  - <tds:SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*);
    @endcode

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    @endcode

  - <tds:GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*);
    @endcode

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    @endcode

  - <tds:SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*);
    @endcode

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    @endcode

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    @endcode

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    @endcode

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    @endcode

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    @endcode

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    @endcode

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    @endcode

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    @endcode

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    @endcode

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    @endcode

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    @endcode

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    @endcode

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    @endcode

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    @endcode

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    @endcode

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    @endcode

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    @endcode

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    @endcode

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    @endcode

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    @endcode

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    @endcode

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    @endcode

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    @endcode

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    @endcode

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    @endcode

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    @endcode

  - <tds:CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    @endcode

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    @endcode

  - <tds:GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    @endcode

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    @endcode

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    @endcode

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    @endcode

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    @endcode

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    @endcode

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    @endcode

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    @endcode

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    @endcode

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    @endcode

  - <tds:LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    @endcode

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    @endcode

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    @endcode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    @endcode

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    @endcode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    @endcode

  - <tds:GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    @endcode

  - <tds:GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    @endcode

  - <tds:LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <tds:LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <tds:GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    @endcode

  - <tds:GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    @endcode

  - <tds:LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    @endcode

  - <tds:LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    @endcode

  - <tds:CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    @endcode

  - <tds:CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <tds:SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    @endcode

  - <tds:SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    @endcode

  - <tds:GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    @endcode

  - <tds:GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <tds:DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    @endcode

  - <tds:DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    @endcode

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    @endcode

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    @endcode

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    @endcode

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    @endcode

  - <tds:SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    @endcode

  - <tds:SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <tds:GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    @endcode

  - <tds:GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <tds:GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    @endcode

  - <tds:GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    @endcode

  - <tds:ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    @endcode

  - <tds:ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <tds:GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    @endcode

  - <tds:GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    @endcode

  - <tds:StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    @endcode

  - <tds:StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <tds:StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    @endcode

  - <tds:StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    @endcode

  - <tds:GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    @endcode

  - <tds:GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <tds:CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    @endcode

  - <tds:CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <tds:GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    @endcode

  - <tds:GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    @endcode

  - <tds:SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    @endcode

  - <tds:SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    @endcode

  - <tds:DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    @endcode

  - <tds:DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    @endcode

  - <tds:GetGeoLocation> @ref _tds__GetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    @endcode

  - <tds:GetGeoLocationResponse> @ref _tds__GetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    @endcode

  - <tds:SetGeoLocation> @ref _tds__SetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    @endcode

  - <tds:SetGeoLocationResponse> @ref _tds__SetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    @endcode

  - <tds:DeleteGeoLocation> @ref _tds__DeleteGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    @endcode

  - <tds:DeleteGeoLocationResponse> @ref _tds__DeleteGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    @endcode

@section timg Top-level root elements of schema "http://www.onvif.org/ver20/imaging/wsdl"

  - <timg:GetServiceCapabilities> @ref _timg__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetServiceCapabilities(struct soap*, _timg__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetServiceCapabilities(struct soap*, _timg__GetServiceCapabilities*);
    @endcode

  - <timg:GetServiceCapabilitiesResponse> @ref _timg__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetServiceCapabilitiesResponse(struct soap*, _timg__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetServiceCapabilitiesResponse(struct soap*, _timg__GetServiceCapabilitiesResponse*);
    @endcode

  - <timg:Capabilities> (use wsdl2h option -g to auto-generate)

  - <timg:GetImagingSettings> @ref _timg__GetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*);
    @endcode

  - <timg:GetImagingSettingsResponse> @ref _timg__GetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*);
    @endcode

  - <timg:SetImagingSettings> @ref _timg__SetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*);
    @endcode

  - <timg:SetImagingSettingsResponse> @ref _timg__SetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*);
    @endcode

  - <timg:GetOptions> @ref _timg__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptions(struct soap*, _timg__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptions(struct soap*, _timg__GetOptions*);
    @endcode

  - <timg:GetOptionsResponse> @ref _timg__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*);
    @endcode

  - <timg:Move> @ref _timg__Move
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Move(struct soap*, _timg__Move*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Move(struct soap*, _timg__Move*);
    @endcode

  - <timg:MoveResponse> @ref _timg__MoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__MoveResponse(struct soap*, _timg__MoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__MoveResponse(struct soap*, _timg__MoveResponse*);
    @endcode

  - <timg:GetMoveOptions> @ref _timg__GetMoveOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*);
    @endcode

  - <timg:GetMoveOptionsResponse> @ref _timg__GetMoveOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*);
    @endcode

  - <timg:Stop> @ref _timg__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Stop(struct soap*, _timg__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Stop(struct soap*, _timg__Stop*);
    @endcode

  - <timg:StopResponse> @ref _timg__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__StopResponse(struct soap*, _timg__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__StopResponse(struct soap*, _timg__StopResponse*);
    @endcode

  - <timg:GetStatus> @ref _timg__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatus(struct soap*, _timg__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatus(struct soap*, _timg__GetStatus*);
    @endcode

  - <timg:GetStatusResponse> @ref _timg__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*);
    @endcode

  - <timg:GetPresets> @ref _timg__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetPresets(struct soap*, _timg__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetPresets(struct soap*, _timg__GetPresets*);
    @endcode

  - <timg:GetPresetsResponse> @ref _timg__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetPresetsResponse(struct soap*, _timg__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetPresetsResponse(struct soap*, _timg__GetPresetsResponse*);
    @endcode

  - <timg:GetCurrentPreset> @ref _timg__GetCurrentPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetCurrentPreset(struct soap*, _timg__GetCurrentPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetCurrentPreset(struct soap*, _timg__GetCurrentPreset*);
    @endcode

  - <timg:GetCurrentPresetResponse> @ref _timg__GetCurrentPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetCurrentPresetResponse(struct soap*, _timg__GetCurrentPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetCurrentPresetResponse(struct soap*, _timg__GetCurrentPresetResponse*);
    @endcode

  - <timg:SetCurrentPreset> @ref _timg__SetCurrentPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetCurrentPreset(struct soap*, _timg__SetCurrentPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetCurrentPreset(struct soap*, _timg__SetCurrentPreset*);
    @endcode

  - <timg:SetCurrentPresetResponse> @ref _timg__SetCurrentPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetCurrentPresetResponse(struct soap*, _timg__SetCurrentPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetCurrentPresetResponse(struct soap*, _timg__SetCurrentPresetResponse*);
    @endcode

@section ns1 Top-level root elements of schema "http://www.onvif.org/ver10/pacs"

*/

/* End of /root/source/onvif/generated/onvif.h */
