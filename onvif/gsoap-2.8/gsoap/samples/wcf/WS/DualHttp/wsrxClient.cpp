/* wsrxClient.cpp
   Generated by gSOAP 2.8.16 from ../../../../import/wsrm5.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "wsrxH.h"

SOAP_SOURCE_STAMP("@(#) wsrxClient.cpp ver 2.8.16 2013-08-30 17:47:42 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_send_SOAP_ENV__Fault(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault soap_tmp_SOAP_ENV__Fault;
	if (soap_action == NULL)
		soap_action = "http://www.w3.org/2005/08/addressing/soap/fault";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp_SOAP_ENV__Fault.faultcode = faultcode;
	soap_tmp_SOAP_ENV__Fault.faultstring = faultstring;
	soap_tmp_SOAP_ENV__Fault.faultactor = faultactor;
	soap_tmp_SOAP_ENV__Fault.detail = detail;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Code = SOAP_ENV__Code;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Reason = SOAP_ENV__Reason;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Node = SOAP_ENV__Node;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Role = SOAP_ENV__Role;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Detail = SOAP_ENV__Detail;
	soap_serializeheader(soap);
	soap_serialize_SOAP_ENV__Fault(soap, &soap_tmp_SOAP_ENV__Fault);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_SOAP_ENV__Fault(soap, &soap_tmp_SOAP_ENV__Fault, "SOAP-ENV:Fault", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_SOAP_ENV__Fault(soap, &soap_tmp_SOAP_ENV__Fault, "SOAP-ENV:Fault", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *_param_1)
{
	soap_default_SOAP_ENV__Fault(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_SOAP_ENV__Fault(soap, _param_1, "SOAP-ENV:Fault", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___wsrm__CreateSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrm__CreateSequenceType *wsrm__CreateSequence, struct wsrm__CreateSequenceResponseType *wsrm__CreateSequenceResponse)
{	struct __wsrm__CreateSequence soap_tmp___wsrm__CreateSequence;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/CreateSequence";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___wsrm__CreateSequence.wsrm__CreateSequence = wsrm__CreateSequence;
	soap_serializeheader(soap);
	soap_serialize___wsrm__CreateSequence(soap, &soap_tmp___wsrm__CreateSequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__CreateSequence(soap, &soap_tmp___wsrm__CreateSequence, "-wsrm:CreateSequence", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__CreateSequence(soap, &soap_tmp___wsrm__CreateSequence, "-wsrm:CreateSequence", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!wsrm__CreateSequenceResponse)
		return soap_closesock(soap);
	soap_default_wsrm__CreateSequenceResponseType(soap, wsrm__CreateSequenceResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_wsrm__CreateSequenceResponseType(soap, wsrm__CreateSequenceResponse, "wsrm:CreateSequenceResponse", "wsrm:CreateSequenceResponseType");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___wsrm__CloseSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrm__CloseSequenceType *wsrm__CloseSequence, struct wsrm__CloseSequenceResponseType *wsrm__CloseSequenceResponse)
{	struct __wsrm__CloseSequence soap_tmp___wsrm__CloseSequence;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/CloseSequence";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___wsrm__CloseSequence.wsrm__CloseSequence = wsrm__CloseSequence;
	soap_serializeheader(soap);
	soap_serialize___wsrm__CloseSequence(soap, &soap_tmp___wsrm__CloseSequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__CloseSequence(soap, &soap_tmp___wsrm__CloseSequence, "-wsrm:CloseSequence", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__CloseSequence(soap, &soap_tmp___wsrm__CloseSequence, "-wsrm:CloseSequence", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!wsrm__CloseSequenceResponse)
		return soap_closesock(soap);
	soap_default_wsrm__CloseSequenceResponseType(soap, wsrm__CloseSequenceResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_wsrm__CloseSequenceResponseType(soap, wsrm__CloseSequenceResponse, "wsrm:CloseSequenceResponse", "wsrm:CloseSequenceResponseType");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___wsrm__TerminateSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrm__TerminateSequenceType *wsrm__TerminateSequence, struct wsrm__TerminateSequenceResponseType *wsrm__TerminateSequence_)
{	struct __wsrm__TerminateSequence soap_tmp___wsrm__TerminateSequence;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequence";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___wsrm__TerminateSequence.wsrm__TerminateSequence = wsrm__TerminateSequence;
	soap_serializeheader(soap);
	soap_serialize___wsrm__TerminateSequence(soap, &soap_tmp___wsrm__TerminateSequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__TerminateSequence(soap, &soap_tmp___wsrm__TerminateSequence, "-wsrm:TerminateSequence", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__TerminateSequence(soap, &soap_tmp___wsrm__TerminateSequence, "-wsrm:TerminateSequence", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!wsrm__TerminateSequence_)
		return soap_closesock(soap);
	soap_default_wsrm__TerminateSequenceResponseType(soap, wsrm__TerminateSequence_);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_wsrm__TerminateSequenceResponseType(soap, wsrm__TerminateSequence_, "wsrm:TerminateSequence", "wsrm:TerminateSequenceResponseType");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsrm__CreateSequenceResponse(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrm__CreateSequenceResponseType *wsrm__CreateSequenceResponse)
{	struct __wsrm__CreateSequenceResponse soap_tmp___wsrm__CreateSequenceResponse;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/CreateSequenceResponse";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___wsrm__CreateSequenceResponse.wsrm__CreateSequenceResponse = wsrm__CreateSequenceResponse;
	soap_serializeheader(soap);
	soap_serialize___wsrm__CreateSequenceResponse(soap, &soap_tmp___wsrm__CreateSequenceResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__CreateSequenceResponse(soap, &soap_tmp___wsrm__CreateSequenceResponse, "-wsrm:CreateSequenceResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__CreateSequenceResponse(soap, &soap_tmp___wsrm__CreateSequenceResponse, "-wsrm:CreateSequenceResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsrm__CreateSequenceResponse(struct soap *soap, struct __wsrm__CreateSequenceResponse *_param_2)
{
	soap_default___wsrm__CreateSequenceResponse(soap, _param_2);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsrm__CreateSequenceResponse(soap, _param_2, "-wsrm:CreateSequenceResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsrm__CloseSequenceResponse(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrm__CloseSequenceResponseType *wsrm__CloseSequenceResponse)
{	struct __wsrm__CloseSequenceResponse soap_tmp___wsrm__CloseSequenceResponse;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/CloseSequenceResponse";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___wsrm__CloseSequenceResponse.wsrm__CloseSequenceResponse = wsrm__CloseSequenceResponse;
	soap_serializeheader(soap);
	soap_serialize___wsrm__CloseSequenceResponse(soap, &soap_tmp___wsrm__CloseSequenceResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__CloseSequenceResponse(soap, &soap_tmp___wsrm__CloseSequenceResponse, "-wsrm:CloseSequenceResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__CloseSequenceResponse(soap, &soap_tmp___wsrm__CloseSequenceResponse, "-wsrm:CloseSequenceResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsrm__CloseSequenceResponse(struct soap *soap, struct __wsrm__CloseSequenceResponse *_param_3)
{
	soap_default___wsrm__CloseSequenceResponse(soap, _param_3);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsrm__CloseSequenceResponse(soap, _param_3, "-wsrm:CloseSequenceResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsrm__TerminateSequenceResponse(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsrm__TerminateSequenceResponseType *wsrm__TerminateSequenceResponse)
{	struct __wsrm__TerminateSequenceResponse soap_tmp___wsrm__TerminateSequenceResponse;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequenceResponse";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___wsrm__TerminateSequenceResponse.wsrm__TerminateSequenceResponse = wsrm__TerminateSequenceResponse;
	soap_serializeheader(soap);
	soap_serialize___wsrm__TerminateSequenceResponse(soap, &soap_tmp___wsrm__TerminateSequenceResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__TerminateSequenceResponse(soap, &soap_tmp___wsrm__TerminateSequenceResponse, "-wsrm:TerminateSequenceResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__TerminateSequenceResponse(soap, &soap_tmp___wsrm__TerminateSequenceResponse, "-wsrm:TerminateSequenceResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsrm__TerminateSequenceResponse(struct soap *soap, struct __wsrm__TerminateSequenceResponse *_param_4)
{
	soap_default___wsrm__TerminateSequenceResponse(soap, _param_4);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsrm__TerminateSequenceResponse(soap, _param_4, "-wsrm:TerminateSequenceResponse", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsrm__SequenceAcknowledgement(struct soap *soap, const char *soap_endpoint, const char *soap_action)
{	struct __wsrm__SequenceAcknowledgement soap_tmp___wsrm__SequenceAcknowledgement;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/SequenceAcknowledgement";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___wsrm__SequenceAcknowledgement(soap, &soap_tmp___wsrm__SequenceAcknowledgement);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__SequenceAcknowledgement(soap, &soap_tmp___wsrm__SequenceAcknowledgement, "-wsrm:SequenceAcknowledgement", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__SequenceAcknowledgement(soap, &soap_tmp___wsrm__SequenceAcknowledgement, "-wsrm:SequenceAcknowledgement", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsrm__SequenceAcknowledgement(struct soap *soap, struct __wsrm__SequenceAcknowledgement *_param_5)
{
	soap_default___wsrm__SequenceAcknowledgement(soap, _param_5);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsrm__SequenceAcknowledgement(soap, _param_5, "-wsrm:SequenceAcknowledgement", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsrm__AckRequested(struct soap *soap, const char *soap_endpoint, const char *soap_action)
{	struct __wsrm__AckRequested soap_tmp___wsrm__AckRequested;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/AckRequested";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___wsrm__AckRequested(soap, &soap_tmp___wsrm__AckRequested);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__AckRequested(soap, &soap_tmp___wsrm__AckRequested, "-wsrm:AckRequested", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__AckRequested(soap, &soap_tmp___wsrm__AckRequested, "-wsrm:AckRequested", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsrm__AckRequested(struct soap *soap, struct __wsrm__AckRequested *_param_6)
{
	soap_default___wsrm__AckRequested(soap, _param_6);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsrm__AckRequested(soap, _param_6, "-wsrm:AckRequested", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsrm__LastMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action)
{	struct __wsrm__LastMessage soap_tmp___wsrm__LastMessage;
	if (soap_action == NULL)
		soap_action = "http://schemas.xmlsoap.org/ws/2005/02/rm/LastMessage";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___wsrm__LastMessage(soap, &soap_tmp___wsrm__LastMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsrm__LastMessage(soap, &soap_tmp___wsrm__LastMessage, "-wsrm:LastMessage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsrm__LastMessage(soap, &soap_tmp___wsrm__LastMessage, "-wsrm:LastMessage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsrm__LastMessage(struct soap *soap, struct __wsrm__LastMessage *_param_7)
{
	soap_default___wsrm__LastMessage(soap, _param_7);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsrm__LastMessage(soap, _param_7, "-wsrm:LastMessage", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of wsrxClient.cpp */
